<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Declaration (Natural Disaster(1))' inline='true' name='federated.1dn464a1v42l5o17lv7kv1hgms8p' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Natural Disaster(1)' name='excel-direct.09ya0560214ptk1atguvf1afwrjp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/study material/SPRING 18/Data Visualisation/Assignments/Ass5/Natural Disaster(1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.09ya0560214ptk1atguvf1afwrjp' name='Declaration' table='[Declaration$]' type='table'>
          <columns gridOrigin='A1:I10001:no:A1:I10001:0' header='yes' outcome='2'>
            <column datatype='integer' name='Disaster Number' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='datetime' name='Declaration Date' ordinal='2' />
            <column datatype='string' name='Disaster Type' ordinal='3' />
            <column datatype='string' name='Incident Type' ordinal='4' />
            <column datatype='string' name='Title' ordinal='5' />
            <column datatype='datetime' name='Incident Begin Date' ordinal='6' />
            <column datatype='datetime' name='Incident End Date' ordinal='7' />
            <column datatype='string' name='Declared County/Area' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Disaster Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Disaster Number]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Disaster Number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declaration Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Declaration Date]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Declaration Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Disaster Type]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Disaster Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident Type]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Begin Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident Begin Date]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Incident Begin Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident End Date]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Incident End Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declared County/Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Declared County/Area]</local-name>
            <parent-name>[Declaration]</parent-name>
            <remote-alias>Declared County/Area</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Declaration]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I10001:no:A1:I10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Disaster Number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='State, Declared County/Area'>
          <field>[State]</field>
          <field>[Declared County/Area]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.668182' measure-ordering='alphabetic' measure-percentage='0.331818' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Incident Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hurricane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chemical&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Earthquake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Severe Storm&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mud/Landslide&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Typhoon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coastal Storm&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tornado&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Severe Storm(s)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Snow&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tsunami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Volcano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Freezing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dam/Levee Break&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Terrorist&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Severe Ice Storm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Drought&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (2) (Oil Refineries and Natural Disaster_2)' inline='true' name='federated.03sxkq112onpbf1bk45fz1vg991k' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Oil Refineries and Natural Disaster_2' name='excel-direct.0rrnjm21w9icfz0zjftzi0k2p1ip'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/study material/SPRING 18/Data Visualisation/Assignments/Ass5/Oil Refineries and Natural Disaster_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0rrnjm21w9icfz0zjftzi0k2p1ip' name='Sheet1 (2)' table='[&apos;Sheet1 (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Point Type' ordinal='0' />
            <column datatype='string' name='Refinery Name' ordinal='1' />
            <column datatype='integer' name='Disaster Number' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='datetime' name='Declaration Date' ordinal='4' />
            <column datatype='string' name='Disaster Type' ordinal='5' />
            <column datatype='string' name='Incident Type' ordinal='6' />
            <column datatype='string' name='Title' ordinal='7' />
            <column datatype='datetime' name='Incident Begin Date' ordinal='8' />
            <column datatype='datetime' name='Incident End Date' ordinal='9' />
            <column datatype='string' name='Declared County/Area' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Point Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Point Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Point Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refinery Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Refinery Name]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Refinery Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Disaster Number]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Disaster Number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declaration Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Declaration Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Declaration Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Disaster Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Disaster Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Begin Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident Begin Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident Begin Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident End Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident End Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declared County/Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Declared County/Area]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Declared County/Area</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Disaster Number]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Point Type]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Point Type]' derivation='None' name='[none:Point Type:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='State, Declared County/Area'>
          <field>[State]</field>
          <field>[Declared County/Area]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.727924' measure-ordering='alphabetic' measure-percentage='0.272076' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Point Type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Disaster&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Refinery&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Point Type:nk]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;Refinery&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Disaster&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (2) (Oil Refineries and Natural Disaster_2) (2)' inline='true' name='federated.1hdm6iw1qunfln1bcnx2d0q7w6g8' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Oil Refineries and Natural Disaster_2' name='excel-direct.0xk5b5u1hyw7ex0zpwpyb1cduk3b'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/study material/SPRING 18/Data Visualisation/Assignments/Ass5/Oil Refineries and Natural Disaster_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0xk5b5u1hyw7ex0zpwpyb1cduk3b' name='Sheet1 (2)' table='[&apos;Sheet1 (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Point Type' ordinal='0' />
            <column datatype='string' name='Refinery Name' ordinal='1' />
            <column datatype='integer' name='Disaster Number' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='datetime' name='Declaration Date' ordinal='4' />
            <column datatype='string' name='Disaster Type' ordinal='5' />
            <column datatype='string' name='Incident Type' ordinal='6' />
            <column datatype='string' name='Title' ordinal='7' />
            <column datatype='datetime' name='Incident Begin Date' ordinal='8' />
            <column datatype='datetime' name='Incident End Date' ordinal='9' />
            <column datatype='string' name='Declared County/Area' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Point Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Point Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Point Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refinery Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Refinery Name]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Refinery Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Disaster Number]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Disaster Number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declaration Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Declaration Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Declaration Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Disaster Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Disaster Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Begin Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident Begin Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident Begin Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident End Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident End Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declared County/Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Declared County/Area]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Declared County/Area</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Disaster Number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='State, Declared County/Area'>
          <field>[State]</field>
          <field>[Declared County/Area]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.725537' measure-ordering='alphabetic' measure-percentage='0.274463' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Incident Type:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Null&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coastal Storm&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Volcano&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Flood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Severe Storm(s)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Freezing&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terrorist&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dam/Levee Break&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chemical&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hurricane&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Snow&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tornado&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drought&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Typhoon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Severe Ice Storm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mud/Landslide&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Earthquake&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tsunami&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Severe Storm&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fire&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (2) (Oil Refineries and Natural Disaster_2) (3)' inline='true' name='federated.1f5t7dc0sb0lte1d69gb70gy3ouz' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Oil Refineries and Natural Disaster_2' name='excel-direct.1w5vf9x0ls5yvo0zjg7if13rae59'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/study material/SPRING 18/Data Visualisation/Assignments/Ass5/Oil Refineries and Natural Disaster_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1w5vf9x0ls5yvo0zjg7if13rae59' name='Sheet1 (2)' table='[&apos;Sheet1 (2)$&apos;]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Point Type' ordinal='0' />
            <column datatype='string' name='Refinery Name' ordinal='1' />
            <column datatype='integer' name='Disaster Number' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='datetime' name='Declaration Date' ordinal='4' />
            <column datatype='string' name='Disaster Type' ordinal='5' />
            <column datatype='string' name='Incident Type' ordinal='6' />
            <column datatype='string' name='Title' ordinal='7' />
            <column datatype='datetime' name='Incident Begin Date' ordinal='8' />
            <column datatype='datetime' name='Incident End Date' ordinal='9' />
            <column datatype='string' name='Declared County/Area' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Point Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Point Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Point Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refinery Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Refinery Name]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Refinery Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Disaster Number]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Disaster Number</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declaration Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Declaration Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Declaration Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disaster Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Disaster Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Disaster Type</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Incident Type]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Title]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Title</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident Begin Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident Begin Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident Begin Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Incident End Date]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Incident End Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Declared County/Area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Declared County/Area]</local-name>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias>Declared County/Area</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1 (2)]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='No. of Incidents' datatype='integer' name='[Calculation_1036953847280713728]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(SUM([Number of Records]))'>
          <table-calc level-break='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' ordering-type='Field'>
            <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
            <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
            <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1036953847281639425]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_DENSE([Calculation_1036953847280713728],&apos;desc&apos;)'>
          <table-calc ordering-type='Field'>
            <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
            <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
            <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
          </table-calc>
        </calculation>
      </column>
      <column caption='Column 2*2' datatype='integer' name='[Calculation_1036953847282155522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_1036953847281639425] = 1 &#13;&#10;or [Calculation_1036953847281639425] = 3&#13;&#10;THEN 1&#13;&#10;ELSEIF [Calculation_1036953847281639425] = 2&#13;&#10;or [Calculation_1036953847281639425] = 4&#13;&#10;THEN 2&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Row 2*2' datatype='integer' name='[Calculation_1036953847282659331]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Calculation_1036953847281639425] &lt;= 2 THEN 1&#13;&#10;ELSEIF [Calculation_1036953847281639425] &lt;= 4 THEN 2&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Disaster Number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='State, Declared County/Area'>
          <field>[State]</field>
          <field>[Declared County/Area]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.625298' measure-ordering='alphabetic' measure-percentage='0.374702' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Natural Disasters' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Incident Type' />
        <param name='target' value='Natural Disasters' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Disaster Multi Maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2) (Oil Refineries and Natural Disaster_2) (3)' name='federated.1f5t7dc0sb0lte1d69gb70gy3ouz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1f5t7dc0sb0lte1d69gb70gy3ouz'>
            <column caption='No. of Incidents' datatype='integer' name='[Calculation_1036953847280713728]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_SUM(SUM([Number of Records]))'>
                <table-calc level-break='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' ordering-type='Field'>
                  <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                  <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                  <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_1036953847281639425]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_DENSE([Calculation_1036953847280713728],&apos;desc&apos;)'>
                <table-calc ordering-type='Field'>
                  <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                  <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                  <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
                </table-calc>
              </calculation>
            </column>
            <column caption='Column 2*2' datatype='integer' name='[Calculation_1036953847282155522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_1036953847281639425] = 1 &#13;&#10;or [Calculation_1036953847281639425] = 3&#13;&#10;THEN 1&#13;&#10;ELSEIF [Calculation_1036953847281639425] = 2&#13;&#10;or [Calculation_1036953847281639425] = 4&#13;&#10;THEN 2&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Row 2*2' datatype='integer' name='[Calculation_1036953847282659331]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Calculation_1036953847281639425] &lt;= 2 THEN 1&#13;&#10;ELSEIF [Calculation_1036953847281639425] &lt;= 4 THEN 2&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Declared County/Area]' derivation='None' name='[none:Declared County/Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1036953847280713728]' derivation='User' name='[usr:Calculation_1036953847280713728:qk]' pivot='key' type='quantitative'>
              <table-calc level-break='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1036953847281639425]' derivation='User' name='[usr:Calculation_1036953847281639425:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
              <table-calc field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Calculation_1036953847280713728]' level-break='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1036953847282155522]' derivation='User' name='[usr:Calculation_1036953847282155522:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-field='' ordering-type='Field' />
              <table-calc field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Calculation_1036953847281639425]' ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
              <table-calc field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Calculation_1036953847280713728]' level-break='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_1036953847282659331]' derivation='User' name='[usr:Calculation_1036953847282659331:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Calculation_1036953847281639425]' ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
              <table-calc field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Calculation_1036953847280713728]' level-break='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' ordering-type='Field'>
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Incident Type]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Declared County/Area]' />
                <order field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[State]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:Incident Type:nk]'>
            <groupfilter function='level-members' level='[none:Incident Type:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847281639425:qk]' included-values='in-range'>
            <min>1</min>
            <max>4</max>
          </filter>
          <slices>
            <column>[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:State:nk]</column>
            <column>[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847281639425:qk]</column>
            <column>[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:Incident Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847281639425:qk]' />
              <lod column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:State:nk]' />
              <lod column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:Declared County/Area:nk]' />
              <text column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:Incident Type:nk]' />
              <text column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847280713728:qk]' />
              <geometry column='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Arial' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Geometry (generated)]' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847282659331:ok] * [federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Latitude (generated)])</rows>
        <cols>([federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847282155522:ok] * [federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Longitude (generated)])</cols>
      </table>
    </worksheet>
    <worksheet name='Natural Disasters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Declaration (Natural Disaster(1))' name='federated.1dn464a1v42l5o17lv7kv1hgms8p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dn464a1v42l5o17lv7kv1hgms8p'>
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:Incident Type:nk]'>
            <groupfilter function='level-members' level='[none:Incident Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AL&quot;' function='range' level='[none:State:nk]' to='&quot;GA&quot;' />
              <groupfilter from='&quot;IA&quot;' function='range' level='[none:State:nk]' to='&quot;MO&quot;' />
              <groupfilter from='&quot;MS&quot;' function='range' level='[none:State:nk]' to='&quot;PA&quot;' />
              <groupfilter from='&quot;RI&quot;' function='range' level='[none:State:nk]' to='&quot;VA&quot;' />
              <groupfilter from='&quot;VT&quot;' function='range' level='[none:State:nk]' to='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:State:nk]</column>
            <column>[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:Incident Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:Incident Type:nk]' />
              <size column='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[sum:Number of Records:qk]' />
              <lod column='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:State:nk]' />
              <tooltip column='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1dn464a1v42l5o17lv7kv1hgms8p].[Latitude (generated)]</rows>
        <cols>[federated.1dn464a1v42l5o17lv7kv1hgms8p].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Oil Refineries and Natural Disaster'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2) (Oil Refineries and Natural Disaster_2)' name='federated.03sxkq112onpbf1bk45fz1vg991k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03sxkq112onpbf1bk45fz1vg991k'>
            <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Point Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Declared County/Area]' derivation='None' name='[none:Declared County/Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Point Type]' derivation='None' name='[none:Point Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Incident Type:nk]'>
            <groupfilter function='level-members' level='[none:Incident Type:nk]' />
          </filter>
          <filter class='categorical' column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;AL&quot;' function='range' level='[none:State:nk]' to='&quot;GA&quot;' />
              <groupfilter from='&quot;IA&quot;' function='range' level='[none:State:nk]' to='&quot;MO&quot;' />
              <groupfilter from='&quot;MS&quot;' function='range' level='[none:State:nk]' to='&quot;PA&quot;' />
              <groupfilter from='&quot;RI&quot;' function='range' level='[none:State:nk]' to='&quot;VA&quot;' />
              <groupfilter from='&quot;VT&quot;' function='range' level='[none:State:nk]' to='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03sxkq112onpbf1bk45fz1vg991k].[none:State:nk]</column>
            <column>[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Incident Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]' />
              <shape column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]' />
              <size column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]' />
              <lod column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:State:nk]' />
              <lod column='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Declared County/Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03sxkq112onpbf1bk45fz1vg991k].[Latitude (generated)]</rows>
        <cols>[federated.03sxkq112onpbf1bk45fz1vg991k].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Oil Refinery - States'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (2) (Oil Refineries and Natural Disaster_2) (2)' name='federated.1hdm6iw1qunfln1bcnx2d0q7w6g8' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hdm6iw1qunfln1bcnx2d0q7w6g8'>
            <column datatype='string' name='[Declared County/Area]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[Incident Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Point Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Declared County/Area]' derivation='None' name='[none:Declared County/Area:nk]' pivot='key' type='nominal' />
            <column-instance column='[Incident Type]' derivation='None' name='[none:Incident Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Point Type]' derivation='None' name='[none:Point Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;WA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Incident Type:nk]' />
              <size column='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Point Type:nk]' />
              <lod column='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:State:nk]' />
              <lod column='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Declared County/Area:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[Latitude (generated)]</rows>
        <cols>[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[Longitude (generated)]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Natural Disaster in ConocoPhillips in US' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Natural Disaster in C</run>
            <run fontcolor='#000000' fontname='Benton Sans Book'>onocoPhillips in US</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='7' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='4253' id='8' type='title' w='98426' x='787' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='94087' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='5083'>
              <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='5083' />
              <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='15560'>
                <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Natural Disaster data of states of US' captured-sheet='Natural Disasters' id='1' />
                    <story-point caption='Oil refineries of ConocoPhillips in US ' captured-sheet='Oil Refineries and Natural Disaster' id='2'>
                      <capturedDeltas>
                        <worksheet name='Oil Refineries and Natural Disaster'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.03sxkq112onpbf1bk45fz1vg991k].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.03sxkq112onpbf1bk45fz1vg991k].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                            </style-rule>
                          </style>
                          <highlight>
                            <color-one-way>
                              <field>[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Incident Type:nk]</field>
                              <field>[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]</field>
                            </color-one-way>
                          </highlight>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Natural Disasters in Oil refineries of ConocoPhillips in US ' captured-sheet='Oil Refinery - States' id='3' />
                    <story-point caption='Multimaps_Natural disasters in Oil Refineries ' captured-sheet='Disaster Multi Maps' id='4'>
                      <capturedDeltas>
                        <worksheet name='Disaster Multi Maps'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Latitude (generated)]' field-type='quantitative' max='8280069.0142876944' min='976318.95182404993' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[Longitude (generated)]' field-type='quantitative' max='-7431810.8740836419' min='-14676974.706099719' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Natural Disasters'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:Incident Type:nk]' size='133' type='filter' />
            <card param='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:State:nk]' size='85' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:Incident Type:nk]' size='113' type='color' />
            <card pane-specification-id='0' param='[federated.1dn464a1v42l5o17lv7kv1hgms8p].[sum:Number of Records:qk]' size='46' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:Declared County/Area:nk]</field>
            <field>[federated.1dn464a1v42l5o17lv7kv1hgms8p].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Oil Refineries and Natural Disaster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:State:nk]' type='filter' values='relevant' />
            <card param='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Incident Type:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]' type='size' />
            <card pane-specification-id='0' param='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]'>
          <color-one-way>
            <field>[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Incident Type:nk]</field>
            <field>[federated.03sxkq112onpbf1bk45fz1vg991k].[none:Point Type:nk]</field>
          </color-one-way>
          <bucket-selection>
            <bucket>&quot;Refinery&quot;</bucket>
          </bucket-selection>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Oil Refinery - States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:State:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Incident Type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Point Type:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Incident Type:nk]</field>
            <field>[federated.1hdm6iw1qunfln1bcnx2d0q7w6g8].[none:Point Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Disaster Multi Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='69' type='filters' />
            <card size='266' type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:Incident Type:nk]' type='filter' />
            <card param='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:State:nk]' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[usr:Calculation_1036953847281639425:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f5t7dc0sb0lte1d69gb70gy3ouz].[none:Incident Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Natural Disaster in ConocoPhillips in US'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Disaster Multi Maps' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9eZwcV30v+q29q3qbnp5902ZpJEvWYssS3mRWgw2GJHBJCAkkJLyXm3dD
      ciHhkeTmJp/c+3JDbnY+j+SFcAmEJYEEuIGwG4NtvMuyLWuxlpFmpNFsPTM9vVVX1/b+aP1K
      p89UdffIErLG8/t85tPTXVWnTp367dsRfN/3sQZr8AoF8VpPYA3W4FrCGgGswSsa1ghgDV7R
      sEYAa/CKhjUCWIPrDjynitMvHsfMQjH4zfd95OZzKxjFR7W0uEYAa3C9gYcffP1LmFg0USiW
      L/3se/jGt/69/WF8YPzkCchXfoJrsAZXEfwSxmcV/Pxbd0P2y/inT34CVR/Y9dq3AgC+/Z1v
      4s5X7ce3n3gBxrnjmDMk5JYk9At5aHEFtphCLTGCn3vLAdywY9eaBFiD6wyEGFRhCQtlC+XF
      CzDjG3HPbaOYnK6rP65dQ9UyUTFrAHTc/dq70LN+FAf2DAJqAq99wxshOXkAwBPf+eqaBFiD
      6w1U/OTb34IHHvgGBm+8Ffs3SnjybA13v3ozzsZr6DWAR586gs2bNqJzsAspoxM7NsaQ0JMY
      1W0YehzbR7cA8OGKCoS1SPAavJLhZacC2bZ9raewBqsQovDqZUcAtVrtWk9hDVYhROHVy44A
      1mANfpywRgDXIfieixcPP4rHnz19rady3cMaAVyHIIgSRm/ahbSmXOupXPewRgBr8IqGtTjA
      dQi+5+K5px7D+LQFJRnHDUPZaz2l6xZednGAcrmMeDx+raexBqsMovCqQQK4rotrTQ+e58Fx
      nGs6hzVYfRCFVzJ/kud5P7ZJhYHneXBdN/SY7/uoVqtwHCcgVEEQgjn7vg9BECCKYsM1dI4g
      CBAEoeUcaGzbtiGKImQ5XFNk50D/+74P13UhyzJ834coipFMhZ1Ls3nWajWoqrrsek3TIMsy
      KpVKcA/DMCBJEizLQq1Wg+M4EEWxYU1WAuzc6TlprvS92ZrScfY6y7KgaVpwHXsPdmz+WVVV
      heu6ME0zeOdRcyBub5omXNcNruWh4c0qyrX3KjiOA03TGn7zfR+e58GyLMRiMdRqNbiuGywC
      IZvneZAkqeE6AAECtHpZBISImqbBNE3IstwSgVgCcBwHkiQ1vFieKNl7sfOi+fPzjCJeTdPg
      OE4Q6VRVNVgP4ngvhQAIiDnS2O2sI13Hrj198u+JmAV9DyMARVGwtLTUcD17HTsevQOgvqay
      LDfgVXDPlS/FtQHHcVCtVlGpVCBJEmKxWMMiEOfnkYtdyHa5Pxs2j8ViARcJOzeKu7OcnOWA
      7LVh8wpDdFbCsGDbNlzXRTweb7jG8zxUq9WWz9oOsMjJEnW7qnKYlOOfp933VK1WG6S967qh
      a0sMzLKspnP1PO/6IABBEKCqKmKxGADAsqxADBI3IM7EAi1Mq5fGnsOqUPRiDMMIDaWz49O5
      oiiGvnQAkapdK5AkKVI1JRWHVCRiFFH2HM3X87xIAmbXQtO0ZRyWR1h+nflz2TWge4fNKeo9
      kRrKIj/9TvfggX3+qHlJknT9uEEFQUAsFgt0SHYRWR2Pf9h29H56STzXpmNAHQld122QOr7v
      N4hyAl4s82I/iss3gyjitSwLrusGBFoul0O5bLv3Yc+Jx+NQFAW2baNUKrV1TZgN044612xe
      rusin6/n8PMMp9X1zaS0IAjXhwQgEEURuq7DMIxlD+95HnRdb0BI9qW0EtnNForuzXMuUrma
      Xcdyvnb15pWA53kN0ilMJVAUJdB/WQRqJhFFUYSiKG3PmR03Clgpyf/OjhF2HXuflUIz++e6
      IgACRVECdYiA9D0yAsP06mZcIuzFsC+kmXeM9wLx1/OekChodbxd4NUJTdNgGAZ0XW84ZyVj
      tIKVeNjYcZvZAmHXkorJr/nlrtt1SQCkDiWTyQa1olKpwHEcGIYREEi7KhD/x4OiKHAcJ5QQ
      wpCelTpRHiD+mmbnNLsmTGcmRKlUKhgfHw/0efYZeXuFHdtxHCwtLaFUKgXMJWptWhnxYec2
      U1Wjro863my9NE1DIpGIPH7d2AA8CIIAWZaRSCRQLpcDNx2pAwsLC6hWq5fFGciFRi48At5d
      R7/xL4TXg8NEeNg1YS499ppWhBR2X4pJ2LbddrERy2E9z4NhGKhWqy+rWg1WukapOPF4HKqq
      BgQdBqsmFaJSqTQgfKVSgaZpiMViLSPLvBiuVqtQVRW2bS+LSURdAyxHQJ44eC7PEwEFiNgx
      m92XzqOxKEBI8Rw6t1qtYmlpCZIkwTAMWJYFXdeh6/oygmS/S5KEVCq1bC62baNYLDb8FqX/
      hxF8tVpdtq7tqk9h9wy7NpFIQJZlVKvV4H5heHVdqkBhoOs6KpUK8vk8fL/uIzYMI5SD0/8s
      hKkRzYBXl9oxclsZiq1UgFYQ5eLUdR29vb1IJBKwbRuGYWBpaQlTU1Oo1WqhBrGu60ilUoF0
      ZUGW5dCYQDP1rpU3pt1rWIKKQn5VVSEIAorFYst4yHWrAoVBKpVCrVZDoVAIDGGeU7PuzlbQ
      ymBloZVuTN95VeeleIdY7k9jkrTjiUkQhIDrA0BPTw+WlpaQy+UgSRJs2w4QO5VKQRRFzM7O
      Ih6PY35+Hh0dHYE0EAQBiqIE6+g4Ttv2AX2yc496Ll4FbTY2gSRJUBQFxWIxGKPpGq4WFYiu
      NU0z+E4BFEKKZkjLvoxqtRqkXETlAoVx82YiOew+7EsWhHp8g7hXs+vZMYio6L409zAVLWoc
      27ahKAokSQryiGRZDgjB930sLi6iUqmgq6srcDDQfZeWlhpiMLxkZOfg+/4yFYhfs3bfUxjo
      uh6owqxK3NHR0Tob9HoHXddhWVaDSCYkDpMELISJYUVRYJomJEkK5eZhEobnyuzYvNuO9cS0
      sg/4e7DjseeShIlCKJ4LA5fcyrquQxAEJJPJZdd2dnYilUphbm4Ooiiiq6srUIOaqW5hax12
      Lpsz1Oxa/lnZ76qqwrIsWJYVxG1Y128YrCoCoHwVSjkI003b0bN5Q7BWq0Uaw3RelP7L35NH
      TvbalQpj/lmiJBB7PIw4SDUKYwKu6wZEKssy+vv7YZomLly4gGQyiXQ6DcMwlhnFLLAR9DDd
      vRmBtOMMoLkRw5uZmYHjOJBlGaqqoqurK3Juq8YIJmgmWtsF9hrynfMuxGYGNUFUFiZ5a9qx
      G9oFlthYvZdNcQ8buxnyU5oF/wy6rmNoaAi+72NiYqKlrs5LULI5CMKkaTvAE4lt21hYWEB/
      fz+GhoYwNDQEwzBQqVQix1h1BMDr6ywRrGSR2RemKEqQhx6m1rBcjUc+nkgoZTsM4QRBaEiY
      a+Y54cfkxyEg7h1mDNZqNUiShGq1Gnh7HMdBpVJBoVBAuVwOAmJsDIAkQyKRQHd3NxYWFhqk
      Lq/qsXP1/Xr+FFvTwa93O++Jf6c0b03TAkOYJEMzQ3hVqUBAIwdkuRKrfqykOIaujcViy1xq
      Yfo4C2G5QmHJczyR0nhhakKzOQtCPdrLxhOixgfqhFMuX2oxXqvVApuHvGhkUxWLxcCtXKvV
      YNs2fN9HLBaD67rI5XINqkbYGrProKoqqtVqA7LyiN/qPfFjF4tFZLPZSBUwDFYdAQCXglmE
      uDywhBAGUYZklNrCuyJ5zsbep5lOy/+18qbw9gP9Tx6ZZsgTldKhaRps2w7Wj1yjQL26isaT
      JAmapsF1XXR2dkLXdSwuLkLX9SBrl85jVR52jWKxWEPePpuwxz4jD1ESwvO80KKuZtJk1REA
      vXTyCNGLprx54iq2bUciiCAIQRkij4Bk0DUjhrDvUZKCR2LWp04FH2HjREEUobDHiUFomhbq
      xSKuTOtmmiZisVjgKWLHp/kbhoFkMonJyUl0d3fDdV1YloVEIhGsV6FQaIjK071IJSqVSkFJ
      J4DguihpyM69XC4HaQ/s/FrVmK86AgAuvRRFUYJIJ+mCpH/zGaMskAHIA5tqwNoavHrFG4Rs
      SSARYBRi8inIYbZCs99rtVrTZ2PPZ6UVizCsa1ZRFPi+H5RD8qqU67oolUqIxWJQVRXd3d2Y
      mppCb29vQxqFIAiIx+MoFAqh86e8LlbNZOdEPvww6VCr1ZDP5zE4OLjsuK7ryOVy0Y6Kpqt0
      nQI9rCiKiMViywyjVmkOYYUv9AKpBjcKmkkF3mBmr+EzM8MkBiFimHFMY2ua1jL6Scgfdl9+
      XGIapPez4LpuUH1WLpdRKBSg6zpGRkYwPT3dEO0GEJSyRiEjISwRE33S8zqOE/xR84SpqSmM
      j4+jo6MjVKILgoCOjo7ItVh1EqCV96BZGR2B4ziB+sOrCIQwtm0v69RA7rawugL6neW4PHKz
      Y0b5xtn5s1yQHS9MsvBzCbsHEQZ/TyIs1rB2HAfFYrEhGOU4Dmq1GnRdb1BHWMIn47cZkGo0
      Pz8fMBvywFF2K4GiKBgeHm5Q53jbKSyhj2DVEQBrALJuQnqxxNGiVBDym4chAnFgiji6rhuo
      RZQ+wFer0dg0RhjwBBJVacbOOYpAWCOav4afA6VA8Nez49A6xGKxBsQj5Kd78EY3RdGpnpoi
      8qwxzN4TaIwGz83NIZVKNRjUlO5OUsTzvGVSiX1PNJ9VVxHWDPiXAjQGYlgOyqoT9J2Swtjr
      wxCX0qUlSYKqqkHeTBg088ZEHWeJIuq8ZoQW9fJZJ4EoirAsaxlR0XqwTIMdh5gMi/QU9KO1
      I33e9+s5ObZtL6vlpnvRfcm2mp2dRSKRCAxuNp5CzgHyHvEETEBzicfjSKVSkWu/6iRAq4qt
      MGA5n6qqqFQqoY2oeATkffos91yJt4bl2uz1YepNu8CrbmFAHD0sP58FQWh0J7MVYnQvspHY
      QiLyBPGeH+ASgrLVa7IsY3p6GkNDQwFnZx0LZOBT1ivrYuXfC3mTwuIuDWvQ9Oh1CGzYvxni
      8KKe5x5hYp335/OIFdV8K0qSsJyV5+xRKkwU8M/aKj2BgNRBx3ECjw/dl7cx2OcJWzNZlmGa
      JqrVKpLJJGq1WqjaRnXbpVKpYU0dxwmcFhRoo7Hpecg+owZqLPNQVTXoltduI7BVRQBkSDZT
      E/jfeQIJUzN4bt1MpYkyOFn3IgGP/FHz5iPbrQii3dJHVvXjO9KxDIJtYwgsz+2hMSgtWhCE
      hs5s7DpQZ4+JiQl0d3cveyZJkhoCbuxcSarQ+fwcdF2PbGMZBauKAPj8kmbAc7EwozjMmGyn
      kIU3wsOS4sIIkAiYP4cgqrEWISQhCbl/W82RJQBWTYnyFLEGLptrz38C9Zps1q/POhjIFqC0
      C+BSe0v+GXnpyb8Ten6SKiuFVUUAYcjPI2MYl22mzrDnhhmL/JhhCBN1XpgnhDd6+XHD1CNS
      NdjjUSoUK8FYfZzttcrPh1/XqBoGVsJRcIzsKgBBG0dKs2DnRZI7Kv+HvrNMjpiF53mhKS/t
      wKoigDCxGcXheeMzyncfNi6PUGzKQjvqV9hxeulRzXEJWN2e5s1yPt+v58Q3swHCukfEYjE8
      8+whnJ+dgVkuQxBEuBf1bEES8aqb92LH9u3LCIwF+m1paSmIGlMqBGVrTk5OQtM0dHd3N7hE
      m6mU5NakhsU8p5ck6bKb/64qApAkCaVSCYv5Rfg+IAgAfNT/4bgwFX2HcWe2q3IYJ4xSX1pF
      YFkII9Zmbtew69l7slzdMIxlXZnD7s2nZWwb3YqTY2OYX8pDT8RRWlqCIIgAfJyZOIsd27c3
      EFgYsVer1aBiTNd1FAqFQBrkcjkcPzsGXZLR39dff97gRQEXX9bFrwIS8TgymUxwj1qtFqSm
      0/wBNBjHK4VVRQCiKOKFEy/iwtI8jGQSiUy6vqbwsTQ3j6ppondkCABQOHkcbzzwmobrCRlI
      dIe5NSlJjjg1q7OGZZFGAS9hCJl5tYT3QrFGo+u6gYHKqgZsXS9wqcaZHT9MMuq6js7OTpSd
      GlQ9hpjjwCpXYJbLmF3KB6nRS0tLDcROniSaH91ncnISqVQKAwMDsG0b//hPX4CY0LE0k8O6
      G7fAqdmoWRbSXZ3Iz81DkiR09vdiZvwcuocGMP3oGbzh7lejv7cvsL9Y9YuemXqjUkygnfUn
      WFUEAAAd8QSOnHwRPeuGke3vhVUxEYsb8AHIpRK6hgYgCAIqM/PLvBRhEdiwxRRFMRDtlFPf
      rCdQGDfm1Sgq56T712o1HD58GHv37sWRI0ewbt06GIbRQBTlchm2bWNiYgJbt26FIDRmeXqe
      h0KhgOnp6eB42L0FQcDU1BSOHDuGc7NTqFZMQKgbpguFAjI93cgvLmJiYgLZbBaqqjY8U6VS
      CarKSJ2qVCro769z+UKhAN/3IWkKFFWFpMo4+exhZAf6kJ+Zg+u6WJyZQyrbieNPH4LrOFiY
      mYWmx/DcCy8glUgGyXBEBDRvwzAA4LK4P7AKCUBWZNywewdOHHwW3UMDmDt3AbGEAduqoVIs
      YWFqBgAgVu0GRGeB5/r8MeBSvhBvJPJu0lb6cituxRLnww8/HFRg7d+/HwsLCwCA8fFx9Pb2
      Brkzpmlix44deOyxx2AYRiAlwuZBEuXw8aM4fX4CetyA6zgo5wvo2zCCxbk5OBdTJnjjmCSe
      oijL+i+pqopSqcTdU8DCzCzUWAyxeBy+5yGeSaNcKGJwyyaIggCzVESyIw1ZVVFcWMTU4jy+
      /r3vYOfoNgxfLHEkZI/H44HPn48WtwurLhWiUC5D0TR0dGUhqyrS3VnsuvsO3HrPa9E10Idd
      d9+BXXffgUx3vXopzOXHfvJ/AAJOS0YcK3otywq6kVWrVRSLxaDAhPY1oP/pXPqfIqfsDjiU
      BEYG8u7du4OXbZom+vr6MDQ0hEwmg3PnzgWR7ImJCWzevBlbtmxZlvsU9pyiKMGxatAMA6oe
      g1WpYOLYCey4bR9cx0UinQ6ekQXWvcmuZVireqtSQXagD57rwiyX4bkesn29GBm9AeeOncAL
      P3oc+bl5eL6PcqGAarmCpbkcFpbyeOAHDwa2Am1dRQyI1iaqBrsZrCoJUKvVkK+Z0HwFRioJ
      RdPgxV3kJqfg1GwUF/J1bhbSe2cl3huCcrncUO3EVjSx3JIvT+SB9cezEqVQKATNq7Zv375s
      DFKdqGY3mUxC1/UA6cfGxpDJZOA4Tmh9A93nzPg4JqYmISkyJFmCU7OR6e1B7/oRnD85Bvdi
      CnKYJ40+m0lN4KLLUhDg2DY8z0MilYQoSbgwdhau7UCQRGi6Ds3QIV/MCapVLUiShOL8AraP
      bkO2szOwvy7X68PDqiIASZIuijQBZqmMMy8cx8jWG+DYNnzPgxLT8NwPfoR0Vxa6f3mdCFhg
      Oy7wwHNc3r6IIgT2+G233Ybp6Wns3bsXoihi586dcBwHu3btgqZpuOGGG6BpGjZv3gzLsrB7
      927MzMxAlmV0dHRgaGgIsixjaGioIW2AEJbmfmb8DDwAtlVD7vwFAEDNsjB9ZhzFxTz6N66H
      LAjL3K0s0bZiGp7nIZ3thA0fyUwHbMvC4uwcjGQSjl2DValCNS5Wm6Huu9DjcdiWBVnTUPXq
      qRpXeh+7VUcAd+66BZ/50j/D6ExDVmWosRhKC3lUTRPxVBLrbhyFWSxh4unn2/bYrBTC/PvN
      CrzpNzZxi7oy9/b2BoXuuq7DNM1g8z5KL85kMgExdnd3w/fr6dnE/Wm8MCNdEAR0dXej6LuY
      vzCNWlWCoiqQNRWOXS88KS4sQBaXpz/QOOwnC6wk9H0fhfkFVCwLfRtGoOn1wJVm6KgUSvB9
      IGYY0BMGRFGCJMuYPjOBRGcHugb70dPdc1U2cVxVBAAA3d3d2L59OxKbhvDYv30LlWIJVrWK
      vvUjmDxxGk9+83twHRdpve49uBzDqRWERW1b3YPlzkDdyHzqqaegqip0Xcfo6CjOnz+P4eHh
      IHeHkPrMmTPYuHFjQw8f+p/SHJqpeJvXb8TE9BQ6+3tQyhcQM3R0jwxhYbouTTzXgxzT4ThO
      4IWKiliHPQvd//V3vwaVSgW240AA4GT76gUugzIUuZ6IJysyXMdBrWbjrHgMnuvCrlaxYWj4
      qjCrVUcAgiBAEgR4jgNZU3H+xGl09vXg6e88CEVV0dnfC7NQDAyqq7GoLPBeIf5Y1Bx830ep
      VMK+ffuQzWZx9OhRvPDCCwDq3o/Tp09DVVWMjIzg4MGDKJVK2Lx5M55//nlIkoQ9e/bg4MGD
      AIDR0dHQXkQEmUwGr91/Oz77T19AMpOGkU5i+uwEBEGAZuhYmJmDsU5HIpFo6DPE+uOjEvXI
      TlJVFSPDdSSuVCqB54j2OKb2jDSmZVnwJQEHnz2EDX2D2H7jjZf/EppApCVhlRcxPjl7VW56
      tWGgqwdTZybgex4GbtiASrEIoB44ch0HvRtGIMd1zM/PX5X7swgfFjVmz2OJgEUiQRCwY8cO
      vPDCC3jmmWcwMjKCDRs2YGRkBPF4HF1dXYFffmRkBLt27cKJEyeCDtmLi4soFAro6ekJ2qKz
      8+Hnkc1msWPbjRBsF+XFAqxKPSPTtmrQ4wbMizEHehaaN9XnsptX05jlcrkBselaihlQxRjV
      EfDtFfftuQVvOPBqvOXe+1rm9V8uRBCAi7n5IvKLc1flplcbtm3dCq1cw5ZbdqOQm4ckK9AT
      BpKZDqixGKyKCcf38L3HHsH07OxVkwJhLlb+O2uMst+p786ePXswMzMTuF4B4ODBgxgcHIRh
      GEEklJphaZqGG2+8EV1dXbj99ttRrVYxNjYWOQ8W7j5wAN3dXajVLGiGHhBkrVqFfrHUk1XR
      yuVykHmq6zps24ZpmqhUKkFklnUR07XkQqbyUboP6+GhYODOm3ZedqJbOxBBABKGRkagytdn
      mECSJNx3zxsxffQk7JoNyzThez40PYb5qWmY5QriqSRqroOTC9MYP3fuqs2FT5YLOx6GlI7j
      YHJyEkeOHMGePXugKArS6TQmJyexceNGnDp1CsMXVYrh4WGcPn0amzdvhmmamJycRK1Ww5kz
      Z2BZFvr6+pr2ByWwbRsl04RrOzBLZYiSBEVTETMM7N9zc+DOpdQDVVUburoRIcTj8aDAn78f
      VXWx+5URCMKl9A7yWl1tFTXCBvDh2BdbULgu5Kskfq4mqKqKm2/aie8/9EPUqhY818Xmm3fi
      6e88iGQmjXgyiUqpjIW5HCRVgT02hk0bNgBYrpqsFHjDt5mbkI6H3W/btm0Bormuiy1btgRI
      0tPTA0Go5wANDAwEc962bRuAutdny5YtgSHM7gQTZXPEYjHs27kbjz/7DJaKRZilMizTRCaT
      QW9PbxCkAxB0Xo5KEORborD/s94cmg/b/oTsFWpnczUhUgUaO/o8CksFnDp/fapBgiDglt17
      sGXjJriOAzWm4eyR4xjYtAHnXzwNLW4gZuhYml9AMb+EZ8dO4OAzB0MTxvhx27l3M/WHHSfM
      g8ISDM+5edcifw/e1x/lnuR/p/E3b96Mt73xXiiSCFEU6tHaTCc6OjpgGEbwF6basGPFYrGg
      cwTlJZmm2VB2ya4VO2fqH9Rsd8crBREEIGPLrltwxx13YOu6vqs+icsGz8VDP/we5kuXOhc/
      9dA3MVW4VFU1NDAIAFi/YxuKi0vo7OvBtlfdghMHn4Xneegb6cLTDzyC7PAArA4DL7x4vMHD
      ATRGOtsNnIVxfd8q4hs/eDQYw3MsPPzwD1GpXULyZinVvu+jOHsGTz0/FkmIfEpC1DhRv1Ee
      j1ezUSmUkDAM3H3HnQ3PHiZF+ONkA9Rqtbrr8+KGg2G5UyyQRLzSev/YscP49Gc+i0MnLzT8
      fn27QT0bn/jbv8YHP7oP2UQ9QepLf/8nuPf37kJ/qs6h9uzejWKphIeeeBSxuIHS4hKmzk6g
      s7cHqa4sMl0GYskMFmbmsH3fzagsFXHoyGHs2rZ9mRgXhOX7BLSChq1F85P4o4//A16z/2YI
      AuCai/j7T/wNhkZvQV/ykpvStm18/+GH4MYULEzPINvfCwCYm5xCMqXg6YNjmMztxuLsHPRE
      ArVqFWoshlq1ing6BbNUhizLmLswVc/h8X3s27UbO7bvCJ4jDIgAVVXFaw+8Gr29vTAvqkBs
      whnPHFjEJ/uAPD+8pOP3G2DVMhqnUqmE9ld6KfDsRA52tYi/+M1fxGs/8Bf4hdfV3arXNwE0
      gc//1Uew82f/GDu6RTz3vc+j91X34odf/BLKD3wLw3e8Cc995UvwZAl673osnV1E7/oePP7l
      T+OHj70IJT2Mn36rjS0JC5/49JeRL5vYe9978HP3bcZf//kn0W2YeG58Hu94/4fwml1DeOBL
      n8DXf3QMyb7N+NVf/WX0Jhu7ygW5QJoKQRShaipEQYDrqhAlCaos4bOf+Au87Zd+B52Yx8c/
      9XnoHUk8e+ggFqansWn/HVicHMfkmQvYc8fNmJlZwOLsBTz5wLcwteQhu2EbDtx2E84eeRpP
      P3cSSjyNW+55K6TCBTz11DMwl3J44Ls/wkd+/w9xQ5eEr/zj3+GJ49MY3n47fvnd98NQLunZ
      pIL09vYiFovBMIyG2t1m4Pt+0GyLbA7aqSVM7QkrtwQQENCVyvcBgDtf9SpsGHgLfvon7sW5
      cgy+W8UX//ZPV0E26OI43veON+Guu+7CXXfdhS8+VHf5jR15GvmLHfjOnHgBVUdE7uiTyGze
      j9t2D+L084fRf9MBvPVtt6NquTDkBfzLg9N4329/GDf3l/Hw2Tn88Z9+DG/4xV/HRz78a/ju
      J/4MF4olPPn1b+PG+9+Hj/zH+/CJj/0jLjz37/jkD3L49d/6MO7ZAnz0b74CeqWhHGziadx/
      //1485vfjLe+42dx6GwRvu/hxaPPoeoAvmPh6LFj8CUPx585gm13vAE9soknHzqE+975dmj5
      CeTLVUyfPIQzxQ689p5Xwx57CudyeTx/+BR27r8TNw6n8Y1Pfx6+X8PhQ2PYdeD12NNr4TNf
      eRgHv/4pHCoP4bc+/JvoyT+Jz37vCGRZDtqgk8pCm0xTtztqV0J7L9Mn+6frOnX2pS4AACAA
      SURBVJLJZNDTk6SJpmnBTjS6ri8bgx+X70JxJeB7X/0C3vbO9+DjX3oIPT1ZHPnm3+PfziZX
      gQTIrMP/+rvPYs9IvfvXh9/zmmWnyGoMNwxsQa2WxZ4Du3DuyHHYfg/imovpsXEUFnM4+dRT
      yA5uQuH8JIZvvRdDvodjN23BJz/6e+hMJjBdsQFBQqpvFLu2DkEtlRCzfoSTzx3GhTOH8ecf
      /WP4rgU1ewtqAFQvYivWkb34+uf/BqIowCnP4/3/6QOhj+W5HuKJfqSTKoSCh1RqEDLqJYTV
      YglzEznsvOt+xJM63vDzv4yYoWKyI4YTzx1EMTcJx+tAreogk8lgaLgPdq0Xs5aNE88ewYmJ
      I/iTiSdhm0Vs6F5c1jaSra4Ki1+w0o1PhvM8LyiLJD2+lVeNvZbOpZTnK0UIP/ve9+FdP/MO
      fOUf/hwf+u9V3KMfwpnDhVUgASJAVTXMLSzCNWdx8vQs1q0bQn8iBl2LYfvtt0BRBex69R0Y
      2DAEPZHCjft24uzh06iaFvIvPoIfPPYMvvXNY/iZ//IR3Pf2exBzfQjwIcoSWGVgYMMwRm66
      G3/2V3+ND77nXnT094Jqk3iPkg8f8LnudZRV6fooV6sozJ/DbK4M13GDDsiU0Oa6LhzbgSjL
      SGczuDAxA6tSwUNf+jwee/wpPHPGxZ333IN9t94EQZCg6RokVUNhfgGlYr1x7+DGIdzyhnfh
      L//qL/EfXr0TfYO9wVRoruw2qJem2ehZYj02ZDuYpgnbtgNpEIXAYZ4jnkCiPFiXC1MFC4nO
      PuzcsRl2qYJ1G9Zh+93vuM4lgCBgaHgdYsolOu4d2oC4KuJn3/+f8Z9//734as8G3HDrHdAk
      ETds3YUuIwlJqiGla5g6fgrbb+zFwLohrLv97Xjr86fxyb/8a2Q37cb7f/PdGLTP4//9r3+I
      3qEtyG7OolSwMTTSDwGAIGkYHOrB+rvehbce/h/45V98L2SjD7/1e78LURACNYjtVSpIGjYO
      D0AQL+4FJkgYHKynLL/7p96CP/rQ/4GBdRuweccOCIKE7oFuiD4gyhqyPR3wfQ9SLIFkClh/
      65048rkv4F+f99Bzw27sHBzAaelBfPnzn0MqnkYyKUNPpZBIxqBoKsR4Ej2dKbzmXb+OF//0
      j/C+X/wcUoM78Xu/vbVhSW3bhq7rkRv58f5+InKqOybE5TtAk5oV/SqFwAPFlldeKfjeP/89
      fuFfv4b1Nx3A//OHv4t1aQ+H/ttHVtdG2e3AmTNn8L8f/C42bN+K408/i2RnByRZhu95MItl
      DGxaj+HRG5ZdZ5kmnHOzuGXn7sixWYQh1YB2VyHg25VEJct98WtfRbK/BxPHT0JRVSiaCt/z
      ULtY2gkAesKAU7OhxDRIooTC4iKcmo1EOoWaZWHnXbfh9PNHoCfi6Onswt237GuaFEfNrnhE
      5fccI6BGwqxUoI33WD3e9/0gfRu4tJt72PrRTvVXmgCi8Or6lgCXAV3d3Vg3OASrUIKu69i4
      YxvGj57A1lv3ID+bg23VQq9TYzHMOzVUTBOGrjcgexinjPJwhHV75gthXNeFGothcWYO6a5O
      6PE4fPgo5BahJ+OwLrYOFEUJSuxiV2ZNheu4cB0Xds2Gomk48vjT6BsZwvT4eUiWs8yrws/P
      tm0kEomGZ/E8L8jp4YtgXNeFoijLiNq+WPXF/katWoB6mgd5i1hPGbv90tVOgSB4xRFAMpHA
      nTffisnJSQwYKeRnF1FazEMQRVhmFfm5eVimCc/1LtW6Uhv1mo1yuQQjYvfxMHUhqiViMxAv
      zqVSKcN1HNhWDdLFfjhOuV7M71+cl+f7cB237l7VYxBEAUYqAUVTsTS3gKX5BWzdtwdOvhSa
      e0MqDC+pgEt+ffYZ2LJN+mOPU24QuT9ZnZ7+ZFmGbduBBNE0DfF4/MeG9CysbgLwfRRmx/Av
      X/4WlJ5N+Mm3vB4Jrd4zvqOjAyMjI0jGY7ByOZx59gQK+TmoUg1PP3QQas8mHHjdfmiKiPL0
      GXz3Wz9CT/cGdL6+XkzfjPu/hAlj6tSz+NaDB/HC+RmMDGYB+PAcF5KqwLVt2OYSxsZmsGl0
      I2qWhcr8JE5P5KBn+7FhqBs1s4ri7AROTuSQzg5gQyKOuXOTUL3l+38BjW0Rw3z97PPRdbSF
      VJifnlQo27YDCRFm0FJBu2EYbe1pdrVg1XqBAMDKT+D//JUPIjm8BZVj38CH/ufnAdTF8fr1
      66HJwP/+5J/g9//nx7Fr6y68attmfOZjn8RswcXY9/8ZH/vzf8SZg4/ij3/7j1Gp2HjhW5/F
      vz5xpuk9+XSJBiOYeclhuTylc0/jA7/3cazbsgVTz/8QT704C0VVoeoxKKoC3zHx9Pe+gUcO
      HoUWi0GGiX/54jchahpOPfINPPPiDAzFxL/8y/egScDDX/tXHB+bxsLULPKlEr72zW+EzpfU
      nLB5hdkr7C6O/E6W9Ef7B/PdIUhiqKqKjo6OH0vCWzNY1RLANEt40zv/L7z9zW9AZZuGL//3
      RgR49sGv4IVCFpuHkujo6MD6ER19XR142/vfh/LBL+HjX3gRcakPg3f/LH763XfCfCSOz337
      +3jnbRsbxD+fFsCrGc10WjYRrLBUwXt+9UN4zZ2jOPzwFvz7sUl4N/YF4x9+6Afw9Ax0y4cS
      0+BZFuxEH0a3b4c/cwwzC3lMO1PYfPd92L1nBML8KRx5/gQ6MIJ127diqVTE40880aCa0Zw7
      Mxls3Lhx2dz41ulh+VBhOVMAgtplNqrLulqvFddnYVUTQMfAdrz3XdtRK+XwZ3/6t3j7Oz/c
      cPy2t/wC9r1uAb/0/IPwIcBX03jdvi34r+95L/yajb33vR2nnjuKUmEDZk6fxca+QeQenQiu
      Z5PX6AWvJHzPZn56nof+7QdwvyiiNDeG7/7wBN78wd9BujZfr5tVFBz46Z9HLXcan/veSXiO
      A1/PYkdXCV/41KdQtSS8/Zd24PQDL8DZFkN+NodEpgfVgoR0VxZz5y9A1VQcPHoYvutBVhSk
      u7PwPA+5ySn0dXZh06ZNy56J5kj9/lluz+7aEgak4lBgjbrfUQXYywFWtQoEAJXcGXzk1z+A
      zKt/Ge97466GY6IkQQAgKSoSyTTmTjyCB06m8blP/wM++3f/DReeOYGdmzZh/cANOLDrFsRj
      OhTxUj9QUgdIL2aTwtqBsFTg6ZNP4sO/8z+w676fwJZuFbZVQ61qwTJNQBRgmRYc20bNqmHq
      yOOYFG7Cf/qtD+Id9+3AA994BLLj1SPGAqAbMnqHh+A4ddeoKEl1L5cgwLZryM/lkJucgiAI
      KNlW0PuTRXIyknkkD0vL5nV9IiQaIxaLIZlMXlOdn4dVLQFqxWl86AMfwP53/y7edsc2mGYV
      CV1BoVxFKrHc6yBrBqzqAvoGhlAYOwMlmca2PfvwiY/+G/yfvxtHnjuEPbe8HvPz8/B9P8h7
      4TuvhUU52c4MS0tLeP7oEVjVar33zcXEMbs0g49/7BO49b53IalaOHv8FOBYqFQdxDQVZqkM
      VVLg1Gz4ng8RHgTVg+P7MJdKMPQYdt+2H988Og1vYACHnzuB/lu3IJnpgFkqQ5JljGzdjHMv
      nkLM0OH7dSagqAp6L/b8pPlH1RuwO9nT763cloqiNAS4Xk4g/cEf/MEfXOtJsBC2/+7lwrnD
      P8A/fuVhHH/uMXzly1/G42fLuOemLN78K/8F733HW+sv2rVx/ORp7L/j1ejsHsAGPYc/+fP/
      Dw8/O4Ff+Y1fw+ZNN6CrNoa/+rvPYUHbgt94/08ik4wHGz0Ui0VYlrWsTz8B7Z2bz+eD2l3P
      8zCTX8CF+RxGD+zHUrkEtTONcyeewGPPnMapo8/i1OnTWPLiGFDz+OcHDmPX1vWwrRpUTcZU
      roJb992E9OB6uBdewHf+/QEs2gbuev0BZLp74E89h+8/+Di0/puwf+8oqqUS0t1ZuI4Ls1RG
      7/phlJYK0PQYPMeFXTHxljfdG6Qgsx4iclUSkP3ABvya7dQoCPVqr2QyeU2RPwqvXnGRYK86
      j4995t/xgff/fFPDtFqtwjTN4Dfawdz3/aDom7if4zgol8tBCnDD/S7GENLpdFDnSu1AfvDo
      jzCw50bMnb8AzdBhmVWomoZSPl/vauF7SBk2vv/Eedx+6zboyQS0mIZSvt61wbYsxDvSsKsW
      jHQS5aUCjFQS8xemke7KQpJlxFNJzJ6fhJFM4MLps4gZBjr7elAtV+ADWJiawejmzbj/3vuW
      eamAS1HgMFcmFb6w8QNeaghCvYOzHhE7+XFBFF694gjg0uPSRgzhQK3Fyc3HhuiJQKinDRtQ
      Cou2UnSXVxUcx8EThw5iziwFvnXf92FbNey4Yx9qVQuHHnwYkiyja7AfZ48cR6a3B/mZOXie
      C98Hkp0dqBSKkBQZw1tuwOL0LBzbwdz5SbiOg0RHGgObNuDci6dQrVSQ6e1GKtuJuXOTkDUV
      qqZh/twFJDvSsK0aNF1HVzaLn3zL/QGCa5oWbGvEA+3sSM/GesXIBshms1c0t/9yIAqvVr0R
      zMMlt2Tz80RRbMhnYfuAslmQwKUclqj0B6Cx7SFdJ8syXnXzXnTLOiZPjsHzPaixGBzbRmF+
      EY5tI55Kwvd9bLzpRmh6DHrCQCxuoKO3B7Isw6nVICkyNF3HhVNjqJYrqBSLiCXi0JP1BsH5
      3DwEUYTnuKhVa6gUihAlCWaxDN/zISgySuUylLgOKBJEVQkMYJov1QtQpifl7hNnJ1WP7YJd
      LpevaEbn1YBVbQS/VCDOxwZ4CGhXc3ZbVn7bINbDA4RHj2VZxv59+zBfLmLD7ptw7ImD2POa
      O3FhbBzjR4/jpjtfhWNPHcKxx58GfMAsleH7HpbmclBUFWDSCxRNRc20YOWXgi7YRjIBzdDh
      2g5c14HnOvB8H2axjExfN+bOX0DM0FGtmCgsLMJ1HPiuh5OnTmHvLbcExE3uTiJkQnK2PTn/
      jK7r1on0Mrcv+nHAK04CrAR49x/b/SzMNcgSAkswvKuTVCY6LssyOpMpuLYDWa2XSQ5sXIeO
      jg7MnxqHUHPQt24YA5s2INvfB98HbMuC57kwCyVYZROWWYVdtaBqKroG+xBPJZHoSGFoyyZM
      jY3DqlbR1d+HZEcHDC2GTF83ugb60ZHNAj7g2A40XYekKDBLJRw/fTJAXEmSoOt64MsXRTHo
      /yOKYtCzKJlMNjw3uwn3yxXWJEATEAQB8XgcpmmiVqsFfnJy68VisWAzC1a/5wtheM4flj+0
      e8dNePy5QzCLJfieh/xsDjs3jWLjhg2wLAvHT5zAzPgE0j31XKTsQB9UTUOlWEIsEUdlqYDs
      QB+WcguQL6ZPxFMpnHzmeaSMOLKZTty8Zw8GBwYgyRKmp6cxMzeHHllHZzaLZ8dOIJlJY+rs
      BFyrhmymE0ILvZ1vjEUpELQXARHC1ajxvVLwijOCo4CM0DDw/XqJHm35o6pq4DIsFAoNzWHp
      fNYw5gNLUV0RXNfFsePHMTE3g45UCrftuSU4BwCeefYQTkyfR3EhD0VTISsKFudy6OiqR3Ql
      WYZdtaDFDYiigFrVwsgNG9GvJfCqffsjvV62beOJg0/D8T1US2XsuHE7Hn7ycey5cQe2jo6u
      aB3JQVAulwFcioxTjfG1coWueYFaQKusTvKI0IulLEby7bO2AKv68ITBQpjbURDqRSWUNsCe
      VyqX8cDjjyA3l4MgitAMHfm5HFLZThQXFpHo6IBTq0d4E+kUhoeGcOfe/UFX5pWsAaUvXA7C
      +r6PxcXFhvFYL9q1gLWCmBbQKlmNMhjJ9VmpVJBMJoPOCeVyOdB1o6Kj7SIhi3gs0cQNA72p
      DOYXFpHs7ED3YD+cmo2YoQMQUC2XUMgtIqkbeP3td2H37t1NyxCbrcGVMFr5tIqXI6wRQAsg
      1YTUF/ZFUr47JXiVSqVIdagZsOfwm1fzc9mzcxemZ2ehpVOYPXcBxXwelWIJtmVBkiXAcfH2
      n/opbL5heVnnjwsocY7PC3Ic56rs8vJS4OVnlbwMgdyA1L+epAIZx+QqTKVSDXtxRUFUSjH7
      O1tHwIKmaXjtgQOQag627bsZmZ5udPb31K9xPNz7pjddU+QHECS78XUC5FJ+OcGaBGgDKJPR
      87wgl4e4NHVNYzsaUyuTVi87TFWicfkEOzrf930kE0kkBAVPfvuB+g6Olg01pqFWNjG6ZctV
      W4d2gUd++qRa4ZdLKjSwJgHaBsppSSaTDfvRuq6LSqUScGxFUZBKpSK3DGJdoexvfKwgrJ8/
      m4g2MjwMVVYAH5AUGemuLLp6e142AaewAne2xxFwyStGQbNrAWsSYAVAwa/Ozk64rotyuQzX
      dYOdUVgvQ0dHR5Agx4/RjhrAnhdmSA4ODmKopw9WTILreXjxqUMQUd+WKH1xU+trCZIkwTCM
      wGkQJtEoukzPGtV+5WrCmgRYIRBHk2UZyWQyaO1BOyjSOUD0tki8cRgWG+D1Z15dEgQBB267
      HVu7BqDbPrqyWfRtWr/i7tVXC0gdJHWH7SxNQMcplWIlHqsrBWsS4CUA9b8k3TYq94cFHgnC
      WrDzyM5HkFnf+vr16zEyMgLnVge5XA79/f1X9ZlXAoIgIJFIoFQqNWyvGibZiAja8ZpdSViT
      AFcACPErlUrwG6VRJBKJgLNF5dTzCEE2AEkU0vujEINiFOvXr3/ZuRnZLnHUCoUFfj2ok8SP
      C9YkQBPgEbPZOUDd/21ZVkNXZMqXWVpaCn2xPOen/1mkZ1Un/jf292uZahAFlDpCmaS8V4vq
      DCieQq1W2ln7KwFrEqAJNOO6BJQYxwIfMCNpQDUDYYly/HfeWxRmV/A2wbXQoZsBnxkatpa2
      bQft1Nns2B9XBukaAbxEIOQm96hpmkGCHAuKoiCZTC7zgRO3ZyFsn7Bm3P9yWrL8OICerVmb
      9EQisWxLVN+vd5dju0pcLXh5rdh1CpQTT/5/Cpjx+q0kSQGhAI1eId545iUD3ScsgY4953oA
      dt7UTIAnajrGFxldaVgjgCsIoigGCE51AmHnUCNY/qXn83mUSiUsLCygWq0GbcTpk6Ko1Guf
      JYiXG/fnc6ea7V5Jzwg0dpdrZ3PvlwovL6VxFQBVS9EWP2Egy3KQPMdCsVgMvEme52FsbAx9
      fX2YmZnB4OAgLMvC0tISOjs7kcvl0Nvb+7IIegGXpBiliti2vcx+IcJtFexiiYDtPcqOdaXg
      uiIAWpAoTnKlfch8gKpdoCAQ2wyLByq6Z1up0HdCal3XkUgkMDMzA0VRYJomstksBEHAunXr
      UK1WA4OR7eFDGaxhwacrAWFjuq4L0zSDY5TSTaogvbtarbaslUqr+VGchZwNzXCAgAKUrc69
      rgpiSLem2lxeHyYVgfeYkF+9Ha8OOx6lOUQ1cuXHp9/oGkKGsF1hCHhPT9g8afshHnRdh6qq
      KBQKwRipVAqyLMM0zSBbldSlywXWm0N6eVhAKwzC3pNpmg37AIe5dPkxqaKM79cUReCGYUAU
      RZTLZXieh1gsdv22RSHRms/n4TgO4vF48IAEVEHVjOO2g/ys7kl+aUp55oF3Q7JJcnx6c7vP
      GTbPqPwh8qGHvdgrGUxiVZJmxnqz69n/o95TmEeMBUo8BBr7loatc61Wa5BIPBCjui4IgHzc
      JObL5XKQ88IiDIu8dB39vhJgORsrynlgo7X8taw04iO7UfOMAtrEImyetVotCLaxv/FJeJcL
      LNKzLtx215QkBUs0PMKGSWweZFle1pyr2RzYiHKYGzXAqbae4mUAoig27F/F67gUbudVDd6/
      HAY8t+aDVVF75tK57D1Ynzw7P1YysJHesLnwECUBAARJePSSK5VKwPmaPS/pxs3O0TQNmUwm
      MFpZBOURkf8LA2IEPFdu9Z4EoV4nzedbsSnn/Fq2Q6CCIFw/BEAcKJ1OByF/emjSScNy4dn9
      rJqNzXPlsHvzuex0LEqcsy/U9/0GiRCm5qzERiGo1WoNaRbE+aJiCezzRAGpYrTXb7spylGE
      yq4DIS5/HsswwuZjmmZQZMQTTDNoRQjXDQEAl3REXv8nFYWMQvb3dvXwKC7CqjRRunk7xMWP
      dzUh2Nzv4r2SyWQQpGP9863mwjKYdubdCimjbIdmEi5qDP6+rd5BFFxXBEBA6hCL7FSgoihK
      wzGWs0YtRJjqw/4OIGiB0kpFYV8Gy6nasUdWQiCtXjjdz7IsLCwsBDXLdJz9DBubdn53HKdl
      NHal0itKXWrnPbHnsOvcbG7NpN11FQdggSqOJEmCeXHfXCICwzBg2zby+XyDquL7PuYXFlEs
      lSAAgAAIENDdlQUA5OYXYBg6sp2doffk+2OGAXkXKpXKshcaZvgRsO5PnpMS4bHJbu2oAYJQ
      rxCTZRl9fX2h9426zvf9oNEtu0dwO9dezvGVjM0zqaimxLIsBzjCpqo3jOn/OGTyCmCljbF8
      v16NxeqI5P8lQ47V7b/14EP451N5OJJS3x7Jc/DODQl0ppL4xMGzePP6Dtz76juDoBSv/7LL
      RUgYVtTSiouFGYLtNKMK85jQ/xR4492MtKbk+aAueK0kIoCGqjdyB1NA63KhWq02rOtK7R6a
      Iyu5eZBlGYlEIiBkAKuzMRZ5aURRxMzMDFRVDQJm2WwWsiwHL8s0qzg/Nw9H0lGN1dUBya3V
      9wqTZJixNFxRgqqqgQoVVWTOu+yi1B325bK5LVEctVVOf5iHhPeKsHW2hPTFYjHwDkmSBNu2
      0dvb25CIxhKToiiIxWINqiQF4yhAyKpG/Ho0m2/YM4Wpnvw6ha1xGEiShEQiEcQCKBAWBtc9
      ARBQeeLi4mKwcJSTQ7BUWMLTOQtJtwRLjUOAD8U2IYlJ2I4DV1Iwu1QMNn1o17BiOVEzNYdF
      sJU2z+LHZK9hP8klykZsRVFEOp1GKpUKJJZlWThz5gx0XUdfXx+WlpaQSCSCZDtN01AulzE1
      NYV4PI7Ozs4GF68kScs2wQuDKMJg1yNqndqxPcIgFos1xIqajbFqCACoc62Ojo7ge6VSaSgR
      nJrNoax3wBUV9M8cgyspUBwLCwuDuJBbhIZOnJmbxFe//QB+7u1vAxCNnKwIbsfApfN4FWql
      +UZhuj+NSdVU7EbW/P3pOlVVsWnTJti2jbm5OaRSqaD5L6mQqVQK69atQ6lUwuTkJDo6OoJY
      TDweD3qYsm1h+DXhP9nnv5xU51bnU4027VRPAcwoV+6qIQAS0WGtuel7oVSEK8gQPRe2qiOf
      7Mfw4mk8U5bhpteh+8IpTKfX4fxSXVVQVbWhxDHsniy04uS8OAcueZ5471G7dgAvVZq5LMM4
      raZp6OvrgyiK6O7uXhZjAYBEIgHDMLCwsIDFxUUMDg4Gewb4vt+QnsDfpxXz4CUm+72VROVV
      JXp+eueUk9UMVg0BAAg8NCxnIQ5brVbxg6PjSFUsSLYFX5IwUJmG2zUE2XMBSYag1pPepIvr
      TCkIYVw6DAn5aG9YYhuL7Lw7r5V7MupYmKeJlxD8fdjjpDOHGcasoZ/NZpHJZDA5OQnDMNDZ
      2RkwHvJ6hc3Rdd1ljcJaMY921oJ3KBDDmpmZCTpMxOPxphv0rSoCIIOY5fr0KYoiqmYZi6kR
      aFYJPaUpeBtuQaw8j7dvziLT0QHb6YVVs5C86C0gO6JarS7b4zbMcIx6iez3MEOO/30lNgE/
      h2ZdF6KIh4p4whDXtu1AfSAP0/DwcINaFJUtGzXHKLVoJQ5J3gYir12hUAg0gVgshlKpFNiH
      YbCqCACo67ZEACyS5ZeWIKS6MJI/j5JXRxKlmMPdvQp279oJVVFQq9lwHDuwG+j6WCwG0zQb
      dkMkDt+OVwJo5FZhOjwrNcLcqs3G5b9Hjc/nLfm+H/TsZ20HStyrVCpBTIV3zyYSCcTjcUxP
      T9fXUlECozNMNWPnQpya8reiJGE7QOfSHg2WZaGrqyv4XZbl0ERGglVHAKwLkGBxMY9qtQpF
      luEO34hEOQ95/hy8ch4b1+9FbmER3/7hI8hbLqqihl99y90NHIM4COWxE/AcHGhdRMO+cBYu
      xytE57EqBhWTR/UmZb9TQQ0ZsJqmBe5NUt8onqIoShBLIETzfR/ZbBYXLlyA7/sN1WntSB7a
      RC/svHau56FcLjckTNJ5rxgvEICgHI+CWKIo4uNf/hbKjoeK0QnB9+DqSYhaHHaqB08cOYk5
      V8Z0SYDvS9gkl0KbSwnC8lz1MN0+bPujVv5rnmCBS3ozfyzMm8J2VKNiGLavUJQhSkhIUK1W
      UavVggozNiZRrVaDQBsbz6hUKkilUkGfVD5lmpdmdB1JatpZh+qCWSnAEnar9fJ9P7IvajPV
      atURAHUZkCQpiDhW5BhMs4Dy9Dn4wiRE34VUKyETU2AKIvpjQH9fCoJVxoaBem/9KE7eDJno
      OP+yWRdhFDei8yjnnbcFVqIesJHvqHuyWzqxQLtCUqyA7knMhFQhtlCfmgHMzc2hUqmgs7Mz
      UKPi8XiwnSy7sbjv+w2uSSJaCrzxzISFMISOqvhjPU5hsOoIgIC4YbVaRbyax86RHhzNlZDR
      VfSm4xjp7sSNmzehI51etmgUSaadDclfT7lGZBBHqUBhHhg6jz/OSgkADXbGSmwAOocKZKLy
      Y2g+tm3DMIzQzguEeKQGVqvVAJnD/Ol0z76+PkxOTsLzPKRSqSCPiAJnrMuUB9pxk7UNqAYg
      KtWdfaZcLofOzs5l0lYURRQKBfT29oZeu2oJALjUheCDv/AuaBdTJIBGlSEKeNHNqgSsZ4QF
      3rvBQ5jniL7zKlaUO5PldCwR8ipQq5QKOsbX9oapXlSJx254zRJupVIJ6paHh4eRz+cxNTWF
      wcHBhntqmgbLspZ1eqDxqJEAdZYg9yVJRXbN6HkrlQpyuVywbS0fkKPd7KOkwKomAFrk2EVk
      5fetigLa44pfdLIN6AXxIprPjyFoV32JQjCWsKKMW/YerXZgiZJCUeOSUFZ/IgAAIABJREFU
      vs7r95VKJVCTXNdFqVRCIpFAJpMJCtfZcaknEm01FQZstq3jOEGXPVpzPmuWItbJZHLZ/Omc
      jo6OyLVfdQRAqcOsDt1MP2SBjjuO0+DtoWN0viRJQQEOISl5RUh8h92nlSrDGqRRsYWoMVmk
      YFWqMF2afRaeq4ZJPgANCYJA3ePC2gh0T1alchynoc8nSU/+vuz96TlM08TS0hIymUzD85P0
      pftR1Rrr4uXHbtYxe9URAF/WyBuSPELxxygluRlHpGgz23VAFMXAe9KOoRoG9BIppE/3ZxG6
      nXYkvH3CHwMQtBhRFCXICG3mceLtITbJkJ0bEQw1/kqn06jVakFKcthc+eepVCooFovo6+tr
      OMZvJkJ9kMKkLp1HiX1RXTJWJQHQooapKawKweq7tMDkPWIL4XkuC9QRiOeYvORZKYRx/VZ2
      Rdj1/P9h17KeMlKbojxfvu83pE2ztbns81OnbFKbyDXKMgrecUD3JBugWq2iWq2iu7s7OI/e
      Exs3IGKgSD2/ZrquB8gvCEKwwfmydWi5qtcZsIgYpvOHISn7MqOu48fmVSoioHZsDBoramx2
      TJ4zN+P6YfduZQjHYrEgIBYl+QRBaFAj2MIjmjvtley6LqrV6jI/P/8M1MqFvY/neSiXy1i3
      bh0KhUIwNvuegEtGOc2XtzM0TWtI32gGq44AeP92KzWBVzXY4ytNVW7W6oTngAAauF8rAzdM
      KkQBq3M3Oz/MDghTF8M2tghTOSzLCrw8fCUee494PI6FhYVlm4p7nofu7u6Gd8i+J1IzSe3h
      GyDouh5qgzWDVUUAK9leh+d0PGcPMybDOH/U2KyID/PKNJNQzeYaJWFYaUFcsJU0YhE8bBd3
      QjzeM8XmW9HvABoCXRQvYfdLJklBqher5hA3p4hz2LOH2T/8M69U9VxVBBC2q0iUp6fVb2G/
      86K41fWkJkQhIq+zs7ns/PitkJnmwOfWNJtbmG0TplLw96EufVFFMACQy+XQ1dXVUJVFxEZS
      olS6lHZCjQ2i7Cf2t7D0aj5bt11YVQTQLHWBzythkSps0Xk1qtni8rWxUaoHr0bw92Ujnq3U
      FvqfL4IhHZyCSPw9wtQdqhEul8sNahwrDROJROTzs+OS0WpZVhDXIJcyEXcul0MymQxNhGPV
      QvqdlcYURCOGAVwKeF4OrGoCYF92q7ySMJ2WXXzWzxyGyFHG40rmGwU8sdK1YUY5FbfwiWn8
      M7N6te/7QZSWvEPsM9E4dB31CgoD27aDvQsMw4Cmacjn8wHXVxQF3d3dgeeGfaZma+L7dRc1
      2xSN5kgZwJcDq5IAcvPz+Objh2DZl1QiwbHhey4ErZ7fMtyRwIH9e0PHYfXW4PoWOj3QGIRr
      BWGenbAUASCca5MqEmbzkE5Pxiu/6VyURKA8fbqOXI+su5L09CgVynEcdHV1IZ1Ow7IsTE5O
      orOzE5lMJnBxLi4utlwfmhu74yavItIzxeNxmKa5onY6BKuKAMgTMDk1g6dLClwlGRyTzEX4
      lgOvMwMIQHU2h3suLm6YYUWfPEeinBfSOSl9mI6FQRhRhOn0fDRzcnISQ0NDmJ2dRSaTCRLL
      fL/efGt2dhYDAwMolUpIJpMBklJLd0GoR1Snp6exYcOGUN2ZnRtPgKzkKxQKDX56GoPmQro8
      +f+npqag6zqGhoZgWRYKhQIqlQo0TWvYO4HuE+YCdhynoRiHN3QtywpcovF4vKWrOAxWFQEA
      9Yfv6epE2hnDgudCWpyCGE9DMIvwXAdCaQGCAAjy8p7/vKoRFRQib4aqqtA0DUtLS8vSLcI8
      QVH2Aa9akTdrZmYGw8PDgc48PT0dVGmNjIwglUphbGwMJ0+exN69exGLxTA+Po7u7m5kMhmc
      Pn0aS0tLgUeoWY6QaZpQFKWhGo4/TrYGJZ2xRiubHJhOp6HremDosm7NsLWg+/FGMPUzIs8T
      q/4B9RQHwzBC4wHtwqojAN/3kUomIeZn4FZs2J6PsisDkJCtLsLT6w2xfOlSr/4w704YgtLv
      5OYjZCFDlKKe7Mtko81hc2W9RHz3Y9/3G8r5Tp8+jbvuugsPP/ww+vr6MD4+jpGRERQKBWSz
      WTz11FPYuXMnDh06hI0bN6JWq2H9+vWYmZlpeD7e8Kbni9qtMcwgpWdmCYE9h017DrOL2LHY
      7+wnuWZFsb79LDEdUtGuxP5oq44AHMfB9MwsTqEDtZQGzSqimOwFfKDDN4FMPwBA8nOhejj/
      f9h34FI2pMqkWZO3g0UiqisIy8BkxyLvCXE30nfJbUgFKIZhBB4P4urkBSmVSjh//jwGBgZQ
      rVaDVvK0LvwzsSoPfTarIwiTimRvtOK+YfsCsOfzjgYAgdFM74nsAb5a7aXAqiIAStJSFBkK
      XKQXxuADiJuLcGUNqrUEb24CTrobotq+tyYKKPLZyvBttwEUew55cx599FGk02kYhhE0/ero
      6IAsy0gmk4jFYigWizh//jxGR0cxOTmJZDKJzZs349FHH4VhGA1F4qy6RchcKpWCscMKevi5
      EbDJe83iHUC4Y4F/dv7eRFyqqiKZTC4rRLoSsKoIQBAEQBBw5MQpJKuLcAFc6N0O0XORKU0B
      mT4IsTjU/BSkjks6Zbuem6b3jfjezgsLkwy+72PXrl1BjUG5XMbo6CiKxSJGR0dh2zYGBgZg
      2zb27t0bcPSenp7AD79//34AaEhLYBGaCIANIvHu0zD1kL7zaksUsF4kmicBXwfMG8Zf+8GP
      8OLZCezZuhnv/om3XFHkB1YhASQSCZwr2nAHtsCYO4M3xYuwqyZOpTMQqiX0xgBLiqM/rSzj
      ilcKorw+YcTA6sK8ETg7O4upqSkMDQ2hq6srKD3kr6e27aQasUEh27YDA5fNO+KB9SCxY7Pz
      p/N4RI06l/2diIDiAeRiJXctm5INIEio6+7sxFPHTqErnbriyA9cpxtkNANVUdCVikNQY/CK
      i9g3uhH/4Y2vhV4rQSrmYM9NIlHOwfUauzVfaWARhu4RRhRhCWP0eezYMWzZsgWKomB+fh5P
      PPEEKpUKXNfF1NRUUJH1yCOPBJtgzM3NIZ/PQxAEFItF5HK5hp3Yw4CCYGHITdyaL5QJM2DZ
      Z6H/KcKsqmpQU0zqDptkR92o6U+WZaiqirtu2Ynf+Jm3Yv/Nu1b8DtqBVUcAADCUTUN0bZSN
      TnzpqaPQ9RhePzoE365htlTFqYUKjp49HxnNvBLQrhoU5XkShHqC2JEjR4LuC9Sm0bZtSJKE
      Rx99NEAmz/MwPj6OcrmMs2fPolKp4PHHH4eiKHAcp2k/f0G41PyLD6yxEWcAAdLS2lHqBVsg
      Q+oVtaehXj1kCNPGFUC9GJ42sGA31ZZlOdgOd9vWrcgwTY+vJEQQgIOjB5/A97//AE6cy12V
      G19N2LtzO7rz4zAkH4XFBTz5zLPYuG4EqixhPt6Duc4NiGWysCzrihtVwHLPBhC9VSfvXqX/
      ZVnGHXfcgc2bN+Oxxx5DKpVCJpNBKpXCxMQEyuUyHMeBpmlIp9Po7u5GLpcL2sOLoojR0VGc
      PHmyIUsz6lnJl8+3leRVG9YbRPk+ZGOYphlsZO779Y1LKCeJdQVT4T49J21iTYRNEoXt7XS1
      IGJkCdtu3ofd226AJLZX4PFygq5sFr/2029FsncIshrDvz19FA8/ewT/93/8JdydrOGGwhgE
      q4LT4xNN2+a9VCC1IMomoD+W65KRaNs2nnjiCYyPjyOTyUBVVSwsLAS9dzzPa4gMnz59Ghs2
      bIDnecEu7JVKBYlEAtVqNZhHM2OVLWnk5wk06v9sRRZVXtH/iqIEcRI+AdHzPJRKpcCnT2BZ
      VhDsYvsSNZvvlYDILZJmJ06iJKaxfrAH4pVXkSNhpVskRYHv+zg/OYkfPvYkjpw6g5u2bcXr
      btuLT33tu3ju3Cym4gMYdhbwG/fejv7enrZzySkVot05UG+cKB08LD5AvxFXpUxMyssh9YKC
      QrRlEfXWIZ855ey0avPOzoU9j1CDDFL2mURRDO26TM9immbocX79iDmwthJ1jpAkaVlR/OVC
      FF6FE4BXwfe//UOIuo7+jTdidKTnJU+gXbhSBADUF/e5wy8gmYgjebH99/zCIv7iC1/FXMWG
      7NYw2tuBX3n3O4Ne8sR9onz31LipFVCQicR4lFeI/Q5cIgDi7ISQ/PFWqhv/Wolgovz6rHFL
      jYCJaPP5fPDM5LGh+/Pj0XeyCcgjJYpisKFGq9RlklrxeLxli5d2IQqvwmciGnjtvfdekRtf
      SxAEAeenZ/HIk08j1dOP+++4BYP9/XjHgX34qwefhesq0Ds68Z2HfoRzRQuGpuL+225GtjOz
      jCsD4QlsUcD30GknukzqD13Lz4FUqnYQP0x3b3YOgSiKwS4rpIaw+TZhBTJh3yVJQrFYDOqE
      icPrut5Qasq6gOmP7IKrqfsH841Sga4VXEkJAAAzMzP42P/6DM4jgQ2lI/jUF7+PmCpivlBC
      vHM9Pv03v4OP/8nnEbvnPthqAsNeAe97zV50ZzuXFWd4nodisdi0TR8PpNu2ipSycQBRFHH6
      1Al89L9+EMcuVCBd5Jivfsf7oYw9gXWvux9b+zrhey581JHNcy8GuuqD1SWF60AQ6xJt0/oR
      9PX2LkM4/v5kK5RKpYDTG4bx/7d37sFxXfUd/5xz792Xdler1dMrWbZj+Y0dO4mTkAB5MMSh
      EzJAoUDaQikwnQ4zMH3BX51Jp+WfMsx02qaPMMB0oCED09IHaRoIExJCIAmPEMXOo3YsW44t
      W7KklfZ9H6d/rM/m7PWVLDu2JSJ/Z3a02r3n7t29v3PO7/n9tY3TWMhA1mkXOl1bxxdMVSfK
      1tDn08UyF9M5cX4q0DLiYk8AgOMnJvjCV77Jnf2zfOFJxec/dBNT07Pc8fabSCUkh16d4OHR
      F/jZKQ+/XmJjdzf3XLeW+bkKPWtH2DDYg74VZovPxVybWpgXU5mixuvb8U/f/Bb3f+1rXHPr
      +0huGAEEsakjzIoEHZXTVK04Yvo1Gtkh8kmYmS0SuD5dff2IVBYEOBOH8FOdWG6ND9x2Izfs
      3btg0C8c0TVtF52LZApvOAagz6HtA5OmPlz4bqZkR4mfEIJ8Pn/BVV5ROD8V6E0GKQW1zgG+
      ++oxTr78IocONDNCf7L/KDdtsvmbL/4L9/z+W/n7e7/E4E0342/axic+cx+3vu1Gqqe+yrv/
      4M+54+q1rfO9kZXJXGWjskS1UFTKZWR5irGffp/k80+A1cHInl0ce+gb9Nx4O8ef+R9qqasY
      GK5wanyUYsc6OuoTvPpckr137EMl0yhpIbw6QSJNteEtWK9gIgiCtqYSZhJdVEq3KeBKqba0
      iiAIzqKZ1BFfcxcyXavaC3QpgpNReFMGwsLo7+vjri0DFC2HmelZXhw71rwRXoNyuYLnNejL
      JYkPbGf7u+7GPfw488kCL03M0J0RPPjgw9Tr9bY+WOfC+bobTWgXI0hiiSSxeBwrZkPgI5WP
      CDx8O87Inj2sz1uMjx0j58+REDD14n7KU8dRE4cRXgPZqCKq80wX59sirVGPWCzW6gyTzWZJ
      JBItjh1dCK9ZHfR30A9tHGuvlG5cHo/HW2PMcfpYPc5kkTYXiUuNVbEDCCF49y03UT/6NL9Y
      v4kbb7ie0SMnOPDiy3zvZyf41ZHD3Pfwswi3SOLYAeT8HJlYH6lcntFig9veXmgFiqK8Euaq
      GE5nMK8hHEgKj9WQUiJtBxVPM7RlF5nOFBUfHEuhkCAthCUR8QSBayPjGbL9BWJeheHdPVjJ
      DBAglAsIVOAzPR/NjBa+xkQi0VZ4Hr7GMJeRHge0KrigvSt72Fu0kApm/i7mznEpsSp2AGgy
      RO/bu5V8YR3v/419XLdlI0dUBy/bPczJDg46eZSME3Tk6LrpLkrFk0x5krGxMf73pQkOHx1f
      MHUiSo1ZTL81A2QQvVv4QoJlo+w4xFMkMp34yQxKOohAgeth+y6xVBfdPRmOn5rm9MQ4k+Uy
      2cYcjvLw7ARKCJSToHYmCe1cMMsbw7lSOsJsQn8XHWzTu4k52ZeScqI/Q5c9no+j4Y3Auvfe
      e++9LJ+0RGh/9aWAneyk0N/P6IH9jM2WiZ8eZ06mSHT3kcp2kcuk6erqRPZvZmDzCF61St+e
      d9G/eSMvHJ1gUy5OPrdwFVJ4JzCZzMxjoozAsHflqV/uxx8YIecE2GcikTLwiefyZNIJsrlu
      UukstoDebdcQUw3iTgc73rING0XQ0QWZLoRbR0iLbE8fe7duXDR+oAVZCNFqNK2pybV3R5dr
      6uCb+ZoeZ1a2aTsgTK++0DXoHKDFMlcvBAvJ1apQgTSczjXs3hTwl8+9SCndS8yZIlOv0puo
      Ua1XsLtTYDdXv3huDYXcmtbYSjzDj0dfYcPaoUWpO8yVTMNUf8zXFguEoQLWxABfAgLhewiv
      Ti7fBV6dZO8AgSVRwsaSFmv6+gn6LYRbxc/0IMtFlBCgIJAWeNHJcObn1mo1stls63/9vhmM
      C3uKTI+YUqrFM6r1fX0OPUn0c20s63PpKq+LLfjnwqqaAABDgwX+6N1v5cj4MQ7bXTxyok49
      CDjdOUyiUSIV+Ai3DihQClTQ9Ksrxa+KZW49McHwYOGs1T5KPYBoOvOoAJcJpc58dktoVdtf
      qRQBChCgAmSl2Kx1rjTToJXn4iczCK+B312ASglL+ZEcn/radQM88/r0Cm5+hygbxvxfp2CE
      BdisN9YTxYwuh4myLhdW3QQQQpBOdxCzJTdfu4e3WRY//MkzPDxVonN2nIYTwys1mYlRCgUo
      BKDY3eVQ6O9rncc851I+dyEffBiWZRGIprFL4BNICwVIqxmNDSybAIlFAEGAspoeLdtrgFIE
      KiCIpXGKpxCTR3F710NEDa05+Wq12llNQeD1lA491qxb1mPDVV26c7zOVTKP1TuczjzVndyX
      Q/hhlRjBteIJ/vBjH+fAqWZrnqHBQW695RZ27nwL2zevJ37kh7zFsdk8chX102P86MEv89S3
      v87P97/GdEcfxY5ephDc/5+PUXHbz30uV502AJdae6ACj8cf/BI/eOr5prAjESogEDa+tCkd
      388Tjz6GFOBZNr947D/4wbcf4MmHH2HG6kQl0/jpPEcf+wajExVUIo09P8XcqeM8v/9A5Eq+
      WGOPsHfL3A00S7OpGpkpD3pXMXdG/ZmWZdHb20s2m120g8ulxpt+AlQnX+GPP/sZnvrVOMEZ
      WdU35fDBA/z15z7Lvz7yLAP9PfzJh+/EHX2GNXd+kqs/8imsY0/w3g39fH5jCfXoA9jVOjok
      bOr05vOw/9pUKxZKHdD/A3zny3/FfQ88glvzEIGHFbiIwMfy6szu/xE/e/Jpyo2AwI5RHvs5
      s9YGbv3Qx9i1JcfoT58msB3+77+/yisvj6PqNezSaZzZE5yuBzz13Atn/T6mQEalTEepbWEC
      LzPFwTzecZyWd8iE3iU048Pl0vej8KafAK4r+fRffJF3bh886711Q/2883f/jE++72YS2W6y
      2STrOuJYXXnKHT2IWJNdbmjddr70D/exbU27B8gUFlMYFnKLhhGlEm264S4+94n3YakAP55u
      ql9eA+G7WLm17L3lHU1j0a3hVqokbRsr8InHbUrFEqpRpm/rjezcPIz0Gk31SEho1FBnAlS1
      Wq3FaKEf4V1Afy+dnKddqGHVz4xqh8frQJc2fvUYs4HFcuNNPwGyhRF2rOsjao2xkj1cf81m
      ErYknu4CUnz0079N+bv3U3zkG+RLc1RL88S7B7EbTWY5c3XUN91UA85nNYuyI3buvo64LRFS
      QiyBsCwEAgRkC8NNwbGaKkPXuq3UJw/wzJNPMLr/ELYlETjkh9cTpDNgd+BZcYJYCmXHkLZD
      Mpls+eo1TaFJNxJ2zZqBL/O7hz1C4d1Dj9HRZSFEq4uMSXC73Fh1RvC5EMtdxVf++R+JScnD
      99/L1i0j5HJZMvFBbAlTk5PUEza5XK6NGU6vlGFjN7yi6ucmnaL5vpSSuXK1ufILgda5hIJA
      SIT2TgGBH7DhxnfR0dOLfeI5XhjzUYkOlLSRrotKKCzloWJxhO9SO5PXY3p/9P/mKq1VHLPu
      wHxNw9wBwnk90J74Bs0sz4uV33+xsConwPe++XfEr72HWzZ3n/Ve9eR+/vb7j7Kt1+cVdvGp
      kewZfdbGsmP09PaSiVvMzMzgeR6JRKKVL68R1vUbjUaLqUEIwenpab71+DMUi3Oo3mFkaabp
      qxcSuzjB5KvP4Xt5aFRxKycZfXWe3VdvRXp1GolOsBIE6W6E7XPw0YfoHRykOH6EzXfegwgC
      pF9DSYGX6sTr6MYuT0PgM1ksMTMzSz7f1WZ7NBqNtiS28A4QZq4Ip0GEYx56ImhhTyaTZDKZ
      FbPqm1glkWDJph07GCr0EbMkMy89xqH4Lq4eapYa9g1vYWT9EOmEw9rtN3D1+h5yg1v58G/u
      I2k3b2Iimeaaa/YwONBHEDQDOTrfpVwuUyqVWu1AzUe1Wm1rIB2Px+np6aGnI8nLY+OU+jaC
      5+In0gSWQ5DM4lg2ua4OYpaEeJxjhw4zVBhAqQAr000+kyBlCywvoLBhAzEVUHjrHXTHfXBi
      KGmTTKbIZZLEHKepujlJgvIc8USckfXDbUKsyymjoDszLmTMm50bIToXSndxX05jdyG5WhX1
      AGG89PwvWbt9Nx32wjfEdd0WM7E23DQFdxAEVCqVFoOCDiSZzMdhmDq2xuGj43z9qf3MVOv4
      wsauzaFiSUQQENgOslbCPvUKU9UY3d2dKCGatoHngpAoKVGpTmR5BuG5NLoKONUiym8Wykiv
      jp/sxPIb+EFAbH6K3sIQn/m9e9oitZr6XMMkqtIlnTrlwYROj1ise4wQgkwms6yuTljl9QBh
      bN2155zHaGImLeSu67YmgxYQTVtouhLDhmTYTaiPVUqxYXgtH7ct/u17P+S1k5M0BjYhVIA9
      dwJ3eBd+thcB5DyX2uBWEoeeJYilkf5cMzUaCKrz+E4S7ARWtYifzBKbfo1AR6fL09R71xOb
      PQG2g5NKt0WEhTibZVkzyZmuTU1UG9bhXddt1Q6YxrK2KyzLavGOrkSsPKVshUB7MDTCBqBZ
      6B42EqN2ADPHxXx/eHCQ33nPPpLpLFajjFOcoN4zjDN1BPv0OIGTQLh1nMkxhFJNIxhQTpxA
      AEohq/MIKbEaNaz50/g6YiwkfrobZ/Yk6sxrmwfyi+bbmJNYe4l0dqZWZbQXR+v5upYgnPev
      lFpSt8rlxKrcAZYKXaShhdr0letATxStSVgPjsr3MV/rzufZMtTPT/18s5VTOo+b6iQx/gJe
      VwElBF5+EITES2axENjVuaafX1oIKQjcOl6mG7tWQim/6UESksCykZaFVSkSdHTRmVm82Z0Q
      glwu15bGIIQ4S33QnWB0/r+mgNfF9Cb7gya8Wom4MgHOgWQy2WJWK5ebRSU6ghlmUotyH0YF
      xaCdD0gIwTXbNjH67EFcfbzn8o4dG9k5chWnpvp5+tBrHFYBzuQYVq0EKHzpIAOfwI6BZSGr
      8yjfw0/3YM9O4HXksLwGPZbLtJCMFHq4/rprSafTbSqdfg6v05gnk8m2JLcwpJSkUqlW0b8W
      8GKx2LIV9Dld172gHr6XA6vSCI7CQolqUUav4zitBK65ubnWqmeOMf8uRAESDiYdHjvCQ4//
      mDGnl4xw+dO7b2n9FpVKlQe+81+MBlmc4ikCO46yHezp46hkBtGo4KW7m2kTlVmCTC/MTRJ0
      DbA7Ax9571309fVFBrV8329Nbl36qDk9z2fl1nq/pm2E1yd8NptdtoQ3WOWsEEtBuHAlDE3p
      p9Ug7fmoVCpndV8xDV9zFzDTiyGanMrzPF45eJBcZ47CmoG24147fpz7/v2RJvub7RDYcaiV
      UMkMVqWIQiAtC1/YSOUhbYe37drG+2+/mc4zef4LIRwcMwN75wN9npmZmZaNoJRqsUMv1y5w
      xQt0Diwk/OYqnk6nW1u8blaXyWRaBfPhMWEVyAwaRQk/NHeX7Vu3Rl7LQH8/Wwq9jB4+1hRW
      30O6tWauDwJh2cjaPBnhU+jr5c4797Fjy+Ylrbzha73Q1XqhCHh4kVgpuDIBlgDdrM28udov
      rlnMgLNYmMOrqh4bBVNgFjpGSsnte3dz+OhR5oOAwLZAgfAb4HugAux6hetvuI7f+uAHls33
      rm0As6fyQiTBy40rbtBzQAjRovPWgTEN03jUgbKl1L2GYdoMWlDCLY30+dauHeKu298B3QX8
      fAE/0YEfS4GQOEJx9bbNyyr8+jpNwxheL61cabgyAZYIMzCkhbTRaLSt+iabQTiv3sRC74V3
      gfBx+v9rd+7gtkIHojSDbFSRtRKWW8Oqlbn7PXcte9TVsqzW4qAfmnn6UjYluRBcmQBLgN4F
      0ul0ayJowazX623dUZLJZKsjih5rwlzto4Q7ym4IjxdCUOjNE6/M4Cez+PE0XqabZDqzZOr2
      Sw2TGl1/J10YH8Zii8WlxpUJcB7QkyCbzbbd4HK53JYXFIvFLjjn3dwFouwHfc6tmzexJpPA
      EgLbrSKrczi2tWIyLuPxeFuPXzP+oWEuHlG5RpcDK+PX+jWCEKKVDqA7sSilWs0ozGOi0gCi
      CksWEvRwVNl8pJJJPrjvNnYW8lidvYBgVtnMzZcu/Y+wBISjx2ZdgUYsFmtNEl2bfLlxxQt0
      gdBCDrRaFoWrp1zXPas2QI8Nn8t8bk4IM3YQHjc0OMhH37uGU5OTnDh5iucOHiGZXBkqEDRt
      gVQq1eYihrN/Bx1x1g08Lqen6Eog7A3C932KxSJAW3khvN6j11zZonaEKOiVPkxBsphwSCnJ
      ZrMrRg2C5nXrDpCWZbWItyDa9XupOEGvBMIuAEsROl1KKIRoceprL4zjONi2jed5lEqlSF94
      OGFusfwbfXzUeOCydVU5H2jvmLaNwr+lScilM0l13OVyYGX9Wr8d+WZxAAABLElEQVSGMKnO
      dS5M2HevJ0WUhyecQh1Osdbn1X+jnmvDcjlzbaJgJgaaPcfM9yuVCuVy+Sy+ofDveKlwZQIs
      goVy5k1oMle9YnlesxFF2KOhGdDC5wwX0oT9/+HJZL5mGpZCiBWZcqyvayHiLc0HGh6jc6ng
      3ORjbwQra8n4NYX2ZuicIK2mhKPCui42qtFG2PCNej+Kmlyf2/y7UnCu69HqEbyeNhGVMXsp
      DeMrO8BFgr6ZOuMxahfQk0AzLZsrnPnQx5rPz7W6rzTdfzGEdzWzG7ypFl6O/KErO8BFhL6Z
      ruu2GlZHIZFItDjzTRw/fhwpJaVSib6+PqrVauuvjkAXi0VyuRwnT56kUChEtlRdTmjh1YEt
      raIppVq1BudqtaqP1+cymaUv9vf8fx/YAIP0yCjsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Natural Disaster in ConocoPhillips in US' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Natural Disasters' width='192'>
      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
      OBj/Dxvg7udMHrwJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Oil Refineries and Natural Disaster' width='192'>
      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
      SgCuiuO1OVrff82afU3o1mO7FfyXdtQ1bab2v/KCKj0CrsI8h1vY+XPa5/oHy6L87DvfafUl
      mqa5Ia6tJ3s7yDnnRQsYY24c5a0gpJyYwozLlsa6jwbiJQ1aP1v/WxGRtUDce59KiTZGo9XH
      Dqc1EidYJ4hsn7ldcOv718+3C3Tb362m3ba14G3fpe7K9/hEL83Rto/155cUz733fGkHOJ1O
      wDVZpn6n3v98Pi+7ldaaDIzzRMrpsy2gTxEN772TUuqPWwAg0eC2bYkxLrb/NnBVhcqWCalx
      g8vl8lFH68SmlJj8fPNZ7fT2+u3f1ppk2eruCMtWEEDs/hADWt3nk6z7uBaOe9HR9fOrVtvu
      Btt2Tyvfa9uJ3P58z7ldf3c7R2uz5CXlsB3v7di8FLBca/d1f9YLpyonpRQqZxprGf28UFDu
      zdt2p3/pfe+ZaPWaP0kgrJo0fd/jnFs049r+nMK8dLamU1anqO4CcIXxUGoxfbbBsfWzt0Gm
      9ctvP7s3UFuN1FpH37QSiudlzfhaXODe3+9lWm2v35odL2n+bZ/X126FcGs21b/Xca4L895Y
      rRdzteXv+S6vmR2fM0f3xu2ewnpJy3/K7Lmn6Oqz/ugdYN2stex2O56enu46ncM8LbvAMAyL
      U1RNqLUDpoDONfgQiCmRcsKoTyMfL6EV6/7Uds8e1lqj8v3Jqm1t2tTdam3qVGf3nqC/pvk/
      59p7Gq+2T+Uc3HuP18zIdT/W5mr9+72+fc7zP2eOtJIxtMbinMM5R9M0jOPIOI6fbevXOd0q
      joUG/1l3+QGtYr5N0wi2u0psWLeaTlmd6DUUevOvUlhjgM/n/Wwdw9peMpXWf3vp962JcU/g
      68/r+2+fcW/nuPec7d9e07j183uCde/6df9eiu6+9NzXxv/eon+pfc51j/sjbdNirV14Ql3X
      fRa9ffu3NX/pZqF9Vm9/QFNKuEHGGKy1aKWJKYlNzXVAq89QYcFKmjLGLBOplcaUztaI4NoW
      ra3+/tKEr4X2ni+x/n29XW53sLWg3bvuU1j5ui8vPX/d/3uCvh2De37FvbG5h37BLR/qXl9r
      ey2wtDUPX3r/l56zHpf1GBtjGIaB8/m89CHnzMPDw6I4X2tbhbpWVH8WE2jd2rbFOcfpdMJa
      +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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Oil Refinery - States' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nMS9eaxlx3kn9qvlnHOXt3W/3skmKYqUuGqxaEnjRZtljcf2GIiDGY9hK5kE
      EySY+SNxVkziCSb/ZBIMEMATJICRbTyOExuWE3jG41WGLdkxJVk0xZ2iKC5Nssne3v7uPVtV
      5Y+qr06dunXue02pWx/RfO/de06t3/fVtxfb2toyeZ5Da42yLEFgjAFjDJxzZFkGAOCcQ2uN
      qqrAGIMxBkIIaK1hjMEQUFs3C9Qm9RXCUZ/R70P9ht8ZY6C1Bue8927dNpBCQHABpRW00n4t
      wr7jfsJ248/iMdC78Xjp97ZtIaVcujY3890yGFqvm2kvnLNSKjn2ZUD7wDnHaDTyn5VlubDf
      Qgj/TPhcCEorNG0LKSSkEH6M1I/M8xzT6dRPPkRuzjmMMVBKeUJQSkEpBcYYlFLQWntCISBC
      OS7EyERtpZD5OEQRbmS8aalNpj5DRARjkEZDCAnOGGrVoG1baK0xGo0WiOWouYXrA6C3bqm5
      0ZoDdqNT6xHOe9n8ws/j71NrmBo/fU77Smu1bN40h2Vtxr+H6zoej/36AEBd1712sizDZDIB
      Y8wTCK0VQasVlNHIWH8daVyePBljvrGmaXrIRJM5PDwEY8xz/bhBevZmIbUpIQLToofckr6L
      IUUE9O7QO/Hn9HsmLbfXWqOQOTgYlDsBx+Nx7/14PcIxpsYTbmw8dvo+HmtqjMvmEUPI+WLk
      C59J9Ruv/XHhuCdwvF5aa7RtizzPwRhDURRomqbXRtu2/n2llGfe9BkA6AF8pOd6bIlzjslk
      As655+7xoI0xqOvac8OQQGgiQgh/jN3MIvU48MD3RxFZzM1TMCSyGWPQKgWlNZRWvg1qTwgJ
      7biMUmrpfIwxfo2GOCCNJf4uJPjvFoRzSfUVPrdsnNTOUYRw3O9TREBACA5Y7p1qsyxLaK1R
      1/XiOsOAEz4lltIYgySGTiYTP/nUJgwtEok+R4kFMWit0arWt50SfTzFBpwxFp2O22fquaqp
      cVjNUTYVZtUcTcBdqH/BOcZFgSzLetyHxhW3H29aSHjheIe4cTzm8F/qe0LSlPiZeodz3ju1
      4raXEW7c73dKrPH7oRistcZsNuvNi8ZaVdXCdwStUqjbZunYFjQUUryKovAdcM7Rtm1PPktt
      FCk9SinkeY62bXsLG8tnBHXbwMAgk9mCrLpM3AE6WZpEpfAEiLkKPROfTIwxSCHRasvVOeMo
      sjzZL0O/rxTc7LGfYjYx4Ry33SE4ah3DtsKfsR6yrO2YuGPdZll/qT0vyxJt2/ZOgni/m6bx
      Oim9r41B0zZolcU/PiBK9nSAEIqiQFEUfgGapkmKM8YYNKoFZ9xr2EIIkFUpPpbixTDGWlpa
      rXqDTMnHqb5JDBFCHAsJQqRdfNaAgUEbDSlFkoDCvlPi2lFcPHxGa+0tJEOnZkwQQ2OK36P1
      OA7E4ydmtwzhQxjSw44ygoRruGytw5OW9u+o/eaMIZcZlNYwZlhUBZAWgcKBTadTZFnWO87D
      jSbxhT4jYsnz3J8ipBeEkydonOijtMasnPcWJ7Vo4TEthPDthmNexu1INwn1CWMMpJCYFCNk
      QoKBYV6VC+/GG5YaX+pn+D7NLTzi6fd4bOF7AHq6QYgQ8Yn8bsURYjypvR5qM9T/wrHFImHc
      DmPMv5diIuF74Wl0M/vNA/0NLC3mHUtLnUwmGI/HnuOGyKPdKdCoFtpoaK1xcHDgFyHLMkgp
      vWIcTo4xBslFd6QdwUHjSacUsmXvxubV1DNFlqPIcuTOApR6Jvw9FE9S5tt47KGCnlKQCUIm
      EL9LsGC6XTK3lO4Rtp1awxRyxkgUzzseX8pYEOpz4RiG1uzd7vcoL2wfxgBOdM2yDCsrK8gy
      K24fy0tBL+Z57gde17WXrxSAxsnxktvjiUxYdCIYY3p2XFqsIsuh6wqjIkcVmblCII4XEtFx
      5NmUrH3UezTHZc8R0qX0ibD/ZYg1dPQfJTcPiR3HgaPWICTM2J8zJPoBWNgbYwyklGiaBkVR
      JNsJx5OCmEG8m/3OhQSTGQQXWF1d9adbnufY29s73gkAWIRYW1vz9lhtDMqmDsyFHHWAwPP5
      HE3TYDqdemIIJ0zyL2MMmZBO1jNQOi2zhZzm3UDIPbTWg+JDOMajRInYMRO+f9S7IfcbGm+K
      +6aA5hOKIkOQmm88duo71E1SnDcWT+j9uJ247bD9ZfDd2O/JeIIiL7zpmtYKgHW03WyjQghI
      ad3KeZZBCmnlZgbkMvOLpJRC01gT1Gg0gpQSGxsbmE6n9v3ARS6FgAGc0tLvMz52Y3nyKGRL
      HeehHHlciDdyPB57BS3FwZchWnxKpMafIsqh+YciUjzeIZFnGQyNf4hrLxNNQk936v2hecZz
      Tv09NPawD1qT7e1tVFUFAN7JlmXZ8USgEKSUWF1dRV3XmM/n0HzR4kCDqOsadV17ZM/zHKPR
      yJtIGWMeiTjnkFqiUgqvbd2ANgbnV1axVhTJBU5xmJuBd8NdQq5HxygxhWV6xVFy+TI9gHSn
      465B/BkRxrtdp2VjTolvIZB3/ChxMtVHrBPQZ0eZhEOgPW6aBlevXsXe3h4uXLiAjY2NTgc9
      9qgcUMd5noNzjoODg97AUhMhWy4FdpH1JnynVQp/+cbr+PWnvoHt+QwGwFoxwo+//wH85IMP
      Qw54Ao8r1y/jOseBVD9CCH/KSSmT3OwocSM1phCJjTFeYQufXdZ2jKSpPr4TiOXsoXZ9wNnA
      2gyNaZl+dLP7TT9XV1dx7tw5bG1t4eTJk/67myYAAlKMV1dXcXh46J0R8QTC5+kIEkKgrmvs
      7+9DKYUsy/DUlXfwy1/9CppAB9gp5/i/n3oSmRD47L33Dcrcg4tA/zf0tzuK0QW8Mfd5ylUe
      jn2wD6fwh5t8HO4Ytx+uVaj8tW3r1+3dws2M5Thw3JOXCDgOHPxOTu6bAeqrqip/Gs3nc993
      XdfvngAISCTa399HlmWe45MTLGUJadsWh4eHePrpp3HvvffCAPidF5/vIb+fBIA//NZLeOzs
      edSz2eA4RGSKM8Z0gVDM/w+AgWBWJND2BfsOd8iLUIa0RBISB0OaVjrOZD3JN8uhh54Nw0uW
      wa1EKqXUkc61lHgSjlkb7deFwDjn47K5DekNxHCPcxIYY3D69GmvCFOEglLqOycAwG7S+vo6
      AHjdYEhhquva22Ife+wxvPrqqzi5uYlXtm74Z8ShBp9laDdrGC5w9WAfNWM4f+E8OhTsEBoA
      BLNypibENwYG1hlCJwEDA+f2BGhD8atpkGWyh9haaRiEIQDht+Gim4W/Bee9jR0SSegz/+bA
      kR8TSuqzdwNHiUchp6TIgKXtwZ1eWFS2ldbgCUU4fobhaP2MkBcYDpIbek9KicPDQ4xGo3en
      AxwFZCUiJTfP86R5rmkavP766zhz5owLN5ZoSMThgJGWPwBAJgQEY2jaNol6UkgYdBaCVrVW
      rAEDZ52DjYMhkxJla/uRQvrnweAJSDDuvNuWcwGLZMfAoB1R+FPDEVmL1jvSlnHmId0pBhMQ
      cwqIux4HbkauDhXPZdGvoWFAubForX14DD1TaYVMyMFxaNeOOOZJdlzCBDqi2tzcxGuvvQZj
      DDY2Nm4NAayurqJpGh9IR52Hi8gYw6kz5/Df/dqf41Mfuhvfd+FOfPm1V+xzIwaMlMU4Y3Dv
      yU2s5BnKquwvnDEosgIvvvwytDZ4//33wBigbCov43PGkMnM+heMReCqrpDLDC+8dhnGGNx5
      ZtUGwhnjkJhDO3GMETdySMhIJGLLxSGTW0SIOXaKm6cgxdVSpELva9Z9m3IgDYlR9BkRYmjP
      t8uv0TY2ELJum57nnhBfaYVWK4yyAlVbo5A56raBctl01F7dNpjrErnM7Ck5QIg60CeHgIiS
      jBA0l6E2KSphdXUV73vf+6C1xvXr12/OD3BcINPbm2++iRs3bvhjKrT/M8ZQ5Bk218aYjnL8
      9CMfwIXVNWoA0EB2bYQTZoyf+cCHYFLmL8YgpcAXv/4K/uAvX4FyiTyC24XnjGNeKvzq7z2F
      N9/ZAzcGX/36k7h2+TKkEPjCnz6H3/rSi1CtAgOD5BKCS3d69MH0fidb9LAMSjFOKZPe0Jql
      TJ1HQco02urFGJsUYoT/QnMpIXVZV1DBCSUC0STMBRFcIJfWJDzKCr8HbcTwcpkhE8Kfqqm5
      xCbdIYjnFhKu0qqnjxADINmfcPHcuXPf/RMgHNSdd96J/f19vPTSSxiPxzh79mwvWebty2/h
      P/7ZTyCTAm3b4h9+6kfw2y88h2ffeRutUpi0Aj/5wQdwcW3Vx+fHUNU1fvZHPwgAEFnuF5pg
      a2eO517fwgN3beLMmsTv/9VlfOQ9B7hw8S78/Oc+CG00hOQwRoMJgYJLlI2BSvLbbm6AJYSR
      LFC39ULmkVIKDVpkiZzYmDsDixs6JKrQ54MKNoyXt4fEomUE6U8pAIW0QZCVsidqrLCGiBe+
      C1hiiRGdudM4BKWV080s8VVtg0zIHrHFIlpqrcLPyqYGZwzjfNR7LvQCe//EwcGBmU6nyYV6
      t0By9Ww2h3DIPp/Pcf36deR57k1Rp0+fxsmTJzGfl/h///QpnFqf4K89eo8fLFlADqv5ks4A
      xhkKkfUiTkMOUNUt8lyCA7h+7SomkzGQ54ABRlmOeVkiyyQymUEbjUZ1MegsoZAxMJCGMs5H
      PqSb5k79GmOQy2wwsC61buG778YGHtq/hwhlmSKegqqqkOd5r83YxAl0p8LNxmvRc0orNMrq
      T0Z3Yc9hGidgdQWlWmilvTMy3O9GtU4KOFqZvmUngDHAvJxjMhpDaQ0hJX7rL5/HAxfP4rMf
      fgRS2vTCpmnQtg0ef+4t3H12DR9/5G5/jL1w6VVkUuCesxdQucyelBUh4/3w3XDjGWMYFR0C
      njpzFgDQqtZaHRhzYR05tNEo67pv1IknBQYhXLEAFwqeCWkjYROIRSfXcYkAWJThaV7HsecT
      MsTPfqcm0hDxAZvEpLSG4Lyn8MfvHLdtwCUiOVHK8GFCZu5ZZdRCG7EEcFS/t4QAGLPhAUor
      1HWNSjUYZTlevnyAtckatDGomtpn9GRC4h/925/0yTR1XaNuavzzP/oGRjnwjz9/F9A2vUnS
      6WBPGwUpuqkch1PaMhmpwQ8jC1liWq3AwQEGVG2DQjJobbwlKRwDYI95Y+QgQoaK6JBIMXQ6
      pMYa6xK0Rq1W0EZjJPNBU+OyfsLx+yQmZi1nKdPnUToIYwytck5E9AnMnzKwCB/2Qd8Tw/lO
      zMG3RAQC7KC293bQ1F1q2kFZYlqMUOS5z9U0xmCcj5BJiaIovHikjcZzr30buRR4z/mLQboi
      w86Na3jmpdfwsQ89hGK8glxmyUSS40JVVSiKAlVT+34AoK0bZHnmFWCSg8GAXEhLhMaAM46q
      qReUZ2+BYByjbBHpwuOd/g6Dx5atLT1Lp0Uo28b9G2OsZcx9ngl5JJcMxzAvS3DBIQPZvFUK
      Bnb8uUtl9WMyuifXE6Jvbe9gbXUVhQujIYKZzecYjUbY29vD2upq7wQja54bVG+taN/eDeJr
      4zz4N/3mMYExhhNrG7h64xpyaVMk1ycCf/XyW6jaFj/08L2omtotgn0nzP3kjOPBu+/t5GvH
      CgQXuPTODr747C4euHcX51fWwTnHy6+8hqdfehM/9ZnHIAPlZwi0Vtg9rLAxtc+S2EVgjIHM
      MrRNC5HJzlLCGJS2qC64AKGbPRkWFWea31EmyBBxj7uh3srikC+TEk2Qnae1tkjqOCkcsaZE
      JJpzLOeTbK5gxR1jrILcqrYnbngLUsAEwvZUqzCfz705Tbn3tbZ5IqdPn8L1Gzcwm89x9vTp
      Xv9+nJECPhqNMJ/PeyVqjjoNtNZQRsNojVq1t8YMGg5yOp5Ys5SzqvzZs2/gi0++5i0URZbj
      a89ewhf++ClUtS0+5dMqg/BqMOvthQE+9NB9+M//zsdw9uwdEE7+v75zgJcu70O1i0k117a3
      8cY7V3qL8s3XruAf/e9fxutvdx7oULmzlhADLgRU2ym4WpueimDl/Ka38QuIlVgbn97IyN1x
      /JOLrDRVW/t/tWowq0rUbeP/qUAvEYyhkBmkEIO1cmiOA52iblvMmwrzunRt903TxhEYTN9D
      a09WjVObm9jb37N76UTWs2dOY3V1BZxznDxxouc8OwpSRKzN8goVSmtUTY2G8lhulQjkB6Q1
      rt24bmP9tUbVWhv1uMic/TjDv/jdr+PVK/v4z372h7C/tw2lNS7t7OPx51/H3/uxHwS0QlmW
      yPMcu3t7OLW5CcEFtnd3MB6NoJTGqOhEjIPDQyvSVDWyTOI3/uQZvP7OHv7b/+DHPeIdHuzj
      ay++jY8/fCc4FxBSom4bCMEhuUDd2qQf3TqnDO9kT8kEGGedVxMGTdt623+K+4yzxaM6FtmI
      25JOM1TNAOjEJwM4J59B6xBScmF1ImPAOIcJMrxoXoVjLimLUIxYB7NDMBFlvgHezDhkrSJo
      nKEgFIlI9Etx7PD9RrXe+ZYCKuImpVyqc1C7TduiVp0+ectEoHAgo7xA27aYVSWkYAAY6qbF
      v/zq07j7zDp+5rMfQlU3mIwy3LjRYH1tDdcvXcOrVw7RKIXKVaRr2xabJ09id3cXRVEgk9Ip
      zA3KsoSUEuvrNmttb28P4/EYWml89iN3Y+9g1pOJs9EIn/rI/WDMRgsKzjEpArsxbIYaFxx1
      VSMfdS73RrcQsCeU1tZsyjkHEtECoSybyp0NkZAsS9oYf9rHp1K4rmQmlGQubGow1iUmeeQK
      dA8p5IIyGeoix7E00XsAvB5AHt/ed67/XGZ458pVrK6uYMUx29l8jtWVlV7/QOeJpvCOTCxH
      0bBI2XEsZFIKNLoTtW85AQDAaDTCwcEB8ixH3bYopMTu4QGe+vZ11E2DTz76AFZXJlYW3NxE
      lmX4sY88hE888l5Mihy1FJjNZlhZWYEQHCdPnoSUAm2rIDjH7t4eZrMZTp8+5X0Op06dsvKu
      0djYsIF6PdOpkD3kpO9pEQXn0MrAMCDLc6imBRccjHdBd3Vb23AH9x8F3qUcN2VbIzcZOOtX
      yAiBZOpwXMe1/dO7YcBZPCdgOJ5oiIszZgsXCCFRq068pPgnGzB7tMIuhMDu7h6klLh69RrG
      4zHKsvT7ZcPJOcajEfb293H6zCkwfjyveLh/Q/6P3nfoxNJbqgMAHafinONff+1F/Ce//EXM
      6wYnVlbxX//cJ/H5H/kojDE+yb4obP6mtS8Lm3cMjdF0DA2DF771Mv7J//H7uL61g8wl16yt
      ruLC+fP41d95HL/+e1/Bxvq6TdeUAoXLRQ4XKhwTgdIas7p0IoLuKXSMM4hMQivtfAEW6ra1
      /gnnFMuEUwgjJdJzOZOu/6OMxtbONpq2xfUbWwsFvoQQvaLFPXNkUBSKsz7nDc2hQ4jkLVWJ
      HOW4nRDIw81d5Cs9H/4L27NxYQw7O7uo6grGaOcDsvkg49EYeZ5jZ3cHdVP3gx6j9Vom44fj
      pHUMnWTeIODgtpwAJKM9cPEUWqUxyu0RvTIaQxuDeVVh+2Af506cxOWtLfz6l7+Bv/nRB3HX
      mU3/PiHQdJTj9BpDLjvPIIVWbExy5JnwpsHrOwf4ld9/Gp/58F348Pvv9G09++238cSLb+Hv
      /OgHkWd2Ceq2BoyVOUnJBPoijMgk2qaFzLp4JsC+E5pPGeMYyQwGxplH7bOtVpBcLIgaddOg
      aVrs7u5if/8AUgqUZYnxeIz9/QNMJmPs7Ozi4sU7cfXqVRSjEYzWvuqG4AIbG+uDMv1RexP/
      nuKitm0AIGtYulAayfcx8Z3a3ESe29Pt5MkTyGR3AldVDSEFtFKYTs56oo/bjf8OCS3Ek0a1
      kEKgbCoUWdFF8DIGo/uRybeFACgt7qG7zuPBi+d6Azcw+J2vPY0/+qvL+Mef/wT2ZnNcujLH
      1v7ME0B4xF24cCf+wc/em+QC/8aPfhSNajGvK0yKEbQ2qFqNVvVLcrx1bQ/Pvr6Fsm6RZ9ZB
      NcpyX9tIMA7G7WIq9Ot5CsGhnGmUQHBhTZEwyGUOzjsECZGSM0uorVKomhqcM+/Ay7IMdV1j
      Op3YLDkXRr62tgoAmEzG2NvbA2McTd3g1KlNXLt2zdrdxXcv4yvm3v53WCukMZ2uwtCVjwmJ
      JuWTKYqu1CRHH4llJl3sUv+0ssYAgVYrZAOnWIpo7RzgxZ2wTcGF0/WsIHTLrUAEe3t7C2Xu
      iMpfeOMtPPXqO/ipjz2KTHLsHh5iUhTJqMxcZJ57xNCqFtoYV6WCogA7hZKgaRUO5zU2Vsde
      CaYqdgS0kGVTLZgNtbIWrZAIOBiMc5CJwGpB4RLE/TMpHWHWfi2ki1yllE3ABvlZ8Y1BcGYd
      T27dpLR9GKN7l3bEkJKDYzEqJTeH37cugyrPMsybyn8/zke9LLxlbQD9cGuyXrXOwgNHWDEB
      eB+CC+6L50brEZaZvJlT0JjbSADz+RyzssTBbIbpaGTpz/TLAr74xpu4vneAx+5/jzcpxpDL
      HHlEAMYYV2DXBrf5z5rW1vlEWo4loGCv2HoBOPFGtf1waGNl/qa2/gqZ2fj20Aw6yUe9/sjL
      nAtpC/G6anoG1r8huYCGFfOU1oHjz3pgJReewMlMa2B8+HEKuWMIuTuPkDf8LIb5fA4muQ+N
      No7JhN7ko06g2JJVNbVNnnLMIswYi/WHUKTybcGFSAT1QuPUzeOEe9xyJZiAc44/fep5/Jf/
      /A/xrcuXk9zpd//yRfzGl17C9sFB73NCuHFe4PqN6/jNL/4F9g8Peh7NXGYoZFc9YVY1+Gdf
      +Cq+8uylI8ty0DuhskT9Ws7cB8YYwBiKUXeUxsdMqxXmdeW9tXQcV22DsqmgjEVeyQWU0QCz
      5ddpDJmQGGcFCpn7HGbpkI4xW1HPWrn6jCD8GcPQGixjDoBV0sO8AMCebKly5TEQl471iVxm
      4IGqGybIhAYIIDCNuv2u28Y645zplvKDqTBBmISVgnC/bxsBGGOwuTrBxdNjXLp6Fd945TUf
      eEb/fvoHHsG/87mHMB3109wE47bOI+O4fGMPj7+4hb3D/m0gFimtZcYSjLvCSSnUTesX9WA2
      w6yc4S+fexnffuMNAIvBY0CnWMeV6sLxKq0AZjqnU/B+3dQutLrx9VO1f8aFF7g4GpujrLxJ
      0ZodFwvUEtDnRZYn4+bDZJX4X8wM4rn39DPqN+jeGJvz7OtuRn3Ha+U66Z1Q5OuIixTTO5zz
      pJLtTwTTzY+IkKq+UT83trb8zx7xsn591tsmAs1mM+zt76HIC/ziv/hXKCuD/+bzn8M4z1E1
      Neq2xXQ0Rtn0S4AYY1BkuXeINE2NrZ0tnDp5CsotAnHFb73+Gv6X33kGP/uZ+/ChBx4AFxzP
      vvBt/MofvYh//ycexcaJFfz3/9f/h/efM3j5KsN7zuR46N77cPHMGu6+cGphzMRtWj1QctBY
      Jb7Ico/QAHxqIGAV35545HIJgE5fKJ0Di8SZmct/yGXWi3KNxxbHEMUQig7LRKO4XUJCemc2
      n3lPMANDnmW9yhehSGFDzOGJOWZSoSgU5jIfV4k3xuVwu7B0en/uAuqoz0tvvomV6RRbW9s4
      f/486rpyITYkKvFbGwwXw3g8RlVVUErh5z/zYdR1AziK/bU/+Rpev3KIX/jpH0SeSQhmy2Az
      MGueDCDLcpw9fQ4AwCOkXF+Z4qG7V3FqY82FIBuc3tzAxx88ixMbq5iMR/jcY/firjNj/NT6
      CZRVg3/6G0/ghx+9gHvuOD0oOgDpEIG2aSAyaWOdgndrF48kHCcLOZCGhmACuZS9zddGo24b
      5FluN8kRVByyHcvHy+BmEH/Ze4ILFHl3KodIHK+ZV1ajLmPkZ4xBMJFs76iTj3ADsGEggi9W
      nxuPRtjfP3AlLBvUdYMTG+u4cvUqTm1uYmt72/pQbtcJAAAHBwfe4QV0UZC/+/Wn8Oa1Pfzc
      Z74fGRdo2gr/5P/8czxyz0n8rR95zFoLXCju0OLQZ3QsV1W1sJgUpqtcROAoL/Dm1V2cXB1j
      XMhehQEScaqm8Zu5oJxR8vaAea4jZKBRygePhel61GbV2LTKcV74cvOp5+w8zGC2UwrZb4YI
      wjnSe/P53Bc3pu+GagB57q41wNATZeJwh5TFKByn9ao7K4+z7CntGIVjIJRBRidACJRDQKcZ
      6Qs+/fK7URjrZiC85Y+UFQD4se97FGAM87IGhI1X+cFH7sCFzVUbkcm4t+T8xdf/Cm9cO8BP
      fer7MBp1hDsv7b1emSuRIoXsbRqALrRaMEgIAAZ3nl1Ho1pUja1X5CtYaI2qbbyeEkLq6E8p
      9a2xSShWAXZyu8xAFGWM8ZYL25725tJlSB4j6VEWoB5SHXGCdOZPWxbGmm07hZcC2wiqpmNo
      5OQLgaKAw/VSSnkbf+/ZgcoVcZ8AUKvOjKyadqFsCxlOwnbDatfaGGjo20sAjLFeCcXwSPu9
      x1/E737tNfziz/81TKcZPvvRB33GmIEB5zYndXt/jne2Z2iaGlk28mUx8jzHeGTjwonT0+Qp
      SYMUWsYYMt7FthhjwKXA4XyGPMtt7aCm6m0avdcjBgNwuXg1Kmcc2jnQGP3tHGykABNyE8II
      ztFSJGgmMMryHnKHENdJDddziAhCIrHKufJcNH6+VQqNsoQ4r0oIIewd0VoBurO2GGNjpUi/
      aY0G0xqTYpzsOwRiTSkxKswBblULJvqh8XF7TdMM5g8PAWe2gsVtJQAhRM8ZFk7ovRdO4gcf
      rrAyKQCjMZvPnTXAPrN/cADBBT77Ax/GZ7RGlo1sQS0nthCFhxYEa6Uhh5blGMJdgGdgIAz3
      lphWKRjBUFYlwPpHaSx2LSyusdljQkrkrjykVjogCAbBJAxZhVz0pBT9u8ioopw21g/AGce8
      riCF6Dn3hsaWQqYYGGNoWmXTVVtrio2BM2tmhTGolQF058kmP4uXvUnEceO1VXHZj38AACAA
      SURBVCm6FNXQVHoUUtIcetYlYPAkDGN9wstbwraOWovbRgDGGF8tjiA88t539xncf9dp7B9a
      H4DMpLckCM6RZ3mP8xmzeOtkfNQbY4LSiAAMkGX2NkhK5aPPW6W8rE8nxRBShWbXtm7AOEdW
      5FDR/Ag45z76tGwqgNlTgIryGhifySW5QNO21jfgvlO6S6qPFcnjgl+34P9D8TzkreXcMotG
      171b38m7LXIXtCgyL6paZb714dHh6RRW+gitUzFjCdc8rCSX2oPw89B6lZpXiDtebDv2Cn4X
      gKqv9eJkXDIJXUs6nUwwr50plMFzlCyTCxNIBV2FyEGOokY1fnHIskT26MKJGtqFFXCxXLkM
      lVEhJYxLhrefdTUwe++i29hC5qjaxpZsdLkEYfuMsS6wzpkTtTP9USxRaoNTSmQMSilUbu5W
      NDv6Eg/JBRrGfCkSSZXenNeabgiltRfgTtTrw5CiG+5b+Gz4TrzfpBxLl2TDGENd1/4UOA5j
      oJPithEAYwylQ+zM3SoDOLtymKDt8EkHC6YdgnIsv6eYFols0W1gnuTMcirGrKOJAt/I78Bc
      QArjnXd1SHnsbRDvOGuR5aidMg1YccvG96BHmOSx1qafyNFD/mhevmCU6TuQOsvS8S6hMOj8
      Wq1WkGaxdn88T+5OYcAFvxkDIIOheIRgnJwvXr59lGIe95fSvRaNDB1DomywmSvDM6QLhRIH
      fX/bCEAp5Z1AqbqQBFXbhQ8TkKw5tED0mTa6ex8AYxzdoW8D0Cg1cQGRiUsnOOyQbN3jZLDi
      VePq5TBmq6Bx1ud6xhjMm8ohVfo+4iFu2agWijGMuJXbLQFb3WY8EBMUmh6J+GwwWleMIBYP
      hhRs+h6At+CkRJjk+gz8PiSuhD+H9pt+0vccwzFRQwzzthEAWWsyZ3mgigVhKh1AFhPHGcEw
      zgu0ge02xVUaV+TKGO25GzmTQiBTqvXMBp8z1gtxFrzvvIphkHibBnmeo6oqewHbAPIArhJy
      YLqjCNNEZz2fkoZBpbs2ubEnF60vpVPG8n2MpMbFH4XmxKF5kolxGaIfh0mkgJTeMIwhpSMs
      a8efVEEMUCoWKNXG7TsBnGNEcO4SuanMxqKzyg8YTlOPLkemZwk449DMbn4hcnsDTaI6hAGc
      fd2aGW3ckLXIaBYgo7HRjlZR7WBokwEqfWKV1aqqYLRG45TwMDy6DqJcQ4KF0ylIpAJxwbgn
      xmySRyQyAK5am4swNdDIZRcrFOtHsSMr5ORxnaKyLAfFTi+KLckp3tvfR103OLV50hZCyzqT
      5t7ePgB75RYlzIR9pfY71X/M+Y9jBQJuIwFIITDOC18BjDu5TWnVk19NH+N6EyLTWwyCc1eM
      VYAx3qvTGS9C2VSYFmNHBFZGr6u64xywdf9p85VOl9kIN4ZbSvUV76SUTt9hEFIgl3AERXX2
      jRfzlAvZNvRp1FUsC3slNFiXeEyAbaZu6164NIEvyRKIGpVjGGGRq6pteuHlyxTZozi1MRo7
      u7vW2ma6WzZ3dnet4aMqMZ1MMJ1MkkrwceG4z3piP3bL3yEYYzc3LFMNYKGaQL+wksa8Lm3V
      h6ZC3bbWKxnJnfSPMw6lWjRtu1CsNgQqy8iY9dA2qgXjDLmQKLLc2uKxiFhJQnBzIMtHqxW4
      4BgVI0/NtbtPWXBrR5fchkcYbTe4bdLm07Bv6j+Wj8PfJReeQABLBGFN1VhujvUguNxmxpiL
      b1oMg47HRBA7n3qmRndhStM01tLGOXZ2dr2eJKXE+tpaUsSK/QhDJ9FR4wuhN7alT34XQWnl
      M4pggMLJ4uGEFkKP3U8rNrj8UVeK3CO9K8HXXdzAwZhyJQyZ20y7iGSvDi1MPhkG8M4bUqid
      /2cpVwm5XyakS6BRyCV3DjBbi2deltY5xq3/gBBBCA7DOap5iWI86llVqO/YIBArrGE4RS4z
      CM19gpDSClVreqXC41NDa41R1iUEtUqhCmqxNqoF187pdQx5PFwTIQSmkwnGLlKTsrfIr7C6
      sgLmHJ5FFLpC4zsOQntF+BilXcL53zYCKKsunY7idcKBaxfklBqstX93mV3kNDLGXnTHXEnz
      zt4Ol3WlEGKUQZcuGS5C7ryeBCx43n82sKBUwW5eV+DGOrJsSEOLPC8wm88gM4lc5miFja8R
      gkMW0jnFbNtZkS8gf7gGACm2plcolpAsHCfNneKQtF5ujowT0Dm3YQLGuOumtPFlLMmTnlqX
      mFFwzrF/cIDZfI7NEyd8JY69vX2srEw9ws7LEuPRyNVZTYtWYV/LRa00sxoS326fFSi4VZ2q
      hMWDs9aAyHLDGAoXf+4nAHsS+CMRzqpCJk9jKy2EObbUT9iu1hpcCJTzObI883eGCc6hVP/o
      lUJAKRu9qtoWQgpLM0pD5MLL+JmL8a/bGsooFKPCpjFKiZxlPVu0zwbDIO73wJpyGxQSC57W
      GKQbDzUehifEok/chnEEpl2mm0EX5kzZYaRcxzexEND+1nXtw49hbLJ6XdtrS8uqBADM5yXu
      uHAeb1+5gvXVNV8IIJxfSAhxvE+K66fMoHFqJXCbCIDkSwBeCQ6BJhDL9gCgW4Xre1s4tbmJ
      jCqhubsFOIMvrd0qGz5AOgIYuuJNDuKAKsAq54JzX17EjkcArRW7SFnVSmN2OINWCkoprExX
      0KoWBwcHKIoC4/EYh4cznDi54blw3Tb29GJdTFNoYcllhlo13kIWjmtoHam9o8QCEi+pFtFQ
      2EO41gDVzqw80ucyQxN1ZYmpf23qkPVFKY1r164jyzOU8zkAeyI1rkQjKcRVVUMr3YsYHhor
      mU3psvX4Qo7UGoYEH47xtp0AnAsALVL7Zpz1JNYBBOfY29/Fyc2T2Nvbw97ePlZXV1BVFUbj
      MRp35WpdN8hz+1MIjvHKpN+3Q4AY+YkbxGG4duMtAoef13Xtj+rD2Qx1XWE8ngAwKMsSWZZZ
      Bd+ZeymYjwLOWmcBElz4DSxYjla1KNvFyx5S60TOvlGi1mgMuZSAi6dInbgpkcKYjuhtNtui
      1Y3Qy8b8Oz9EIqQjlxnOnDnt9Qab4CN8hYs4Cf6uyUVwHivmWGgX6OcUxAgf6kVhO7HiD9zO
      UAiQfLlY6NQYA2WGbkUBDg8OkWUZiiJHVdXgXKBytumDw0OsTldwODvE+vo6Dmez3iRjmTUF
      FEdCMilAfouAKFxJxqqqsL6+hrZVWBdrbpHt6VVVFYQUPsdXcunwgzYAIMNbz9bu0iZDe0tK
      NKF5KRfuIRMbHL5HRB8f/ymxUBuNVtkoUU8MCMcdjMO9V7t851CUC824NC+voNI4kCZyxpD0
      T6Rk9/CzlEVsWVI8rQdwmwiArrQkWRqIuA7S7nRtDE5snoBqWxSjAnmRW+7k7o+6fuMGzp4+
      Da01pqtTr0xyF3IRlg2MuUKvn0SMiDJ98x9Vd5C5hIYBl9yWMdFdeLfMbXxMnkmYxsAYjcIp
      k1aB7CublHHGvLiW3mx6HuiQKg64S5poI4RJIb41ky6almn97fp1OgrFblGSP2Cz3YZOdjrp
      hhA5JvSUSJNaj/D9eO5H7fdtF4Eo9JhyZGNYFnagtAIT3Cq1bqJUlOncWXvfF4kGVtWwipt0
      pdfDxRkykZEJsWpqH5hXyMw7h4bAmK4yM3pczvgo02WgXDiI0YDRChC2tn5cEIzECc4YOBfJ
      ArfxBqeUQnouHFcodg6JROFnxuUuU0l2MOsFl8wWuCILH4lQQ/L4UEL/cUMYhp4JCZ3aD0/b
      +JlbTgDGdIVvh0pop8JyUxtIFhaGjlOEnJHxLmoRgONQ1gGXOjLjPmXAqQQXKCSSRGB5tbXi
      UIQpQd02qJoak2LUO32MsemPMqiJ6S1YMDCMzoB0nDtdxodARk9xT+K28RxTFpFwLl1nnb+k
      E4GY/w6MIZMSbW25a4jkdLrbqnXLPcehWJYikvBUDgP6UnqBNa3aytM6Yqap/b6tOgARAP2e
      ouY6cQfwwpEFtsBVF7mT8dXWOOzRbGAWqrQNcZSYQK3ZkPnQacBWgM4DJCagmP3u4r62Z3YE
      sHgcG3gxIhxREiGMQeuSwwF4R1LYXo8hRN8N6ROpMyrLrGWtG4cBSyW3M95L1KFE+ONAqJCG
      DIH+Tl2ekdpv+jvPc4xGo0HmlgKl1K0PhWiaxsv/qUHZmjvDIpAHNmxz9o840YfufwLgY+9p
      g8IE76NEFO2SW8Z5gVxmGGW5vek8IbKR/2KUF76wrlcwI8WOgBJJhuZCymL3fbe5YeGs1Gkw
      1G44b/Kg21gqR/zuSOghktMBbA6HsYzFGK8MK7LqOMsXzXfZVUzh2GJkD83i7RLciYmbQmzC
      f8v2W5vbEA5dOw9iSq7sqDi9UZS44ttqG2u3d6IAQbzxdFKUzlkWy/7LEH/ouzA1L+RW1Cdd
      mEde6vBG9FS/C0c/63/OYD3UKsgaC2F7Z8emLLqbNTfW1/1pS+ZYyk5TWmM0GqEqS4xGI5RU
      DNjpZqGooaO9IQTXMC6fm9mEfwAtFJJHCLpEeUoFDdchXMcQiJDCtaFS9CnRJ4Q4DHpI5wn7
      zaS8tQRgjPEBX2T1SNuVOzk9HKCOTKPKaLSNwhh9c148yU7EsGbUVHHV3nMRhPJp6ruwDaB/
      Q7rkAiJPm3oZsxfqCd5xfsqjdU7XoB/uUv6ML7ylTRc9S5UQqqqCEBLbOzuo6hp5lqN1/oum
      sXfwcs5xOJuhbRrk8zmMscg2nUT+Es57IgGtKxcCIqjQJZhYiOOKIVZwaf4kKlJIyjIwxqCp
      my7DLtDRYqSmxPhYpAr3KtXfLSUArTXKukLdNCDbxigrfB4A1cwEuooCwawcn7FiDcXmpxY9
      rPtC8r+Bi9IMjtejRJ4YaKFTLvSQSMJ/AGCC5A6Csqm7E40xMBNYjdyw6CxkLLh+lNniWFTT
      yGeATSYo53NUVYWLF8/g0qVLOH/+PLa2tiGERFHkKAob19O2yt+WwznH9Rs3UBQn/TyOWoNM
      SOTu/oRGtcikteYd5ZAjpkcJ/pQhJ9Hl8i4DYwyyLOsVOQsVeCmlL9FCz8fvHwW3lACEEMiz
      HGVta19a6tSgfE4GoJA56rZGJoRXWj3FOrkg9jKWbY3CWV/Co9ojR154N36sLFE7obIVQywz
      pmTsWBQK+6lVC65Zj8tJbiM0OefOfGh/hHJyDx1Mv8ZNLjOYxjoMDQxkJrBerOO0PAUG4OTJ
      k8ikxNkzp3tji5GjVQor0ynyIj+yhk5sTWJgXgeqddN7LtyfPlizMJ3+ttx731IVr2fMcMKK
      b+H3FFqvI4ZzM/t9y3WAyXiMw/nMizNWju+iMm0sjtXe/YXY6C+mcInqIaLVqsWId1ah0lUo
      S8mc8U+CmKOHymFqwVJlvgnCzSwy6xAzAFTbek6lDZCR8mqAsq56Yk+oDaVOnFxmaF3NUG00
      oBWMsVtIty96UcONlWqMkg4jOMf6+jqqtkYD+Es7UjFa8RgyaYuJGWPjmCRfFHPidaFYK+3i
      tGZ13SuKED7vRa6EIywFZAiwd421tthtcCIMisYB3HICUI6rA46jwHKheAEYY17EAYCMS7Qm
      IAj09S3tkmWESwKhanAsuM83NBXSZ7GMGBZXSpnfQgtOWNPGz8dYezmZDTWMQwxbA4hzAQnA
      aINW2wC7TGYO0Q2kyPy9ZLainLNeGN3zHNMYLPLAhw6nrD/hZ8KVWQRjPudYcI6MSzS69fnU
      jFlr1zJgzJZ1CSEli4cWqtBkyjhDDviwl5ChxRz8uBXeGGPIMptUY/WhtK8pFp+o39viBwjN
      akB3w2DvGVjlqnWhBVIICAgwZkOpG93PmrImOPg68xRgxh0ni0swxovs2wlEhfjCh5S+Ef5N
      4wJcWiYTqFUDkXMfRqC0QtkY5NJWvab6PlIIgDGff6yhwTmDJlEhqIAc9k3j4onxhGsZi36c
      MZiAuPMsgzQCZV155hFz8JTuE65NDIx1dxfHY6N2OOeQ0WmeIuJlyB+e0DGSh3Nftt/0/S0n
      gDy3Fd3qNrCdG4N5XfpgLeMmUMju/q9WK5+lRZWBjYElEGOJSDmll94NF2BZ3fwQwgWKuX98
      hMaLKgRHQzFgBjDMuHRHBm2s5WacFZjXJbTmdsyNdtlmtg2lFeBiexjj4MwVxR2wDh91rKdE
      tLDuUihicGdp0lr36hF5IhswKab6CEXGFDKmxjhEKKl5hZCqMh1fezsE4RwOZ7NbTwBCCEzG
      Y1Q73cUXpaoAGKh4h7WGcdlLxinNgje+wpsxxgepNcaaOI0xmDtzH5VaCTEnDLMIN4baE5x7
      K0MMnU0crqYR/DvUHlxkpgYDcydb2ZY29VJr1KYGNKBaBQUFozS0YKjd7TVWH7BFw4rxCOO8
      f1kfmT3tOPrIMcTlYgjfi5GYbrsPb7kPuXN4QrZUvjFxaUd4isb1OXsiJYk3QbvHsdak+ooJ
      KMsyf70s9U/fx4wMAGaz+a0nAMYYxqMxZtkBtGrAZI42sLLQ4ATnKGSOWTW31iOZ+UurFXOu
      SDBYd1PHrTOZoa0bZHnmSip2FibGuL/NBOjHD5HSLDPpL8gLLRMGrvR3p8G4fplNoQzmF3pC
      y6Z2IhnHKCHGSJdN1agWmpHjrivwS/2HcUPzplzI6U1xz+XWmLRZkPYglu2Tz7ko25joOj/G
      ohUmRbRlU/nSNOGYUv6aIVEr/p3WP9bTUuPxZRGluH1VId56/rfxwp/+VzDVfm/wxhiMsgx4
      48uoLn3JHskwqFQTIJ97HtYmPs5HoDiaMDIyF130pzZW7g4R0MuOsOZYajMlqzbuFkY4Jx0B
      5RaELnagW9xRlqPIchs6UYysCNizTMATNr1n0DnROvGqCyzLRNarlxSO07dxk1w0hlAHWlZ/
      NEzKp761ttXuKG84Hp8IQj4swef9cphB+0NzS4mi9HsIVIEiRPTUewBwanPz9hAA5xz5aAOy
      2AQX/YkLZisnZ9svQG696ASNzmIULnaeZeCX/xT58/8rMjPvtWO08eHWDGyhKhuBPcqVS/nj
      C1aiUFmzxFlgXBS+tigRQ1iFLOTcofI2Go2wsrLi7yCWWQbukua1DjZU9zcxRADGrKmYoi5j
      sSR8ZxkRWMuScZWd03eehWNPyfophdgSBcdI5j0CDsf57VdexeHhIWYz67jLhMSVK1esrucu
      t6sq68Opqson0gPW0JDSIUJkjiNHWWJPw79DuG03xd/50N/A+fd/Dk3bAKHCBVfZ4eGfBwyg
      ljAyYwwgCiDrbobRAeIBcDfEp8MYwnZEEMmYHDPjvZ9hgShgUfRI6hmuBIiUEtPpFKPRCEop
      1DcaNEG6Jed84YaTEBhzJcl1a4lwYE5L5+zMsvRcXHN/mVVmGZho/UPTM7UzmUxwY2sb08kE
      O3u7OLG+AW0Mrt+4gcPZDOfOnMHW9rY1ZdY11lZXceXqVdx98SLefvsd3HXxzuSa0M+QGKSU
      ODw8BB+Pj2UIuS0EwJhNEazdres95QTArCoB7uJSDMn7HdBC1m0Ds/kRqNOPAUwAQR5xSimK
      kbTbfGteXbbJPeWvbT13XKaAphRAAD4exxjyN/R9CVXbgGP5eGqXucUiWT2cd2wdosu4c5n7
      Cs+UfEQplVZZt36H2DdzXEJIjSEcy3QyRtNmKPIco6LAZDLG4WyG0WiEkcuxzrIMeZ5DawPG
      OTbWN2y5lPFoYR+HlGD6jGKCQkY4NI/bVhWCBp65CyAGa+DAgBnWGfpJjnQm00YrNBqQCeFt
      2WR7n5l0bnIIgnNMnOIpA79FzO3Dn3EySl3Xvlw4vVPXNQQXPszX3gqDpHIZj5+xNEdLnT7G
      GHcxn0HVVP5ibeUyj20+r3axSH0CCO3sqdDvEAkJCNninAdjDNZc1TdjDKZTm7p68c47fDvK
      hWcAwImNfl9rq6u9cRyVLhkyLvo8LBwWw21Lis9lZuvpMI6W9b26IfhBhoqnu1iucXd6UQlA
      e4wztFjcpBhCjjS0GKnnQ9FAG+0v8wg9lSE3IkTgzrzKGMN43NWsH4/HqOoadWNLtYf1c+yJ
      SLfF2FBi0mXsXNOKX4or2p/G28SowgV3BEfJLEPiG9ARgk3CV95gQMg8FMcfr21s3YlPylQi
      T2hZC79LjZGIiIC8wnR91rL9vn03xBjjK6ilLqDwA9I1uFHQcuqD4JQxgLsdPJOZDyWgxWiX
      1JIJj/LYkkBjiEWH1CYyxnrFvY5yuRNUVWWLYuVd6cGV6RRzVxTKEw4M9g72e4zBVtGx/6Mh
      MjYHMy6GKiHj9pBGd6HUJFpKd/oAQMlKvxehI5FyGih0vVGN34tcyJ63d2GNmgaTIMya2jw8
      PMTu7i7Onz+PLMvw1FNP4QMf+IC/M45CKGazGS5fvoz3ve99uHr1Kk6e7KJWU2LnfD7Hs88+
      i8cee2yp7hfvN7VzWwigrErsbb+Ft176bVx86G+BSbtAuWnB9i+hnd4JJazHePzKv0ZW76F6
      5N9Fo1xYg7b1dDjn4NU22hf/AOb8x5CdvH+p5WNIUaW/45+EPOHnvaAypZFa35jA4n7m87kv
      CW6Mwf7Bfq++T+tChul+gqE5AC4xR1tPOXG4uF/SKzSsL0Qy5hF6lNk6RLWyHnXhHI5cCH8X
      s67mnhAzIWHa0NmULwTBhRDn+dLPsiyxs7ODCxcuwBiDK1euQAiBnZ0dSCmxs7OD8+fPYzqd
      4o477kBVVXjmmWfw6KOP4tSpUyjLEm+//TbOnj3rb4S/du1az4kZ6wLL9pvGesvNoMbYejnl
      /mvYuvR7UNUNAJYTFTsv4tRbf4h872WM85GNiRltoh2dBOMCeRZaPNzmVrsYV9dg5rado6w9
      KetKKKeHixWKND2bOGz0qeDDNYZS3J+gaRrs7u5iPp9jb28PMK4MeyBnLyNkz7HQhVgXgVUq
      lHVp3LmLuMxE5wthgC+ay8C8HkZGChpDEdwcyRDJ2Eck/cbIN4SIgF3bL3/5y3j77bfx9ttv
      4/XXX8fBwQGef/55H91ZliWUUvja176G1dVVPPHEE1BK4emnn8bVq1dRlmUPuVVg4lWuih+1
      1bat/5ueu+UngNb28rnNOz6K8Wf/J4xWzqF0ZfHU2t3Yq3bA1u92i8TA7v0xaNBRjp6LXhsD
      Nb0T8wd+HtloYxDhQoiTw8PbDoFF+TmFyL4mkFi8qol+LkPgRrVW6Qxzg5m1/9tCVH0+xNy4
      qboCKcupkjJD1hCgiwFqVdtdE+uTi4bHyxnDOCucr8RazUzw3VEQjyMucR7CeDzG+973Ply+
      fNkyBwfT6RTr6+u4cOECtra20DQNbty4gbquUZYltra28MlPfhJVVWF7e7sbu9tvWzGw9k7I
      cEzhGG6bFYgxgcnaHR11aoUqW4e489O23k2obFKIsuknOjAArTHg+QbAjh56ijgI+Yfk/PA5
      Gjt5nAkhj6o6ttAnY1aPCdbDZrnZOCIKD+5dHhgQKP0dW2SGEH9BrKNQECd2JceN7j7eGEmO
      YjLxmFI6V1EUHsG3trawsrKyMM4YaK/G4zGm0ynuu+8+vPe97/WWJCq4kBon3UlNQXJDFrZb
      TgBkBgzj7QkhbCk+7Z1StPBC2DBdipMH4C0XBrbigzK2+JS4yc25WTDoIxpZHOJw3WVIIsVi
      8rW9+E/1KtBR+mZcx3PZ2ONaQ9Zqo7xIwxjzl3cwxpFxG7Idw3Fi728WaC6MMayurmJ1dRVf
      +cpXoLXGBz/4QSilcPLkSTDGrD/AOQ7X1taglMLZs2fxjW98Ax/+8IextraGJ598EkIIPPLI
      I7jvvvvw9a9/Haurq1hbW1vomzF7o33TNF5XSgE7ODgw0+l08IHvxiJorXF4eOjLVmitUYac
      yBhbbyfLMPr2F8BVhdn9fxsHVeMnAwDMGPDDy+DFKlS+bsON8wJ1VffS5mKumYptOe5mK20T
      bzIhF6pLh0e8UgpZ1q9E58UqWDGEoSsNCfTzCQhZMi5dLkCf69dt4+V+csylksSNsXE54ThE
      kGgzKca+MnN4R5nk4sgaqseBsiz9fb0EoVi5UNAs4M7hz3A+sWEiXNvQZxH2RVBVFbgUvRs7
      Q7gt0aBCCEynU+zt7flB2wuja3oIytj0PiPHMEyAuQuXW6UA7uzM7QGmr/1LzPNNFI98HvO6
      ckrdYkwIsJzjDx2JMXBmIyXDy6CPmi9FR9JcdVDahKpG2yT3tvee0Rq1aQDVuDo8mRdLRgPZ
      WrEeYmB6Ihcp9xnnaJxSqF0tUKpFR3Acz+lRQMQJLJqhOefWEehMuLEBIDZzEnJTm0NrnzJo
      hM/WZQU5ETCRPgjcRj+AEALj8RgHBwdduHCWY15XDmlcsdi7/oaLfGQY5znqw+tAtoZGG7Bs
      ivLsx4HRCbtZ7j8yZ6QsOHXb2CoEAbe+meOeMeYz2MINopo7KX2gdXciU/K34Nzf4wtYsaV1
      FewIbDhyl82gzfL7lIeAlF2PDKCgPwHTNqjbrroGMQ7KUOtOKvTqGt0MUEgD0J3+FDj41FNP
      oSxLNE2DBx98EBsbG3jjjTdwzz339MzOgN07iuoMw9VpbiHEUazhs1prFEUBpRTm8zlWVlZ6
      794+RxjgQ4O9txTcG9U4Y1DlFWjGIYozaFSL0fwyTrz8Bexf/OtQ6/ej1QzZue+HMA3K/TeR
      Ty9AwfibHMNjkcAYm32Wy8zWFo2uA4oXduj3EBizXmnBBfKEvJ4Ksgvj1DnvLrngjKFW9rpW
      ynwL24pFgljcifWQQuZWxHHILbmEFDZn2vqGF+cTKso8KgD2biA8SYjZVFWFvb09fPrTn/ZO
      r29961t44YUXUNc1HnjgAVy+fNkryPfeey+eeeYZAMDdd9+N6XSKV155BcYY3HvvvRBC4LXX
      XkNd17jjjjt6iB32H94REItmwG28JRLox2kAzrzofpdC4LVv/I949clfspemATDFCcxOPgoz
      OQNj3GFtDN584f/BM1/8+6hmVz3Xikun2EcNcnfrY4rrE2LZGyibhfdTNqWJ8AAAIABJREFU
      iB8e7/GRTJ+F/3rfwfh+NPq+h0apXnxUynQXjy3uX7sAt1FeoJC5S4jXKF2sfkqEIGsbhUgv
      E4Fu5tQM2wesFWgymeCP//iPcenSJa8AT6dTXLhwAZxzrKys4L777sM777yD3d1dnD17FufO
      ncPq6iqef/55bGxsYGNjA9/85jdx7do1zGYz3HPPPb0TJ1zTcBxkEo3X4LaeACTvzZ/7DYAx
      yPt/KjCLatz1yL8HMEq9A1ixDrznx8CaGXjbwDAJtf8W7q8vY/Xen0Q+2fRugthEGNrciywL
      LCEM16/fwMrKFEVRuKC07jqhqq5tRTZmo0CpKpkNHAsve+DuGlGFpm17uQVD3LOuXS1+Ln1Y
      swGg6hZZkdkqejxNpAAWTrbwtKAYIt3ak0QpZdMOATSh/yHxPmPWEdaoBiMXnxQqrvT8UWHm
      BPEpRvDYY4/50IWyLHH33XejKAqsrKygbVtcunQJTdNgb28PZVliZWXFj2FnZ8ePqa5rnD59
      Gq+++iqefvpp3H///d4AMTS+PM/9RSjfEx0A6BRi3uwBjEOwLkRXaY3x6j042H4DXNXgwoa0
      MqOgnv01MDnC+OGfQzMXOMxOYvWOH4BhEjD9zQ25AP0e5rAaADe2tlA3NabTKQ4PD1EUhQ3F
      lRI3rm9hdXUFs9kck8kYu3t7Vq4dFyhk5mL3ne0ezN1drBBe7UNEEuobrVKYzWdomhYw+1hd
      XUVd2/uKDw4OMR6PcOb06d4cYhGM2gzXkz7vypugu21TBwolo5tvrH5C8VQU30T3KyijwcEX
      rCt+/QbEwtQz4VoopbC9vY2NjQ2cOnUKs9kMQgjM53NvVt7e3sYnPvEJfPWrX/Xvz+dzb0K9
      cOECzpw544MMv//7vx/z+RzPPfccPvaxjyUjVwnILxCOTd2OUIgQyHRXfODvIn/03wJ4hlxk
      mEiGVQnsXH0Bz/7Jf4hrr/85BOfYufZNbF9/GVoUMGIEKQRWr34Na6wFJme7q1HJ8oJFJKFN
      9NYGY3Dy5Ans7R+4OBJgOpng2rXr/nqlw8MZxuMR6rpG0zT+4jZ707vulXOEMWBYvCQa6Ech
      MsbQ1C2M1phMJsikxMHhIeq6wXRlCuGO59hyQu/Sv1jpJq5MVqow34JkfsE5dra2oVtbciWT
      Eof7B+6+BY5MZq7QFXdFt2yyyhDBHQWp5zjn2NnZwZNPPonDw0M88MADEELg4sWLePLJJ8G5
      vYLqiSeewObmJqbTKaSUeOWVV3DlyhU8/PDDuHLlCr7+9a9jZ2fHxwq9+OKLeOCBBxYsSbTf
      IRHneQ6lFCp3ZS/DbfADxFCWJQ4PD+0A3EaLl76Ayfwybtz1E3jj9cdx9p5PYrJyBn/1h/8R
      mBjjoz/+Sx1yvP0ViGobs/M/jAbWy1fNSxSjkb/sOUSeMDiLPqvbxjtdyrLCdDxG5ZLZ27bF
      qLDIPxqNfDRn1db9C+/cXVp1U1uLDxdeXIqB+p5XJYyx+g5VbMtdkBylEy7j/vQ3mRLpdNFa
      +0vIw/o+XqcwwHw2x4kTG3j77XdcjJU1gTZNAyElVqZT7B8cQHBhs/aMLfsCxnDm1KljlRwB
      govHEzpKHLocKsphucNwztRvHEJN74dWv/C7mJGEzGQ+n3u/0W0VgQD42IyQ2+lTD6Mqz2G0
      fifu+/DnAaPQ1jPc84G/By4L72gSQkCf+xgYB/JmDqOBVmtkeY66svVFufMdCGFjaeKNI1EB
      sIQgJPf3XRmtAM5QNpWtkmYMijz3dn172LiKYr6ePvMhxSmk9XOFDUd2KflWCeY2xDqsjhD+
      DDe8ahtIzr04Z4y9WbNwRE/cnDPuHY2dCCj8phtjAGbDOpTTtUZFgenKFNeuXcdkOoFW2l72
      x1gvdzkFqTnH9nyC+J4Ev/8BtyagMocxQcSEELeZMlwsg9t+AgBWIz88PITRGmp+HaJYA5OW
      IhljePOlP8Dr3/glPPyp/wHrp9+/MHF++XGsXnkcW3d8FuX6/VCz69i58hTO3PMpKEa2d9Er
      9RcvNt3Paz2ufKHqAjm/6F0ViBrhRtlURZtj3BiF3BXyovcI5nXprVic864orrHeWYIhM6gv
      AykE2sZWmG60Vb5HeR7I+LbwltcDXFt9u75DTgMvEhGi2dst+wkky2TrcG0BewKQQhp6qmn/
      wjCScI7ElKgw2nEV7hAvhsYUwvf8BACss2QymeBg+22MXvhV1Gc/AnbxU9Df/G3wK09h5b0/
      gXP3/zTGq2exv30J+zdexNl7PgU4WfuQjbDf5hhNzkBwgeuXH8dbz/8KTt/5EbRmCpnZYk/x
      fQThcSiM8FehGkSLZfq+hFDGpr9pkyiryl60nY4PsicAFpEfzgoU3OJOSOERxiOG7adsamil
      MM5HUIa7ZPfaJqo48SXUhwAbGk0iF4GNO4KvDOf7RL9+ZsytQ4hFtlhnicVPOtVS4RDvXLmC
      TEpsrK9j/+DAyuutAuMMWZ5DuzBmBoa8yDF2p1lKXAz3O96LGL4nBMAYQ1EUYCfP48Y9fxNy
      5Sw4gOtlhbevXcdXbnwJIzTY2n8CH8yuYHP2DE5f/Di4q/tz+cpTuHH5K/jwB/8ulFa448F/
      E3c/8retCVMraKVhtEbp5hxXMjbG+NgeUhrLpgIDw6SwlRsoMI0x5gpuGS//0xxCJwvnfFAH
      CF6CMfC6hHL1/sumRmGwQGRKd9Gbhcy6WHwDGGbLwFdNDWU0qrZBIbu6RVSwF7D+Fg5As6CU
      iDE+q84AqFp3Q6bp1wUasgSlZHwad+q7EElTqaSjooAxwI3tbXsStQp3XDiP3b09bN24AeFu
      n1xfXcPOzi7G50Z+3Y2xgZV0Yof51nHf8Xi+JwRAkGU5xmcfgGoV3trfwz99s8A19XH8p+2X
      8FD7Jv7hOyfwgjyJX/ihX0BWrPlBXzj9EN5TX0e19xayjXsd52t9BGSe5eAA5lUJkUl7YV2k
      ZHbmwe5O4FApo+fogrzUvbyhLkOQKqEe/k3hE7Rp/j2jAfQvvqY+jRsTiTktGJjrsshsTJUl
      lgbj3J4CStsKdHSnLyXdc8aC4pH2athxXoCBronN/bjjtYoh5PIp0S3FnVNtaa2x6VIfiSA5
      c/pRUeAOl0VG7Y0n456OxFg/XMUyD9ULPKR+SUSk526rGTQFmZR455U/wR//xf+G64e2atxv
      8Q/gl/NP4LqZ4LCp8ZtPfwMH5dwvpsinYMUKhMhRVDcwffp/hnzrzz3CKG2JQUiBtmlgDHqT
      XtwE5i0xITIbYz23DF3pwCHrTKj8xQRhjM2HZrDEppzVhvIAACQVad+KIxb/XVTNzm8ms07E
      1iW8tMqeMIT8gCUmOv2kJ8TWi1vhvcFDsEwsSj039HcIvXU1nSmT9otODQqnX0aUUvQjW2MG
      FK7f95wAYIBrl/4M+e4TEM6vW5k5jLkCDnfRmtH40revYnd/CwBQnHkE4sN/H2L9Lhgm0IoJ
      jBgFQV421KDIcqxMpmibBmVdD95aSBlQIccgyIREkWULmWVD8mUccsE5R9U2NsjMfRwrlTbR
      ZvFaJRoXdyfRvKnAA/MnZXaRP0KbLtSCRD5tFuV5e1OLzQEGs9fJxrm88VzpCtiwUltKBAqB
      zJ1HPRdCuAbLEP27Bd9TAmDMJkI8/MP/BR4Xn8an8We4C2/gBHZwEW9BOoLYrWZYEyWKfOQ5
      LNXmnMtVHL7vZ1Cf/lBvoTMpsX3pd/Htx38Roxxo6tpXNw5zZ+PNiU209oZ7MYgYMWEQooVH
      rq/M0FUAsmMU0pZezAvPgWMRomprn5SjtQbc90opVG3TRdNGa2vvIlu+9gR0ew/d8k590Vha
      pVA1DeZN5W+ISYmAqbUM50IwdFrG4wqfpznfDDHRu4QrKV3ge6oDAK58+nQdd2+eg7zaQkDh
      ZdwLCYUMDeYYw4gCH3nve3B15znUuyXuO/MxAHC3KHLkzS6gWxyKNR8HbwyQFScxWr0TBhxZ
      YWvFSHf5RJyInrLehFls9Hl8NBPUbQNbz8txWWFrlJZNVxaegp0FZz7cmRA6Fxlq1UBGeoDk
      wiXkC6/HkCggYVwMT+txPSUahRDWTQWz2WLKFnf3J2Asvyvjyrgzax4O1+coHWEIaF1DPYI+
      D9c8JJLjOuPovXAcQ4T2PScAwFoA/vpDj+Gfbe2iajVWsIcP4hkcYoIDto4ff/+DGMsMz2w/
      jkN9iPvPfhSMWWQQEBi99K/AVInqvT+DFi5rSrWYnv041i78oK09o1qITGJelhgVha/2NmTJ
      CH+mTH0xGNPdeGmMgTTCZndxgTb83GVeaa39yUIbXrC8p6fY6E7prxcKC1MB1jSqau1PlHAs
      Q0BBc4AlrlxmznEovA8gnntYOj1chzBm/2ZTKpeZL2OiCH/ezAkQPj9EPN8TR1gMxtgLnl95
      4jdxbv9Z/OLl09huNdbzAp978Pvwqfsfxt7+PhTbQ93OMS7WINkYRTZF3dSYzF6DMA1mq/fD
      OEtJ07b2RpbW5sw2jkNnXKJp7GXSWVAZLWUiIwgXMhZRADjZ2NbhIWWbrC1UxkQ7n4NgzEeO
      +s8xnI2VUrbDZG/KNrNXkVov71FAlfXoRCLn3mE5A+O2JOSQrqO19ta2TnG3ZRUzmS2EQqT0
      ip6iH4lBcQJ7kkFxhq35HAd1jZGUODWZgCNdjiVeV2NsmZ7vqSMsBsZsAvOpc+8HH0v8g/se
      RWsY7rj0mxDZazB4GIezGc6fvQNXd76N33nzV/Dw5EN44NQn7MVoxUlkey+jPNzCQcmxsbGO
      7a1tFHkBzpkrvLSLs+fP2hxcwa1SrG2oQ2o8AHqbDZCJziTvxrWlBqULtVDIZYaqsXf7jrMC
      4P2UyvgCv7DfFCeNOS99RnV+qHo1gwvrpvwGsIUTIhUiAtgwFapKkUr8///Ze/Mgy677vu9z
      zt3f2ut09+z7AAMMQAAESZAgQVCUKIqsSAotS9RmmZYqsiWrIqdiu5S4Elclf6TKdlIlV+zE
      lBSthkiJIinuFBeAJDYSALHOPtPdM73M9Pr2d7dz8sd99/Z9r1/PDBeXQXJ+VV3dfd/d3++c
      81u+v+8vjKNe34TtEvZWkVjFdAM/O3Ywqzxo4uTNrcGfYbBsP4756Isv8uT8HM3AxzVNTkzu
      4tfufyNjrtd3T/ljh/kb8DoZAJCM/NH99+H7J5lu1YjWziOKM6jCNFopXMdhZXUVzxthn7Gf
      CW8PhmEkDMP1C5SWnybc7RB7R3Bdh2KxkOBiYkWn28WyrT6n0DANgh5exrbtpOB+QCli1Q8p
      SGUrjt77v+dYS5nUMRtG0uPL6mVZB8Fa+QGWbgO2UXwMmymFEH11t6mCqVhldjokhfBaJ8mw
      MNd+FiAgxDGtvvNDsjqSCxkPRquEBgOJNBK8VdRr+p1KSj4lDAPiGNs0E+8i97zpfe/0rHkf
      K/9+hBBIw+A/ffMZnr4ylx3bDkNeWFzgerPJv3r03Xg5+EXfd6Z1H8lxdu3XgwmUlziOqV18
      ktL852gd+Vl09TCwHRyWH9kqamP668TuBEpYCd24EGTaoBPgWRTFWcQjFRX1SK8sa1ub0DCK
      8KNgmzK6lt0HsYjjmCAItrFCpPunotFEUZwVxg/KzeLqqaTVTXmOzsFjU9PI6gUKIMk1pJGw
      FFeU3/9GK1C6PT9YU0oWhMhYLOK0BiJ3nrRj5062fOy3kIaFMG1U6BNsXMUZ248YYOG4snGd
      f/3440QaBBoLRZAQywPwy294gB8/fCR7F2FjA8PxkD2W76B+BRWHWOV92M7ryATKixACUT1A
      Y/qt4E1t1QwPpLXTCI0QAmkWWOxeZWntCU6NP4IgmSX77GHVa7g9kOeRhpGA8qIIbfVXC+0U
      RhxcSVMTbljJXX729qOAmARvI43EOR5WPzw48w+uAFYvL3GjBhBKa0IdIw3ZVxCUhlYVCsNI
      kK5+GPbOzRYty00GYqrQpoTo9CdRwsQ99TOY6SpVv46+8BnU5L1Ye+7dWr3mn0FdfxXrvl9B
      mDYibOG+9kd0nWmsez9IfP3bVBe+QkO+D3PiCMbytwidKYTpcmT2o/xUyeCTjUkecOv8k6kG
      /2a5ygW/wN1ug9WNBSzrDqLVC8Rrl6hsvkQwehf++hLYZfzOZWxixH2/CSQD4L9+ImxApJRU
      J/fiHnpnQpHSe3Gr81/k2sWPww5U6Mudec61XiVWPs6Q2D0kdrpnOf16Lcha6nRyPJNAn9mQ
      KYTWN2THTBUjP3NFvSRW2jtYoQmjcCjV4aAMc7pvFl7UWmf3qQc/672/NLeQ0soIIbL+xMC2
      MHFeojjeYvnWMWZzHrMx239f/iaevwTNpey5hRBY0SaFeBWdknNJk7i8F0ozyUD3Jml5+xCF
      cXTQxF58Eq6/jLALbFjjLIaJr7Mem7zcNtmMTfZZHf7FTIO3e0mi1F5/hcrmc0TF3ShvAjta
      w/DXUBMP4E+8ES1yUa3XmwmUSrPZpNtNKMQNw2D2hf+L0K9x9E3/EwxpFKEIiVSAJQuknDwp
      DAC2TASvx8YcxhGSmLB+Ebu0j1h6SU2uBttJGJD9KMyW8pQyfJgJNIwYK5u1SXD7fVlorRFC
      9plcw5Q6H2cfZiPvRI+e/g57TbkjFWX5iQQBu2VSmr1O8kbavDu9du/znYZax+/S7XQwLYuC
      kYR02/GW6WMaEkt30YZHLIyMwt4SCqkjAmxipXBdN1nd45D4hQ8T2pN49/5cj/ZGg19DSwdh
      uSyuLvKvHn+crgJbaCSarpY4QvHmQp2H73oHdx08RbRxBdVcwd5zCoRAB10QEr+7Qdi4QnH6
      foJeg+fXnQmUipSSTuAnjMxCcODef9ozSfphylnEQFjYsmdO9Mz/te4VYhUxUzqSKXDcC9lF
      cYwRrlO+8kWaMw9hTj5IRIwhJN1Oh2KhmGBweuFFx7IJoqgPZRmrnTHrqgdOG6wzyMy2IU7a
      tsjSDmjGW/EVhEiy2GmJYzIr9H+eDsoojqBXF5CKkQ66gXCkEFtNBk3bomhEyNo5wvJRMAq4
      uoOsneeC2MPsylUOiHWW7IPcO16iGizBxL2oIMCpnyGo3omOI8L6CoZbhjjJ12Tm0vnPQ+Ug
      xq4TRBvzHLz0GL9WdfhPm1P87uQCB+yIf3p1L3d7daaKLsf3n0z8m5G9WKP7WHvq/0ALGzl2
      DLMwiRVsMrL+ItHknThOQqf4uh0AjuNgmkYvDR9gxHWEkJjueLZPqvzr7QVcq0TR3uqvE6uQ
      j736GO2ow798x/+ehTPTL9K1bDAn2Zh6E87IMWKVgsU0tu3Q7XZxPY9u0EX3ZmHPdrIBEPTo
      BRP68dTUibMi/0j1HG62Cv/zdQcpb0/myCvVV0CSPl+6T/5589sGZTDkaBoGUSyzEs7EgUlg
      D2HaJ2CH8yWrqN9r1bqVODRksloYQiDr5yktPEHzgIeonsTcOI179Qn+/OoER+0m759s82fn
      rrJRDPjgeIdWYRdGc5HC0lNQ2kN3ZYXywudoT70Nee8/zNgyhBDIlVeIsDB2nUAWRgkm7+PB
      vbvQYYX5q8+w3rnOHQXFz4zF7Pc6WIZJ3N5ErV+AyTtQ3h6E4VDcfJXYn0btfSdrwqMkHOIo
      THiYXq8mECSFIitrq0m97fk/ByFRx3+5b5+Gv8a/+fr/xpGxI/zKfb9FFKUwWM187Tyxitlb
      Ppp90SkSMu9cppj6VLTWFOykHtiyk6hSavakx9UbdUwjcXoNw0BLsmRXagbkYQNa66xuN5V8
      9Rjc2LZPJQ2ryiGRpLyjnO4rRK+eQfTDrF3boRv4vUIdMjxSXjpBt8eMvWWu5a8RhiGOqdH1
      WagcBOnw8uJlPvfc53m1W8YVMQftNmf9Eq6IOVWG/+7HfxFTh+jGVeLiAeL6NeTsF9B73oY9
      c5K4tpg4yQcfRlhez1dRxN11kBaGVUIEm2hp4174BEZ3nWuTbwevQnnsAOrKk5RXnmJz5icx
      dh0nCpt0m2uYVgGvuicpQIpCIp1AyV+3KwAkCZuRSpV6o4E/dicguV6v83cXz7FQq1FxXR7Y
      Pc3bD7yT6fIM6KSdT4q53189TjcMsqRQfibLQnQqTiDAOeUze4mijEvGMoljlTWJ1lojpMRx
      Exy9UgohRZY30JBRqORnbFMafYzXsDOOBoYjTgdDiHmFH9wnyxX0YA6p6SeEyMy43m0MTxIZ
      Jmjd5+9su18VIWMfpSKE4fLc1XkKhoFEUzI0M7bkcgCW0BAHzG+scbhaxEQRaYU9vh8x8Rtb
      z7JxnpHN52n5dxP5TeLZr2McfSfBSx+mI6tU7/hpCuf+Mx1vimDkBMKvU5q+EynAPv0XtGOb
      jZE3YY4donPlCazVFzAO/Ld4848TGR6xV4LOCoVTv5qEcXd8+68TcWwHx/YJxx/g28tL/D9f
      /wKtcItZ+pkr8/zYkWM8evh+gijsq9pK5MZsZxnZVd8RW/gRx3H6UudAlmDSOgG9ZbXKKQwj
      3nI689e0zSQZF8cpP+fNAWXDTJ5hA6Pv3gYc56RQPiTsRYZi1WtQnfclhlw+HQCD18iHZ9k8
      R/HKl2kcEDB+D4dZ5b3Tdf7HKyb3FwN+eaLNyhXJAavDr0x2WQhXMdbn8Ra/jjr+C4SGiRF1
      wCqghYEav5P1IMCyRxD1qxSbZ/HFu+iWTyDccYRdolE4iCrOIMZPoq8+jd6YR47tQ+oI05tE
      7HsTSJPQrND0A4z6IkXlAxKUg9BRj/Xbf/0PACEE5VKZ6+vr/MG3nulTfkiiFV+6eJ5T09O8
      YXp3dkzfORAIQVYZlo92SClxLWdbEXnfzG2ZiU/g5nvW6gxDkx9gKQfpoB0PibLbhkWYTLm3
      5MgO3pMQWxVlwwZH+lmehzSJypiAzlq0bn9PIqsiy4d8uck9MnYXLXccClMAXBS7+J8XaswF
      NiuRyZmuzVnf5mJgcyEs8guHppiolugUZ/DNUdiYx734VwQzD6P3PYTRWqCw8Tz+1B2oyh66
      Jz4IkaLsTiLGj6OUgaaCFCXC9UWqq9+k1d1ATN+Bf8+vQ+Sjn/r3RO4U3ol34y49Qbv+GuKN
      v4UMOoStVQrV3TQ67WTyuvHTvT5Ea82r15eppWFRIu4RF5kUSWscpTVPz89v634OoFSPhkQn
      vQQMuZ1mW0qJazt9P6lEcZSEQw1Jq93eRsOR3l9ehs3KqdkUxRFBFBL26oFTvyAfvrzRe8hf
      I43jp8wUkJh0URzhxwl+X/WU2rVsXMvZqgYztszB9DnTarD84Bq8dpwrnkk2+NC+hlDJBPLw
      3t1Mm10MobFFzITsIFF4IuawpzhQLYMKUO3rSDTSKdM1xontkaRizizTMSdQ0mWj0WE9LhEu
      n2Vk7RuI1VcQ3U3Km89jXPsm7tRh1qffC/seIQparD7z+1z71h+gpYHfqdNafonGyCnMPW9P
      Wtxeew73/GMEzRVMkUx8PzADIFV+gAodfrP7VR5Rr2Xb6r22o5kDuHkWc/bT2MLHsxxsw+rr
      73UjSU0iPwwIejZ7rBXClLQ67cREkokTeCPzJT1XUhUW0Am6hD0bPC9pD99h4c3BBFgffkiI
      LKeRkn0plXae33LC0x+Vi1QJIXp9iGXWsG+wiDwdCIP/9303tYsUFh5H12fRWnOHuclvT7c5
      4MS8sdDkn0y12GP5PDri86HxTWR7CbFxjsLCV7GiTaTlQmkSYReS+zQsnMoYcdClUi4iw1WM
      qaM0D7wfpu9DmwVqXYfA3EU3CAmMErHhAAKhBdJwMR/6Hcwj9zNVewGvNE1h5CD+5iyh9GgX
      dyMsd2tlvKk2vA5ECMHe6laIs4HHH7hv5yrjWWx7T6Xat7/RWcGuXaA9eR+mXb1hg4W8pPsE
      A5GhVKRp0O12sWybMAhvyASRVoKZvRLEOAqH2tp9NCkDg0BpRRCGWKaZOaNpb13Zc6wjFSfg
      NNVTbhKTJ2/qpWZRGEd9hS9J29QUqyO3rUSZH9EbHClMIlvVxk7ScsfAm0ryLGN30naq/KPD
      Y5y/vsgzusb7H9jNXeMjtMN1RGkfypui5Y4RmKNQW6TaOEvbqyLGDyM6a1i1i4jSMQxVZOTK
      x2ntfgfVvW9Baog2Fhhxu3Sja0S1RcavfIzNKwZ1u4R3+H24lckkMlc6xLVKjfLoYTpLz1Be
      fY7u1LsZOfmLSeSvR4/4AzEApJScnJ7hzsldnF65ToTJc/p49nnRsvmxI8eSzicqweIz/RD1
      iTdgmYU+R3OnGHsq6ZdrCI2M6wirQpgHU+okT9BsNBgbG7shd2acYvVlPyfPoAyb/bPBqnu8
      QXo7zgh6lC8qyVrrXl7CtbZzIaX3Plj3LEQ/o0K6LUVrDmOk7nt3URMacwhnBC1tiLqI1hJ7
      pvayx5mCjU2YmkH7NWgtQXEPIupAawnDm4bRfay3H8UqjiDjCDF9D43KQcxClchvULcncdxx
      otOfQm5cQtzzKzRn3g06RtgFAnscFdTwghqrpz9BVTYxT3wQpzhOceY+TK+CKO5jtb5GsbgL
      0VxC21U0MqHD3PFbeR2JEIKC5/GPH3obd0zu2tqOZo/V4kP33smE5xKEId3QpxN06YYhwvAA
      kbXk2Ql/Pyhaa5obZzBP/ynd9VeRsp//xzQMCoVCwqGZO2YQ+pxSsmudxPx3ut5WzfDWubLf
      vZlZyu09AtJnkD36E8ey+vBFeTyPHwRcXVik2WgShCHrm5uEUUS36xOGYR9eJ81tDKt3Hnxv
      uj5LYelpdHMBAFm/THH5WUR3A7F5nsLy09BdR2ycpbD8NLpzDVG/SHH5Gcywhmm72K05Cpc+
      TrxxhWj+adzzH4XuJtIuM/6GD1GePIHQMYIIDAPbkZSvfxXbAuOBD1G8/zcwT/0DiuOHiLWJ
      NCzqZz6G//KfErTWsVa+RdErIdcvUTjzp0TzzyR0OeoHIAyaihCCw1PT/OufeC+vLi+xUNuk
      Qpd7n/nndJfX0Pv+GVHqxNHLzCrNN65c4u8unOd6s8FEocg7Dh2uBzP8AAAgAElEQVTmJ44d
      x6A/nj4IM7CLU6wW9uC6E0lGtWfGpPazbds0Wy0KBS8LpW5zfnvwA6UVwjCxTJMwijIzJd/J
      sRv6WYliKimLXFI7zI7o1CTKsx0XlDdVtNaUSkU2N2t0fb/H1lwjikLCMGJmZhppbk/KDc76
      6TbohXDH7qLpjCIKu5OVY+wu6s4osrALnBGaxd0IbwrsKs3yPmRxL7G7i6Y7SawdxFP/jjCW
      qLE7Mcq7iFtLIBNSXtW8Tty4hrX7FMbJn07eCYJwNcbu0cvgN1Ev/AnarlK9831w6B3YXpX2
      YoVIx3iGjY58tAyQu++kXXQRpUMEKQL29ZwJHiZaa7rdLu12G6F8wuf/X8LJk8g9b8/MDNu0
      kNLgIy+/yGfOnt5WwfTo4SP82v0PInJLef5LzieR0v8Ht0FSLxDFEZ7jMsyE0TpxSBGwdn2V
      kZERpGEQRxGO7dBoNSkWCzSbLUqlIu12m4JXyGoL3F57z0ETKa3DzTPTpTK4b/p33Iv7b9Zq
      VEolOr0GFL7vE0URI9Vq32DJh1p3yjjH7RWcjZfQ029GR13k2suombcS1hZQ6+ewD70b0ZxD
      tK/B9EPo9dcQYRM9eS9i+RlCYwRj7uvEI0eQQoNhYx55N6KXYQ/PfwFj5SX0G38LHbTRreuY
      40cQKy9RXPgS7V1vISgdhtN/ha9NunSJDY+ph36779npNQWM4wSAonSvSMra3r72dS9CiCwp
      pbVH4ZF/SafboRsEpM1VZP0C8upXeW2uiB7yiE9cvsSDe/dz1+RkNrNq3T/B3gxzA0mG1fd9
      YiseCr8WQiQF8HFMp9vFaDSI4pjxsbGkyXMUUa83KBWLbG5s4jhOQhqsodFoMDE5gWWa24iw
      drrH1MnNkmGQMSwjEgBepVLGsWykmQyeUrGYKHMuOjWsXDH9P6UmMU0TM9rAW3uFzsgRpF/D
      W32JzuQboDmHU3uNTvhWzI0z2PU5urvuw1h7BTNs0C3vpbDybcT43egHfzPJsL/w4YTbScXU
      zn4SWdqNt+sUgVnGNiyi2ceptM7S0D+DOXGK9Wad8evPEAuL+r53gDSIF55E+puoJ/9P9N2/
      iCzvYvXlj0L7OuW7fjEB3Gnd69GcRPp+4AYAJF+E523Vf6a031prOp0O3UaAjLoYJPuMmSG/
      ONHkyYbN860isda8vLzEnRMTfTF0o5cUG4wYDTVvekrmuS6tVgvPK2yj4tM6weVHccyBA/sJ
      /KS6zDSTFkZhHDFaHaHRaFIul5Oa2jim3W5TLJUSFrkgSIBnvS8tP7OrHtIzhS0P5hSEEHQ6
      XWq1OpVKmXanQ6VcRvbML9MwabXagMayLFrtNsVCIYtsDTMR81VoYfEg+tjPQXEGXYppeZPg
      jKJn3kKregzLraL2Pko3bIJZRB36Kfw4QLoTtI//PMIZQbQWMNZeoXv4vQi7gmkYeI1zhLGP
      OXEUY+kbRGOHYPJu6tLCKM+gogDVXGG9eJK4uBv77GN0jAJTb/4d4ivfRM59hVj3kn3Kx+hB
      NezcimkIiTWkgfkPjGQVYVISRxGyx8NTKBRg5n7+esnnUvc8AJOW4p0ln0aseb6VmHthHCcx
      cLFFKpX5DnHCuGZIAwnZ/2mGN28DB0GA5xWSOuAdxLashKnaSjj8IxUjJIyOjQJQHiknvoLQ
      2I5NsVDoKbci6BWihyLJYkuxRTGuVNJpXsQCp+c7JDgoMyt9zCDPUYRj2ywtL1MulQmjkNHq
      CM1WCyHIuq1v1upMTiSI27wPkf6fj6gZwTrC30AXphCbF9BWCYTAqF9AFqZAx8jN86jKQYh9
      jM2LxKMniP06ZmMBZY8gO6tY9cvEu99G0FjCX34GedeHcE0XHXV6NcUSwy1jVsaJpSCsLTMS
      XKTl3YVRnqax6wFMOzHh5MwbiMePI5wSwdKreOP3YB47gOmW8V/9JGZnCXnPL2fZ8R/YAVBr
      1JPukGGUFXGbhonnupQKRfZP7kOfvgDAhY7NP79a5Vqw5WAenZjIZvywl5k1hcwSS5CyDJMx
      SMdK9XWhCcMwYblO7W65ZYpAv/lkmRZW77M08TUoWmmQW7OuaeRi/3FMEIdADEonvQHSxFWP
      IMu17KxBiBAgSBird+2apNvt4tgJ71ChUEiSeFJQKhWTnltA1/cpF/v76O60+gGY17+FU5+l
      6YxSWHiCyBkl8iYoXPky/tidxFNvonD1K3Rm3grl/RQWHqdteRDHFBefoOFNoqSBX9oLVhmz
      9iTOxlnau99MeOmLmFED863/A1EUoS5+mUL9BRp2lcgqshHFBMKicOUZxpafpXP4Z9GtFezF
      JwmmHkQWKjgXP05sFNFTv5V8P1EXGXfRKsYwEmj7D+wAGK2OoJSi3mxQ8HLhzp75cs/uPZyc
      mubVa8vECC51t0ymw2Nj3DezxThsmRYq0kRK4ZgWMYKoew2hI8zCnqHJoVTphzWTS7eldvUg
      vUeKyhwW1YmVQkfhNtSqYRgQb2eogOQ0lmllRTZhrwm3FGDZSVFMoVhIQqVOz8Rz3SxPMVYo
      ADAzNTU02pPa/oOh5HDmYeJd9yMKM3QP/zSYDhgereN/H6wKWEVaJz6ItkdBWrROfBDljKO0
      ouGMQXEXcv41rOZVAh3B/nfh734Iyx0h6tnouruOtfQU0dRdNCaPIcoz6PoyARIlJdoq48sK
      wi4iwhZW7Rzh6HG0miHY/QiYLkJrIt/HOvF+gsgnUgZIRfyDkgfYSaSUjFSq2JaNbVlZKl8I
      wUi5zD97+zt524GDFHtETQXL4oERze+WXsBffjbh3cx/4elMajs4lz9O5fIncK3E9nZMO5v9
      h8XDB6NG6efDklu2afX6dG23s2Ot+hjmss+gH8Kck9R0i3vktWT8nlutnPK9wzI4BZpYJQVH
      fhT0kdkOhT0M/h8H6KAOWqHDJoTtZHtnHR020SpGNxfQUQutAlR9Dh13ESpEtOYh9lG7H8bf
      /+NoYRI1r+GvniGOI8T4ncTjdyG667gbZzB0QHjlq4SnH6NYncEp7MITYM2cJB7dS7xxGjF6
      iM0D78cXCemvufYson4WyzTwupcx2peRbpkgDHEsC8uwfnBXgJuJlJKp0VF+95F3sbCxQb3b
      oeQ4ON1l1KXraGlmXPGJLyATqLKKCWNBNHk/HRXgChPP3t7XLHVCtU4KalKWtYygaojpkLef
      TWkQ6GEzusaU/V/LMGUcFD9X/5ywRW8hPp0B5on0/lOFV1qhYoU0ZfbulFJ0w4CCs9WIYlDM
      lW/hbl6gdaxC4cqXiewK8fGfozD/RYKxO4hn3krh6uN0ZwJ0eT+Fxa/TtktooLj4DVreJKJ9
      DW/pKdp3/grG6ouUaudoTd6Nufw0HgHh9Ido3/FL4I6D8S3oJfrMsIkKW2gVYbYWiI0EqVtc
      /CrKKqHGjxI44+CMYukYa/lZiH3k+N2Ui0WkjghjfvDyAN+paK1pt9sJFaJlEUURYdglihSd
      ro9pGARRmMANpIFhmAhBZnsPKn36d7vdxvM8pJS0/E52vTyt4OB95FsDpUU0CYhNZ0UpafeY
      vNmUzthZkb/SWad52F4kk/Yi0FpnK82w++n2mCq01hmMG8jMHT8M+pCx26S7Ap0VxOgJqF8G
      w0OU9qI2ziC8cXDG0JvnEaU9YLjo2gVE5RAg0LVLiJHDEHWgPgdjJ4k660StFdzJk4SNRVTQ
      wh4/DsoHsfUcsdaYEoSQRHECWxFCgDQJVk6DYWGPHUE9+2+JvSnkyQ9CaxGtAozqEVh/DW/+
      i3QO/tQP1wowmCCC/ryBECIbCInCNIiihJunGypUzylKIy1CJGwQURzjOf10iJpkVsx3eYHt
      YLa8bIuiSAPXkgS9/gFpl8edcw/bV4Fhg0Cjh/INDR7n9hgy0th4uj19f/kmE9vuRGsIWsig
      gdYKEbYhTqrhRHcNpAVWFdlaQttltC2QjasobxKEgWwtoIq7ibp11OYCZukwqrMJjUXU2HHM
      uIlQTWgvYc9+mmD3w0TCwb3+HNH0QwRhG3PlBdSeR1AqguVnkPsfRVb2oSMftCbAREkbd+0l
      oo3LGO1Vwn0hpl0krBwEp/qD7QMMyjC8T7p8D1KICJGETLXWaBWiNl9Fhpvb9oEk4dVZ+ibr
      X/4XqKCWsaElM/N2B3lYV8VU6dNa3nyuwTYtXNvBs91M6QapA9OwXZrAMYRMWqQOud9hvkL+
      /tKfIAp7Be5mdo1BKpZhx6Xv1Fx/GW/5GQgauNefw1l9MWnqce1ZrM1zSOXjrbyA0ZhHBpsU
      1l5GtpaRrSUKqy8iu6vI+iyVzVdQ3XXMzbNUNl4kDhqYqy/irr0MQqI0aGFA0ES2lpOscHsF
      p7VA7NegfY1S8zLC3yQ8/0nM039G3K1RxMfVPs7CExTrF3DDNSpzn4LGPNrfhNbiD78JlMbq
      HWc7oa3Wmnq9Trd+lbHzj9He9QBq7zv7nOlUERqnP4Z64cO4P/UfcUcP4Ps+jWaTQsHrYfzB
      lGZfldhOq0FesQbrhtPP/V7l2zATxO+RUnmOmzmxOndu0zC2lYYOmlMA7WCrxsLudYtP980f
      l490pe8kjmMM1YKgjiztRbevgTQR3iS6eRWsEsKuoJpXEd4EQtqo1gKikBBgqeYCorQHFflE
      jWWskQOooEncWccePQT+JjruIou7++4/cfABHRP5DUynglYxweLTFMINmrgYnVXM4iixVUVW
      DmAIBfXLlJefpV2YIpx6EPfqlwknH/jhWgGGSTrrDpuVszBoYZz1yQfwK4e2zJMBNKR75Cex
      3vdhrMqeDPXpOg6WaeFa9ra+wjdzWvMDY+ggIck/tP1OouC58xk90Fyq/AKBJGl2YezwrJD4
      EDtdO99adTD5New+lVIoo4RQEVz+NDgj4E6glp+B9TNgFdFXvoxoXgVhomc/A911iH3E5U8B
      ELXXCc9/CgybqLlMNPslhF0mWD1H9/JXUBiIc4+hlp9FNZcwX/4w/tKLRBsXkK/8IQQNxPqr
      WOcfw5MKp36Jwp4HcQ49SnnjNSzdwV16ArH2ClHpEA0FnYkHEaaHUBHKdH64fIBhkiI3d/rM
      MAw6XUk49iBxHNPa2CAMAoJgS+miKOmPZVkWVmOJVquF4zgcOHAg6zaTssOl570Rhmgn5zXN
      3CbJN9VjbUs4hmQsMyRqOnBTfyGhZt+y+dM2R8POn/UUI/F10v9Nw+w1yzO2QUEGV7K+nEf7
      Gk7tAl31DjA9jMYcRlAnUG/DrF0Cp0o8eS9WfZZImujSXuz6HH5pL8qsUGrP0+4cAx1Tblyk
      0boDo7VIsXGBZusOXL+GDhtECHSvKQoqRioFSiFUgBEHhOOnqHWb6JXT2LsfZMXbj9QupuGC
      4ULs46AINi/B9CliFYJ4nfMC/ZeWFPZw/vz5pLOg42S1A5ZlYdt2H0d+qthra2usrKywd+/e
      BHrBlnJplYQX09pf0zD7am/TffN/p+f1w4BIxTimnUAZAMey6AZBwo1kJrZ6GIaZH5ESV+XN
      lz6HOBfCHEzM6WSH7Pk6gZ/kPAZJgnP3mp4/DEMMw8CUCsIm2CMJZVjcARWBXU62I9Gmhwgb
      YDggbQg2wSqjEajOOsIdScjFuhvgjiXHBw1kYQIddcCwCRvLqOsvYe17GKl94u5mEtFBEft1
      pOEgXvowoeFh3PVL2K/+EZFZRNz9awTNFSxvBLnwVZyNM3T2PEzx6ldoz7wN4/d+7/f+151m
      yB92SWZPQaVcplQqUSgU8DwPx3EyBua8ZAA4z6NarbK8vMzy8jK+n3RvFNJIClikQEoDIWV2
      jcHr5p3MWCniXj/iJKmlcMykjVIyCLac3byJYhhGwjxnyG0z9OD/2f4Dg7kvsdcDycVKDW1s
      kZlLud5pcvMMxuLX0SPHEIYNi08gNs7CyDHE7OcQnRUo7UVe+ptkUNoljMufQtsVVNhFX/o0
      lPeiWtfR808gRo8SNRYwz32EwB5FeuMYUZvw+suMbb6E701iLz+Ju3GaaPwk/upZyhf/mq5Z
      QRz6CYyp+xA6pmOUYeIUurlI+dJf0THKGJUZVNhGT95DLG0YPfbDbwLdipimSRRF2zKhqeRn
      05SX3zRN9u/fDyTQ5dWVFbq+T6lcZmJiIllF0gKTHtR6sGIsG2BxjBYGlrQS1uVeZ0nbSjq3
      55U03+1Fa52ZRYNm1aC9nt8n3xI1v69pJCZX2pI1jTQNQkBS1KoQAhG2MLobKJ1wHUm/jgzq
      xFoh/c00Robh1yBqo3WE2d1AhS2EqbGDDcLYR4R17O4ykQ5BWiirjDBswitPUlh7ju7kGxP+
      0uYc0dSbCLubRH4HwxvDHzlKLB2k1himSfjihxF2GeueXyNurdCuHEMUp6A0jm6vIlSEDBuo
      1Zd+tE0g2FLudrudsVHfyH7PR29M0+xTrCiOaNQbXF+5jkAwPjFBsVTCMGRmBimliHK9dgfP
      nfCKRlkFWtjjMpJSEkYRQRxiicRES5UxDfEOi3LlFT3sMTQrpQjDcNs9pDN7pLa63WSkX1Lg
      WCZBFBPHCsvQSMNMykWjNtpwAQOhOiBNEDZETYTpJmaPCkAYEAegQrRZBCESWhXZs0BUgJYO
      oBFa0b74BbRdoSBj1MTdyPXT+EEXa+9bCa+/TGX56zT2/STe9Cni5/9vtFlA3PH36Z75GNqu
      4B17X/Je0CgVIcMaxdN/QmfXA8jmVZTh3l4BUqVJcwJBEAzdb3C2TBUqVULRi88XyyUOlUto
      pVhfW2dtdRXDNJmcmKBSqWTJuMz8ibdIe5VOmu1ZpknU6xAZ9hJkib+SYITCeKtJXuqjBEHQ
      lzvIPxuQdXPxF54FFMX9byVWA1BnrfDDAFs6ffypACKoYZ7/K9j1AHL8LsRrf4x2RlH73415
      7i+Jq0dg8l6scx8h2P0wwi5hzX6W8MjPJGHRsIWYeSvy9B+jrRL6+C8QzX8NVIR58MeIGosI
      00U6JsGVp5DV/Vi1c6iZt6Em70RIk0C4jK59gw2rhCzsolPci/TGkndTOQiGg2XYFE79EnG3
      RnztecTYCeKl5zBqF+HkB2kd/XvgTaJ3P4y+/vztAZBKPly6Y0vNnJmRzrpphEjrLXiCaSYz
      9MzMDDMzM3Q6HdbX11lcXKRUKjE1NZWtHgqNKZNeZn6Ytj4ykTKxsUtuIUl8SYlND3+kdDbz
      p/d0/vx5brSSCyGYnJzEWH4GiUbteSOG6WarQqrstmFlq0Zqrkkpk6J0v57M2ICSVhL3FwIl
      LbS0EEKipAHSREsTJYwk67txDiNsEU49SFw+gLYKoBRmYw7igDho4lz4ayJvEn3ofVRXnqKr
      muh7fyMZFC//Iao4g7n7bdTDBuboEaQ3ihw9mHAaKYV95L1E3Rry1T8h8KYQpSmqC19m03CS
      0GvUSnBEQiLqs+jiDO7y07dNoLyktca3IiMjI9kx3W6314o1opv2NLDsPvMklUajwbVr1wCo
      VKuUKxVMM3FmESKBFSASFohcKWRqHgkhiKMIIWUfn//ly5c5dOhQ37UGVyytNZ31ObRWFMYP
      Jd3po5C4voCyK2AWtgZ51ETEPsrZoqPP6g82ziCai+iZh8BwEN1VtOGAVemLQKUTio5aoHrN
      vLUCZwStQYVJNZo0Xfy5xxHuGM70vYTrF1Aqwu0sw4F3EZ/7ONqbxNr/9t5zKBrf/kO0XaF0
      xwcQrSsYG2cJx05hLnyN0NuFnHkT1C5D9TDS2uo0ZF/8G4zmVbpv+G1U48qPdhRoUNLGzzsl
      zWBr9vc8rzfbm9i2jeM4SV2CTkKhwNDcgOM4jI2NUalU8H2f69eusba2jmVbWIaRIFSVSgq4
      c2ZS0jEFtFJZtZdgi6pwc3OTsbGx7F4HE1rp81neCKubHa5fv06lUiFsrVA686fEKkSMHs3u
      1Zr9DPa1Z4gm7gExwBu09CTOxhn8kRNIaeC89kfQXkaXdiNnP4NyxyBqI+c/jy5Mg+GgO9ex
      Zj+LufEa0dhJECZSglG7kJguu+7GKE2DENjlXdBcorTxCsHEG5ATJ1GGgzj7l/ixxqrMEFz9
      BloYuNP3ItZexlt5gXj8JMy8CQyJtIqI0h5E6wq0FgmsalIdV5omGj2K0Bpr/ou3TaC8SCkp
      Fos0Go0ds6npfqmkgyAVz/OSruu9lqGpAqetTVNckmmaTExMMDExQRRHXFu+Rm1jC4t0o+ST
      ECJrlp1KuiJpnbCeDSMDM82kY+SePXtot9tcvHiRQwf309zzLnR5N2buvOHEKSJ/b+agCiFg
      9UWM9jLR7nfQnnkYYVdBCoI970DZVWTQwGlcoTu6jpAWbn2O7q4mqnaJ0tUv06weSZChPWSn
      bi1RnP8C7Yk3EI6/gfj6i+jxuxF2GcOusDr1CGLuq4jaHOx+CDvqQtxFayg/+Dvo9dewXvx9
      wqMfoDVxD8Iqo5vzlM59hPbMQ8i9j2AuP4sR1lHVI/hRDFEb69InCKffghm2bptAwyQfEUol
      vwJYlkWpVLpptCg9T953SCUPjLvReXaStE3p4OodhmFGndgXPtU6G6zpwNnc3GRpaYmjR49m
      gzg976AIIRCX/xarMYd/4pfQVrXvGlpr0DEi2ExgERoINsAZT36vvgKT94Fd2XqXOkK0rqKc
      cYKV04wsfZX1mXdhjx7Ae+1PaBT2gulh1mdRJ38ZaXmEG5dh7TTGwXdjBatYC18jPPR+lI7B
      riJRhLNfgtHjWON3IIIaev01jMZVwv0/jgybWLOfITz4k+CO314BhskwhcxvS2oKwh0hFqnk
      mZQH4QX5nEAa0bkZfigvqZOaz13kW8f2MTjn7j8MExJd0zSpVqtYlsWFCxc4evQolmVl95I6
      x30D6ND7CLUCDND9bZ2S6xrE1igiChG1s4jKITQC7DHEnkcQaMTSk2i7jBq7O4nzb14FeQ1z
      4i7WDQ9n/BhCGnT3Pop0x7Gq+wCNJHH4o+ZVSq3LNDobGJX9+Ec+gAg2KF74GJ2pB9DTDyHq
      V9Gbc4iJO9F2FSFNrM41ou4KorSX8K4PgV/DPPPnt32AYZLG2FMl2Elu9N6EEHQ6naGgssH/
      U+VNY/PpwMmiS73cQRoyTT8PgmDL0cwlq/LXGHbdfHTHspI64fn5edrtNtVqdQuu3VnBnPsc
      ynQTxxWB0lvnlFLC+svQuIL2ppIsuBAY/jWKlz5BZJfRPTRncm2NdenjEHXQY3clE8PFTyY0
      itP3Q9Qm3riIOXKQCAPp11BmkWD2KygVYxbGiKIAv3ocd/wI/qUvYs5/iXjkKFokLHzCGyeM
      ArQ3Trgxi4p8GL+TqHqY0uW/hc4KqrwP++LHMMLWDz8a9LsV2+7v7zUot4L4TOEUeaUbPD5P
      dz5os+dl2Pb8rJ83XdIVZ3C/vKR+CUC5XObEiRNYlsXFixe3/I+ojdVcAH9z6HsQQmBefx57
      5XmkDrPjtDtJc9+70aMn+h1yJOGd/wB16P0J2lUpOPUPESc+gDQs3I3XqFx/KklcLT5NeeUZ
      VHeT8uarsHEGFTSozn8Gr7OEEAbYZUKziLRLMPVGSmsvY658G3t0H86+hyivPYddO0fCrWrS
      nXqAaOJUUsMch3Rn3nLbB9hJ4jim0WgMtadTGR0dvaH9np7jRg51qrSDHSJvJPnBk0alhuUv
      Botbhg2gfEYb4OLFi+zfvx/btlEqJgraICyGtQcXQqC7a6DCjB49HwbNXwNACo3x0n9AFaZQ
      Rz6QhH3XXsGb/zydg+9DORPooI49doSwtYYMNhGVgwSbcxjeGNLy8C9/GTl2DGv0cDa5iAsf
      w2pcwd/zDmI0pbkv0J55K2FhL9KpYERNihc+SnvPI/hj92IZiR8U/SD0CPuvJbcaEbqRGIaB
      22OOg+14+nyl2ndi/6dKneJxUiUbNLeG+QCD50lNr3S1mpycZHZ2luPHjyOEBOnsuAIqpZDO
      VuiVsIb2N6B0AJmjisyOF4K4cgDtjG0hUd0xgsrhpDzRG0dYDtarf4QeP4WevAe9/hp29TBa
      WMSrr2JOnsSs7k+ee+Fr0F1DVY+grSKqMIV0KrRjH6pHsVSIOftJwl0P0N31xgSKbRhQv4S5
      +DXiA++5bQLtJGm0JzWFdgpJ3kwGTalhkIqd/ISd4vnpZ6ZpZn5K6h8Mu8+bmWta62ylq1Qq
      mKZJs1En7qwj9PaI0OA7SHMh9vIzlC58DEmUDe50gCcAP40++H709ENb5ynMoI78LJhFxPJT
      qO56D0skkUGT0txnYf00UXuNwtUvw+KT6NoF9NKTiPYypr8JI0fRfg333GMIrRHTb0F4E6Ai
      jDhAGA5q7zvx576O/Na/Q/mbSK0R6NtO8M0kCIIdE2NpSPFmZksaecnb+LcySw8LYw5+FkVR
      xuWZZ5IYPOdO95huTyNDKa7Iidbwzn+USFpQnNn27FrrbbDxSFiE7ihG9RBmrz5BdVYhrCPt
      cnat2K8TXv4CSjpYxbFkNq9doHjlS4SFKeID7yGMAqhfIRo7hh9pvMWvUS8extz3MMa1Z3HW
      TxMefC9q1/1gJnCRqLOCMlyMha+iDRdROUA0fjcUkp4SKmwlRFkzbyaevBdhFm6vADeTLSbq
      /plaSkmr1cpm3p1EiK2KtDRseasryI1Wh/z58ybQ4H59PcVuIqk/Mjo6irRLhN4E2h0Z2ljE
      ihtofxOtFb7vs7i4yOxqTN07SaPZotVq0em0sOa/gHvxY33niJvLVGpnCK99m/C5f49/4bPI
      kWM09j2KlhZaReiFpymufBMzqCdN+FDgjhCf/Ru65ijdY38P0b6O+dr/B91VZPUQblDHWvw6
      dmcF/E3ibo3ohf9Id/ZxtNZYM29EHvwxklZQYJ/9i9s+wM0kdRIHQ6KpsjWbTWzbzqARw8R1
      XYIgyNCjtyo3ikLl72PY7/zMf7OEHfQX51uWxbVGzK5jP5+FhNPBm8b+7bP/Ge2MsDz+bjZq
      DcrlMgcOHKBWq+H7Ppubmzi2TVw6jltVCcO1YST5k7EjtJSzICkAABEbSURBVO0PYksbLnwS
      pAGGgxE0KFx/nqYzgnHoJ2h3lijMfwF39E7a+9+DicBafpLYsBDFPeBvIkwHdIxuXqW7+2Eo
      zhBZZYRV5Mr1K5jdiFajySGtsQkxzvwZcWEKffD9RNUjt6NAtyJKJbNct9vdURkdx6HQY3VO
      zaO8hGFIvV7vi4p8L5IOwLR/cX473Lim4UaSmjTtdpvZ2VmmpqYYGxvLVpqk3DPGWH8FDJfZ
      msXRo8f6Ik35d3Tp0iUKhQJTU1N9AynJHGsgTkKaQkJ3NSHJmjiFFhY6bKG660jDwT39p3Sn
      3kQ8cpSotYIzcSfCMJHEqNYyxfMfpTN+N2rfj9PothAX/poXVzb58Oo4SIOZcpVff+B+jtSe
      RBd2oWbeRsF1b5tAtyJSSjzPo1wuD01+aZ30JWg2m0RRRKPR2DZQTNPsCzd+ryKEwPf9bWjT
      71VSf6VQKHDHHXdQr9dZWlraqgCTEsM0YfJemvYeHMfNlD6/SqT3ePjwYQBmZ2eTz9fPYl36
      BAQ1EIJo8TnExU9B7BMLBxqLhEvPJQm+pW8hLn4aTI9m5SiqtAd97QVGr36OoH4V4W9gXvwk
      BDXa+96Fqh5CNa7w4W8+zasra7RjTYgkUoqT6jKLpz/N+p73Ujn+XiZGxyh4P0I+wHcbysyL
      aZoUi8W+5hypxHGcOcyWZVGv1/swNVrrzJwYFt0ZjJ2nv2+UhEtzAMP23em4YdcavI80Iy2E
      4MCBA1iWxblz55ifn++R7yb7LS0uZiC8OI4zHFIURdm7EEIwPT1NpVJhbm4OOqtJHUDUI9Jt
      LSHqc6BjVOwj6/Po5jIAYuw4auYtiOYcTmkMa+QgYte91CcexC7tQscdjNYiIurCxBswNs7h
      nP8IV1fm+A+ru3hsc5xdRhdLKO72Ag6IDR6/dLE/W/6jYgLV63XK5fL3bQbudDp0Ogkn6KBC
      VioV2u12FiWBrVqDFLow2EMgzQvkTYh8djgv6fXSWdk0+1uo3ijxld8nfy5gm2mWj/BorZOi
      nqUlxicmaLeaFApFZmZmECQrR77NUiopAhVgfX0dFceMjlaQ0iLsUVn2wzMEsIVlklLCub/E
      bC0T3vWPwCpinvkzpI4JTvwiSAvdXUVEHbSQfOv88/z+2U0iJKecBv/Lnhr/drnEc+0yQmhO
      7T7I7737PZnZ+COzAti2PXRW/G7FdV2cXBO7POltu92mWCz2mSfpF5wq66Bi36wKbaftw5zd
      nTLK+dXnVq4ThmHfajA+Ps6JEyeIwxDX9ZiZnu4r9h92jrS+QgjByMgI7XaLzvocYbeOEILO
      wjfpnP5Ykk2OffTc51GrLyKEIFw9TfvVj6D2v4eoegjr8t8mFWSjx4lGjhN0NumsX8Kc+zu8
      S58AZ5Ru9U7eU1rjzd4GC6HDX627XPRdAgx8beL1VuFUfmSiQHlH8fshQojM6U3riFMF832f
      OI4pl8uZsqXJokKvB1eaHR6c7dP2R/nz7TRDp/tArmVULiw6uN+wgbFTki9v16e+hmmaCGD3
      7t3ZapWaPvkVbFDytRC7qgbeax+lXjlO8eQHMOqzOM05tArRKsCuXSSMujBxLzpoYQQ1MD2E
      PQJBEx21k5re0h70ax+h2Fmmve9dxM59aOlw3/Q0918LONcOeKYzymObE9l9SCF4cO/+vgDF
      j4wJ9F9K4jim0+kkbYYGIiCVSqVPKfLmRKvVwve3mtrlFXan2XRQUVNyqnzjurzkV5rvFGe0
      U1It6Ynm9UV0hl1zMBqVJg2DTp1g7gmoHqI4fRK/tYEO2xjFya0aAsNFG16SD4gDpOkhpEAI
      0CsvUZr/Is1D78MPY2hfx973NqTp9hRb881zL/BHL3yb1ag/QPDIocP847e+nXKxuLVy3h4A
      ty47hRjjOKZWq2X7pDOn4zjYto3rbu8ZoJSi0Wj01Qzkz30jhU0/C4Igg2zstN+NkmQ3esZh
      z+n7fh+0Y9j+Ow0A2IKPb25u4nketm0TLXwduX4GfeKDKExoXAarCN4UbJ6FymHorkHUJtyY
      h6iNXZpEVQ+DFhjFScTsZzDa19F3/SpesUIYRbxwZZ7PnjnNUqPOiOfx8IFDPHrsOJWBQqYf
      GRPoe5FUQTudzo7KnEp+tk/xNcPMLykllUolaevaqz7LD4SdTAqtdcZbmpogOw2A73T2Hzx2
      8Lr57XnH/1YHVmreua7L3NwcR48eRcQRUoVESoFq4c19nsAdRx35GZzZzxIc/3nE1a9idlYh
      Ugi7gj70E1hXH8defYnu/f892GV0HGD0Qs2GYfDmw0e4f9/+7J3uFIa+PQBuQdLITdoVclCG
      mR95pzjl5BkUIRKaxXzIMD3fMFrGVJRSeJ6XHTNsBdlJvptEWTroBp9hcIANM93y10s7z3ie
      x8TERMJkcfBh9O63IKVFHIV09z6CtioIw6F76H0IbxK1+2HisImoHESFPoRtAm8iqSnwa8jd
      D2O7DrbjZdcaxsgxTH5kokDfqwghKBaLQzH3tVoto0fxfT/7CYKAbrc7tMY2L6VSqW92ShVr
      mJJqrbOi+7yznP982L3fLLeQ33fYdVMIxLD9Bn2fwXvKS5oFHh8fp1gscu36KhpJtDmfcIWO
      3oUu7kVrECMn0MJCFGcQzijCcDCXnsJ79Q+R0sATGtFepFQq47iF73iVg9sD4JYlnVV836fV
      amUKn/YKcxxnCxac+3Ecp69kcdh5TdOkXC5TLpezksSd9k1t/nzk6VZn//x5vlPZ6Z7yz7VT
      5Ck/6NLSziAI2LVrFxsbG4SbsxTOPUa8/K3+yJdWCbHw2isUzv4FavM8XW+aWgy6fIDO3b+O
      PXXv95QNvz0AvgMRQmT5hHa7TbvdzkKeeWj04Iyc2vk3ykanip03nQY/z//2PO+G2KRh5wdu
      ykIxLFuc/r/TKpL+PazsM7+apSZSypQRRRF79+4lsseoTzyAHD+RvQMpJeLsX6AXn4DyAdq7
      7odCAsseMyJUbZbC2F6Kpcp3NaBTuT0AvkNJK8VSOERq2+ars9LteUXpdDq02+1tM+IwuZH5
      kz82Var07/zvYbKTct+K5JV82Kpzs+sP+gJaa2zbxjRNStVJlsQRvNH92T5aa3T1MBSmwR1H
      7X5nghjtLLNeOoY1fnyoX/Wdyu0B8F2IEEnnyZ2SazsNhBQucLNzDws1DoYbhRDfNafQrcjg
      AB6097+bQRTHMe12O8tbRFGE53mZz5SuGFkDj+mHoHps61pBjXLtDIXyOIXKxPfl2W8PgO9S
      UkVNZ6FbUYrUdLpZXYDneVm4Na+Aw5zNYWbH4O+dkmS3shql1zZNcyjb3E7XTY/LZ7FThU/D
      tvmo0cjICPV6fat3Qfsauj6b0KrHPZIyd5L2iQ/C9Ju+L7M/3A6Dfk+SOq9KKZrNZh/VOfRn
      ftMvOs3eWgOYlLyk4dG0kCY1nQbND8Mw+rLQgzmKQTt9p0jNoH0/bJ+ULGtwAAxbIfKSfweQ
      sO65rrut82SlUsFunCG+egZ9+L9Bzn0Rj5C4MInsbuDf+atJb7DGFTQSrXfd6Ku5Zbm9AnyP
      kkaHqtUqhUIhW8LzMOW8UgiRZHBbrdZNnWIpJY7jZEqUOtmDdn/a3il1LtPBMkyZ0/Om/KH5
      zO2wHEG67Wa0LbeSbHNdd1ubptQkdF0XGdSwuqugfOJ9j9KaeTtxYZqovDc5QdTCW/wGcuPs
      TU3JW5XbUIjvo2idAOEsyyIMwyxClFey/OwthLgliHaaTwD6zCff9/t4fVLkZQo52CknkGKQ
      0mxzuv9gMktrTbfbzZTf9/2sycegDIL4Bt9Lav6ZponrutsGm1IKy4A47GI4JWK/iTCsjJw3
      uS+Q/jrSreIWR25KTXkrctsE+j5KaoYAGXqy0Wj0fZ7OzqlNnDbxvpGkOQWtNc1mM3Ma0y6W
      qaQJsvz18pIfEI7jZPCEbrfbZ5KksAHf9/u6YFqWRafT6YuA5a89TNJrRFFEqVTKtuWJvIRI
      aOODIODS3BKH9oxiv/rHdLxpnGM/mRTIVI6AYf7/7V1Nb+tUED12rz8Ut+lbVOhRJOCt2SD+
      Awv+MT8BJJYs2BakJ6j0hIoSu3LsmkU4N8fT64+0eQEkn03SxLm265m5c8/MnUH35y9oV29R
      XeSjbuRcLC7QR4RzztfZUWieENmPOeDDruu618LV5iKNBd02m01vA/yFtIfNsswrY1mWXum0
      lihZmym6k4LPGUcZM7qNdh3Rti1ubm4QJwV2n3wN3HwFvP8Bq7vvEdUfEOMJ2e8/4uLDz2ja
      Q63U12CZAT4yuEOsrmtUVfVsIckeAnMsGR82XQgKu1rSOI593k4oekvrTliXjMcwGGWP4/up
      nCK9LueczwOy98Kx2rbFarXaV5zIMjy9+xbv7+6wLq7Rrd/BFZ/iwqWovvgOKP+A6+rBdcsx
      WBTgTKDFZtq0PjD67lmWjT7I3W7XywQl9D0b8HFvLl0dZZH4G2Vh7FiqVFPWXmHZIAa8OGtY
      9ofgopYL9CiKcHt7i7qu8ev9PbD5DV3X4fPsL1ze/4TN5WdoV296eyFeogSLApwRzjmfwkDQ
      +s3xZ5X9GYu8RlHk/XUbgWWQbYz1sczQWMU5vaahGaPrOu/j08UK1TLVTvasxXR9fY31eu3H
      aR5vsEkKROsvX+3+AMsa4OyghVYaT3eTjVGjbF4x19Llee6ZotC4Y9ad31vYeIJ2uRlbeyjl
      aY9lyrjOGnVd96haKqDL3yB9+w2SrPCu3NR9jGFRgDPDuhjAoaTKFBh4s/59KKLLv5umQVVV
      z6y/rkNCaRZ6DD+nYGoxAH0NQcfO8zyYwGdnD5776enJp5jXdd1juHxp9IUF+v8h5MKUZTm4
      F1h/55zD5eUl8jzv8eA2kkuhSpIEeZ4/228wlAahbo9eH78bar2k96TXorVJ6fYoEWAVTWfG
      fY+Cw8xF2piN/ELZt8diUYAzY6gBHatLzPFrua2wKAqs1+tnFao1EjwW3R0bP3QshW2oJdPY
      ohrYC3AU7VtPPTw8DK5fgEOzP821UmWzCYMvxbIIPjO0zo5C2Q82q5sC+fSrqyu/QUcxlOag
      sYOhqO3Q+cjokNdv2xbb7dazTRzf9lWIon0KyGq18uewfr/+fxihVkXjvUyxZcdgUYAJzOXo
      5yBURoSgUDJNYe4uJw0qWSsJwLMpNm2A5wutJWwCm3WrnHNomgZpmvo1ARWA98kCArbci16b
      fu4b8/1Dm9pj9L6GigC8BIsLNIFTCT9woAPnpD4cC2aPAgcrT+UA4BWL1wGgx6ETyjJR4G1Q
      jALILNU4jns8PiPG3AnHEpI2AKeEALeaKqtkj+26zjNhp8IyA5wRFDg2tQuF8rlY3e12R1WT
      jqJ9Pg13p6nVTpLEB8Z0tgixMaE4ABD2wTXopkwOBZbZsSweVtd1r+EIj6ULpUE7e05V2lMa
      pUUBzgzt6MiEMxVEWlKbzjznoZMmJW2ovLtzrpcuPZTePHUeKpKlUEPpFZbyzfPcN+TT86j7
      NBZ7OLX7AywKcHbQLSmKwvu7ZVl6jrtpGq8Uuriccps4dhQdMlLpevC7NE19ORWboDY0HgUz
      jmM8Pj76dOa5VpgzRJIkXglDQjzECClde0rLTywK8C+BwhrHsbfaZbmvmc9XPvg5wm/H5uaT
      7Xbbcx/Uf1aXKAR1Rxios6XYeRzPaz+3exTsb/heF/Eh10z/X6fEsgj+D4ACq/nyGsk9JmVa
      x0zT1McJrBXVXJyxMfRYXWQTVpAVrHtqFdiyS0mSBIsLq+Bbd+pUcHNC8AvOhyiKvI8NoFdy
      5TUPnwtjzca0OThDoHs2ROFay8333LfA39P90zKLXbffacaUaTsbWFRVdVJX6G83Y42Zz4u0
      3QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
